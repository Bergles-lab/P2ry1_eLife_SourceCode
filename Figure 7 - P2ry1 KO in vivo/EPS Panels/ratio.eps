%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.60.1 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.5.0.944444 \\(R2018b\\). Operating System: Windows 10)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 54 76
%%HiResBoundingBox: 0 0 54 76
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font NRJJEV+Helvetica
%!FontType1-1.0: NRJJEV+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /NRJJEV+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 929 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 53 /five put
dup 75 /K put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 84 /T put
dup 87 /W put
dup 97 /a put
dup 105 /i put
dup 111 /o put
dup 114 /r put
dup 116 /t put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB95B33C0D340292570CC0A750D3305A801A0BC785104DA99313C7BB0D
BCD1AC9D91544DEFBFF5A12FE29BBC46A9F809F23DD581ABB80267058A601737
5610999B55E336A3117D4E45173767CF87095D51754718A78342A34B46F8840C
61FEFDA287DB1B9FD0BF24DF0128CA287E9C8D780262D540D859036E9D67C03C
BB5E25A668123167DDC56EC2518841ADE3FB78AC8F12189EFDDAF610855934C4
DF3A5FEE1A24872A70DA038DDAEA1FB47B6CC015473428B477C28A90B40AD298
4B1F02A11888480C292E11DE36244E924673AEF51718C8DF726B51C6AF6C2892
82E87A7C56DC957A5A40015932439FB650B75FF645D2EA1A60BF4642FE61E0A5
BD2B1681457AA85374514C1592A735550893850ED66FBFD097585CA35C100CBE
971549A5EEB99645C79831CBD3D235FF6131D4822C82E0479F04F5620EE40975
1336B1EA9A9894DBFD008A5A81A1A611B31381D6F7294BA3D0C001EADD19EC97
8B1C753FF475B15DAE49B8A6933A057F5D8103B2F178F9E6A7A792A35507BD98
317F9A6ABC86854968803947CF794123A9E967861E4959E289673CDFA73C47C6
70779A9F0FC3472005E0A175238FB1FE6A14E3FA16C6CE39E7602A2DD7C5BF92
34A9E71D8AFAF4733CE95A239351458CBA29D97837C0906D33A7B3AE156168FE
FBC6F13D51C8DDE140C7E552096960E769C49354A891DEB150EBA2C731FEC050
BBA665657C5244B5E99CAE485B9A59D435F2FA59360BA7E1A08313364A29FBC5
615445A9039FE20F866A7AF98B33327652567706CB614905843974BB30B53E22
C3733A62259395CAFC50A14A59FDD5CF2329E72EF441ADF4C699D24C3BCE23FB
8FF5CAFC1202A34F6D33DD48B464E4D255D403CC566854AD3AF2B739733470F3
B95A4B09582EB7C7F41795F58305D7B9F48F435558FF0C915F47380EE51D2805
A7F10034EE3525C0B395E4107911E19A0FC9F862F6AF09A514605CA074CC13F4
89DE5700B7B8D2FDD90B764690D90C556A0114FB96D2EE212954958AF15D3003
92E65C7C9FD7901A80D52AC9D962A05B62A2A87E146A7594F9E8A6E33FD594D4
7674B9774B44CF087379216B1FB8ACAE599CF730339287759B97687330D817D2
097530B233A240DB71FAC852A3121676B081DD5196B4C6826D92E319F00FA30B
E4F3C9F13D1CA1BDFAFA3DEE89497239138E27F4939410AC67ABB0056FB69630
F977A7DD48A27C3FA203605171514E3F0DF9040C14673FFB196D9D68350F01F2
453208DE89A1BDE813A12FA617B74A159C29513E7B5925FDC4A3E95D1CACB574
0D55DDB4ED9A7348578C393F2A3FE6790EF6E10312527904BED24E9119A09DC7
1F14079DACB3E3E1BF6FE9299BAD7F437DB0F85ACA9ACB39240B86988C278033
A0C9898475E978AC6B1D32B8A809206DB35F78F7567C24C163E1D403995BCC39
1A36EBEF83C64B4B7F889BF514617A879EDD58A0269FF27E95FDA42A84F483D2
6720524B0E643A4CBD24F2A7BF4D112BD4DD0632C8C55A766C512C5AB76A7E7A
9A1E4060AEC2207E2A76E98B805EFF6D36AF24EB373FC9BC31897085B3271045
56814C41F6FA79F864C1F3DD7F995C0A829BC03825B6736E54588A3C5A9F3EEB
7E09739AC7EEE23FE44E42CF8AE5DD8069F799DD7831F5CF126AC4FFBD7CC91F
5061EB33923A4BAEA63C850B5E78D840485D7207FDAC33ED299741201DFE876D
CB4118F219E9563D16301201E1BE22025B6237757CCFD4292409C01AE8973211
08EE9BA95D841CFFAD7CAF6FD2A37B02B34744679CE341BDB9356627381E2699
6EF741D2867B3E1A74A8577108A038EBF6F51F1AB4573F4B157A90C7882D2C27
74A3F4D5E36F52EF459EF286FD6DA9DAA6317B7F2EB07F0F4DBBA7E058994838
7FB0B11CD0B128404D4AFB65A4BCF985AC33FE3ED86B8F3D54922A93D4C13629
6090357D5368780DDD9DF837DB8DA47DF2B6518A842CD40D7FCF739416C97B60
5B2B46522C38020058B2EB248609A3197FA22DBF1956FDCF160D6A19A7DECC88
7152832A448148624F0DBCEF5391BF2A0B24D96BDD9B73C839539490FA695019
1CED3514AFDE7221EF692A62082FF5D21F94F8568583015775775937DEEFAE64
8C6030494EAE87189906C8B595C0FB5507CB9E6F7CFA1F3DE7BC1B4F95F08254
9D4C860A698741614321F53CD7845494BC001E94C7DB4E585E5ED516924EF0C1
95546BBD4D5AA7BE2523FC65A60FFD83647137F55B7C4044E1C2C9A40D560EB7
FFAFCB47ED19E992902F0336F4837273CF6CC9083CCB0EFDD7EAAD3C1E438855
D457265081487AB7C70539D4B29B6871136BE9B77786984C4B8A65609F77234B
D7210B14693B57678888D4C0C5478731F563FF4DB71A567022A6D45DC75853B2
2068DDD15B6475AAFCFC04B03C0210A04BE14765DB4B6785EC43EB16B700D645
D7B5398139ACB85DF90B99D5190647CC45192F7286D117FDD07D8E4F99B25BE3
F35810868FE1B5A63CE19D34C9079B9C939230F11EE95F7D6355E30E273F4942
53
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /NRJJEV+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 54 76 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
0 30 900 720 re
f
0 30 900 720 re
f
232.5 127.5 180 592.5 re
f
7.5 w
2 J
1 j
/DeviceGray {} CS
[0] SC
232.5 127.5 m
412.5 127.5 l
S
286.5 127.5 m
286.5 121.574 l
S
358.5 127.5 m
358.5 121.574 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 23.025 4.00742] Tm
0 0 Td
/F8_0 6.99975 Tf
(WT)
[6.607764
0
4.276847
0] Tj
1919.3 TJm
(P2ry1 KO)
[4.668833
0
3.891861
0
2.330917
0
3.499875
0
3.891861
0
1.945931
0
4.668833
0
5.445806
0] Tj
Q
232.5 127.5 m
232.5 720 l
S
232.5 127.5 m
226.574 127.5 l
S
232.5 423.75 m
226.574 423.75 l
S
232.5 720 m
226.574 720 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 16.7574 10.125] Tm
0 0 Td
/F8_0 6.99975 Tf
(0)
[3.891861
0] Tj
-5.25 29.625 Td
(0.5)
[3.891861
0
1.945931
0
3.891861
0] Tj
0 59.25 Td
(1)
[3.891861
0] Tj
[0 1 -1 0 8.25742 33] Tm
0 0 Td
/F8_0 8.00025 Tf
(Ratio)
[5.776181
0
4.448139
0
2.22407
0
1.776055
0
4.448139
0] Tj
Q
/DeviceGray {} cs
[0.7012] sc
300.645 513.223 m
300.645 521.031 294.309 527.367 286.5 527.367 c
278.691 527.367 272.355 521.031 272.355 513.223 c
272.355 505.414 278.691 499.078 286.5 499.078 c
294.309 499.078 300.645 505.414 300.645 513.223 c
f
300.645 495.586 m
300.645 503.395 294.309 509.73 286.5 509.73 c
278.691 509.73 272.355 503.395 272.355 495.586 c
272.355 487.781 278.691 481.441 286.5 481.441 c
294.309 481.441 300.645 487.781 300.645 495.586 c
f
300.645 486.074 m
300.645 493.883 294.309 500.219 286.5 500.219 c
278.691 500.219 272.355 493.883 272.355 486.074 c
272.355 478.27 278.691 471.93 286.5 471.93 c
294.309 471.93 300.645 478.27 300.645 486.074 c
f
300.645 491.52 m
300.645 499.328 294.309 505.664 286.5 505.664 c
278.691 505.664 272.355 499.328 272.355 491.52 c
272.355 483.711 278.691 477.375 286.5 477.375 c
294.309 477.375 300.645 483.711 300.645 491.52 c
f
300.645 493.695 m
300.645 501.504 294.309 507.84 286.5 507.84 c
278.691 507.84 272.355 501.504 272.355 493.695 c
272.355 485.887 278.691 479.551 286.5 479.551 c
294.309 479.551 300.645 485.887 300.645 493.695 c
f
300.645 458.098 m
300.645 465.906 294.309 472.246 286.5 472.246 c
278.691 472.246 272.355 465.906 272.355 458.098 c
272.355 450.293 278.691 443.953 286.5 443.953 c
294.309 443.953 300.645 450.293 300.645 458.098 c
f
300.645 529.441 m
300.645 537.246 294.309 543.586 286.5 543.586 c
278.691 543.586 272.355 537.246 272.355 529.441 c
272.355 521.633 278.691 515.293 286.5 515.293 c
294.309 515.293 300.645 521.633 300.645 529.441 c
f
300.645 522.289 m
300.645 530.094 294.309 536.434 286.5 536.434 c
278.691 536.434 272.355 530.094 272.355 522.289 c
272.355 514.48 278.691 508.141 286.5 508.141 c
294.309 508.141 300.645 514.48 300.645 522.289 c
f
300.645 448.457 m
300.645 456.262 294.309 462.602 286.5 462.602 c
278.691 462.602 272.355 456.262 272.355 448.457 c
272.355 440.648 278.691 434.313 286.5 434.313 c
294.309 434.313 300.645 440.648 300.645 448.457 c
f
372.645 385.59 m
372.645 393.398 366.309 399.734 358.5 399.734 c
350.691 399.734 344.355 393.398 344.355 385.59 c
344.355 377.781 350.691 371.445 358.5 371.445 c
366.309 371.445 372.645 377.781 372.645 385.59 c
f
372.645 356.105 m
372.645 363.914 366.309 370.254 358.5 370.254 c
350.691 370.254 344.355 363.914 344.355 356.105 c
344.355 348.301 350.691 341.961 358.5 341.961 c
366.309 341.961 372.645 348.301 372.645 356.105 c
f
372.645 399.859 m
372.645 407.664 366.309 414.004 358.5 414.004 c
350.691 414.004 344.355 407.664 344.355 399.859 c
344.355 392.051 350.691 385.711 358.5 385.711 c
366.309 385.711 372.645 392.051 372.645 399.859 c
f
372.645 361.422 m
372.645 369.227 366.309 375.566 358.5 375.566 c
350.691 375.566 344.355 369.227 344.355 361.422 c
344.355 353.613 350.691 347.273 358.5 347.273 c
366.309 347.273 372.645 353.613 372.645 361.422 c
f
372.645 367.324 m
372.645 375.133 366.309 381.469 358.5 381.469 c
350.691 381.469 344.355 375.133 344.355 367.324 c
344.355 359.52 350.691 353.18 358.5 353.18 c
366.309 353.18 372.645 359.52 372.645 367.324 c
f
372.645 424.574 m
372.645 432.379 366.309 438.719 358.5 438.719 c
350.691 438.719 344.355 432.379 344.355 424.574 c
344.355 416.766 350.691 410.43 358.5 410.43 c
366.309 410.43 372.645 416.766 372.645 424.574 c
f
372.645 424.563 m
372.645 432.371 366.309 438.707 358.5 438.707 c
350.691 438.707 344.355 432.371 344.355 424.563 c
344.355 416.754 350.691 410.418 358.5 410.418 c
366.309 410.418 372.645 416.754 372.645 424.563 c
f
9.9975 w
0 J
286.5 493.156 m
286.5 484.141 l
S
286.5 493.156 m
286.5 502.172 l
S
/DeviceGray {} cs
[0] sc
306.504 493.152 m
306.504 482.105 297.547 473.152 286.5 473.152 c
275.453 473.152 266.496 482.105 266.496 493.152 c
266.496 504.199 275.453 513.156 286.5 513.156 c
297.547 513.156 306.504 504.199 306.504 493.152 c
f
/DeviceRGB {} CS
[1 0 0] SC
358.5 388.492 m
358.5 377.609 l
S
358.5 388.492 m
358.5 399.367 l
S
/DeviceRGB {} cs
[1 0 0] sc
378.504 388.492 m
378.504 377.441 369.547 368.488 358.5 368.488 c
347.453 368.488 338.496 377.441 338.496 388.492 c
338.496 399.539 347.453 408.492 358.5 408.492 c
369.547 408.492 378.504 399.539 378.504 388.492 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font NRJJEV+Helvetica
%%EOF
