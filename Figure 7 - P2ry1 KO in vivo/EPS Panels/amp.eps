%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.60.1 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.5.0.944444 \\(R2018b\\). Operating System: Windows 10)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 52 77
%%HiResBoundingBox: 0 0 52 77
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font TBYDRU+Helvetica
%!FontType1-1.0: TBYDRU+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /TBYDRU+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 929 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 37 /percent put
dup 40 /parenleft put
dup 41 /parenright put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 53 /five put
dup 65 /A put
dup 70 /F put
dup 75 /K put
dup 79 /O put
dup 80 /P put
dup 84 /T put
dup 87 /W put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 116 /t put
dup 117 /u put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB966FC1848061C8C2792EA837CA2980815FE1B4759D42110B21023348
675B4A4C5BACC0A5FCF9882D40B72C58931AF517DF541CAE397EEB49302082D4
84EA76FE6865FD0D5D635C2B1D6115C9C3A491DB57199900FDBCCCF0994EAB43
BAD4BFB4DAC85771D629060A7DA4A7AD6A52BA4335A368FF9168D634363A2F56
4890A98BD9FFE2835C234EA538E30001113EC60E2D729746EA7FBB08CB87B9F0
73AC3F6B494F85098AF9B82ECD56720BCA9EC97AA76A6C5602F97E76973F097D
DE235AC76B056B1BC79BDCD4B48F99C13CDB6E23169C4B1D30A7BAC8A8E4ED0F
4A72BA0371F72734DBDEF0C4C80AB928FB67A5D518B203638D9882BB64D889A8
9C0F5FAF84B4A0DA3D7A49B84541AE00C37BFF64C9DCB7ED06CAF5C749598943
A9C82F8466AD27E6D820952ACB37A9DCA4AC6E37D7E223042AD9687BACB452B8
ADB31E3CF435DF5E071BA12E77224C915B23085B32026AF62C89C53B956D27D6
ACF0B56B6AC8AA1EA27A076D2DEA600C734F6E9B13CDD737D29A4EF90B9BA57A
FDA9E71B5A35D54D860244A92EA3AEEE0EEE459F87B3D8E92F292FE58A094A2A
29EC2B61583CB065FBFA705987AB1606C850789B0B8ACF330848CF047345AA5E
FC6FBD5D31B8CCE6DEEE0B9E0788E9E4FE6017DFCC03C224FB6C4B20EDABF0D4
6C20C572335323703D7C9305587BE9E817B4966BFC1131885BD585C055B15F2F
83EED81732A657959C282CA347E34FF00E297804096284F2D4156CC450353832
4814F907933CDB1F61C797C53471F6A347EA23361889F1A69BD7EE02CBE78A2D
88B6336ADAAEDAC447B40B22BF91CA287D4583264CCC4A511385088B2058D79F
3811B322ADB2ACD14751EA8DDF3B31351F7371A154045773B74A32CD5C0381AC
FF803BAC7DD638E9D29474D190DF86A3E1AD2EBD4C259D12D3ED0C3A2201EEC4
E926D6262D5FCAFD084A71722CC174B667B8E24C892E97B98B26C0E2875FEB7C
56CE2A9EEA632442F0BAC5653A034F508C2C85D16A02BA8B984589B3C76CD3C7
1C923EF144D65D0C9240F7F7D20EEBD665C418BE2431049F31BD7D6DCB08B054
BA5671359D0E498929A4A69B563FC60968AEFB36BB9A9C8716380852CA037F7C
F01253D29AA8023E014A58BE7154C47822E006F4C0D7F64F0DD0073936DDA329
AC11E2E59456583EC85882C90024A2ECBD420B46C18532575F80CEB15408E1D9
F597F1C45FA457149FFEC8CBCD88A795B0D90EE76A354034CC40A751F64CA5DA
5050F014249EF65C06E50252F9D8C3CD6020D4C7C15A112FDB9F089118DEE6C6
B552D4DF4FB35AD3EE76C53DDBF19E8135D136C894AD444EBC6120BA2E7C5841
5EFBB995EC83AE5834C72678DD5C70914BA9104FD40FD9A8EA00D353141E4BFA
048256752BCAD598B54BB80D8FE5B37E1C2B7CEAAC56BDC7907493D356DA3725
721EEC8D09C42CFDF5C788B8061C32D8A9C83A28271D4CBF5716842236E23C98
E2AE27AC5E691792055A4889DE5A7F2150D1D8370455213839150C044E7903E9
09E0FD143F0AFDD0D0C5866FE0E45FB93C00930017874AE8FE574267DDA93A6C
0E4A63E83A8D9D5949A9E3DC7A03B2E7AFB0F194BEFA9478B805DDBB00D049A7
92DCBEA0C77455392E2A7840B0CFDB752293D65D9364EE41F3AE81A920B776B3
8C5198D96DC7A3E20306D50CE52A59453F40553270D4D5DC18D165C8C2DC6C90
A6723DEABEA8528AC9A30098FC48876E2BAEE9176F8C014454FACCD1A8C896F7
9746875826A44D5B052614EB104ADA7397C786239DA8D09F44BA6E5C89DF6343
34B90DAD374FAB1CB0D4BBD0630ACC7B748864EC241128C035703AA2D218553A
744BC22D7A119AB412471CEE9C7AFFB0220FCF151DFA05881D4E67F473FE405E
9E8B0AFC58F93C854BEA3C93CFB1F2D88C96CF8D66FEC36066E94DFDB311BB8F
1227A4B93318344075000886092895053EF42F84606286BFEA932F3F228A3648
9E1955F3682AF5E524367E90D374B8007A79E3A2984C1095B80477CA795E0B35
60F6E3970B9BDF19D093FB93B148B7AF804B0F2C5C3BAB35C6DCF6D18ACDB0FA
377B5603B17CDC83EC63E035C780D35BC73DC6F661B5D7D8D5698D5104D4DBF0
EABEDD3D9B37CDC0968BF74D765E9C7F3B7654FD420BF476FCCF9E4931858C03
0412DF7CEA4064AA72FE80D5700BFB4C81BE1C3458DD01B0B433BDCBC1787945
EC52CBCDB32AFBC0D60D2E4566EAA8E78EBC65EFD0A5684269B2575066B8696A
601D6827101CC96B27981A71DDDEB067DE621403E5C468FF1302BE73215A43CD
E1E60267FD5C11F7D5A1DB570C4ADE4B652D6DC49FAE8263E64D91243B362EBC
F92172AAE022E2FD3CAB6A7890F3E79B60489716BBCAAFFCA80FF29F0724E310
1C1BC69E0F51C85154C663973DC2DAAD692C96288F3077D2AA68AB9A67C58C87
12FC8AFBA8CF48A7190FB8C9094225DD33FC9B9598DF4462938B0F0B83966DCA
17D23B1E38B9ABD78BA75B11F52FC14CDEF0F414EB140B120DD2F1DBEA84EDB7
D1DF4FEAF5AEB15C0EB46458345989D3A88B2BD297E4307BC45EEDB837346D20
922FAA9C1D9C185BFC923634AC1EF820CC8E6C5F00366DC5F64766816FBE92A3
DCAF9C91C3B2F7E274037A533366F3097658E20F59BC989D0D78B73713270D5C
D7AF397F0E729A56C53EF404D5F34C4C8CAC607F5DA4635B91E8A46555487F20
673DB7E1A94CF6724516F48BDDE38F033565DE844A08890FA0DAF97E5B1B8EF4
DEC2B6D9B62A476631BF5685954A912161CF8C42152B08B23562217DA1D7D9F5
00F86D1FA0FF5364AA6D248EA94F5A61836A079003ED3DE7E8EA15D5C2A22E34
5A3EFFB1C1F7430B12963112591E340DF87D0C4B6D825935A016CAC4152735E0
7D672DCA72FBD05155957B4A42C3E1F898A09463EB51B370AADB0B8A5DD57034
BBFF22B420D9B389CA308BC1EB0A9C41959E92F3D3139CAE00A7D7982A66B322
EC19D9A121FEC0A0A15DCD006101A5604BC9B510F438D0ACC46C232291E784CC
9899777A2D331964DD1A343616CA7621C4F9B9DB99B4ED5B53AC178252551DE2
B40FB6F70D7215BA3C6D0DB84D65CA2A49AB412234B2525A62D7768271124DA0
A087392EE1F04DA3CEFA5BB8BA054A4D150FFDB871DB3D6891CCF86B8A2BB078
9FD68DC5678E913D8581C0759FC4F61BA62EFF79B07A33F04D655B95B69BDFD7
32B7F3C50B6F304F35C1F5F6F835CB7C0E6F22201DFCEA5B15F44E65A9E1DFD3
ADAECDFC9D43DF80082339C1BA77D7D609625B3EB104CB867FEFF8C29A11F830
FD52219B1105C9C1EADCE7ADFF0D733B430F8DB82F16989DFD60D36A204BF007
378224F551171584C322AFDD0E397F6F9D8A4A7E4DAD500F2D6037A7926649D5
0C725FB95A191BE8A7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /TBYDRU+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 52 77 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
-20 30 900 720 re
f
-20 30 900 720 re
f
212.5 127.5 180 592.5 re
f
7.5 w
2 J
1 j
/DeviceGray {} CS
[0] SC
212.5 127.5 m
392.5 127.5 l
S
266.5 127.5 m
266.5 121.574 l
S
338.5 127.5 m
338.5 121.574 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 21.025 4.00742] Tm
0 0 Td
/F8_0 6.99975 Tf
(WT)
[6.607764
0
4.276847
0] Tj
1919.3 TJm
(P2ry1 KO)
[4.668833
0
3.891861
0
2.330917
0
3.499875
0
3.891861
0
1.945931
0
4.668833
0
5.445806
0] Tj
Q
212.5 127.5 m
212.5 720 l
S
212.5 127.5 m
206.574 127.5 l
S
212.5 324.996 m
206.574 324.996 l
S
212.5 522.504 m
206.574 522.504 l
S
212.5 720 m
206.574 720 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 14.7574 10.125] Tm
0 0 Td
/F8_0 6.99975 Tf
(0)
[3.891861
0] Tj
0 19.75 Td
(5)
[3.891861
0] Tj
-3.75 39.5 Td
(10)
[3.891861
0
3.891861
0] Tj
-3.75 59.25 Td
(15)
[3.891861
0
3.891861
0] Tj
[0 1 -1 0 7.75742 6.75] Tm
0 0 Td
/F8_0 8.00025 Tf
(Amplitude \(% dFoF\))
[5.336167
0
6.664208
0
4.448139
0
1.776055
0
1.776055
0
2.22407
0
4.448139
0
4.448139
0
4.448139
0
2.22407
0
2.664083
0
7.112222
0
2.22407
0
4.448139
0
4.888153
0
4.448139
0
4.888153
0
2.664083
0] Tj
Q
/DeviceGray {} cs
[0.7012] sc
280.645 334.738 m
280.645 342.547 274.309 348.883 266.5 348.883 c
258.691 348.883 252.355 342.547 252.355 334.738 c
252.355 326.93 258.691 320.594 266.5 320.594 c
274.309 320.594 280.645 326.93 280.645 334.738 c
f
280.645 574.547 m
280.645 582.355 274.309 588.691 266.5 588.691 c
258.691 588.691 252.355 582.355 252.355 574.547 c
252.355 566.738 258.691 560.402 266.5 560.402 c
274.309 560.402 280.645 566.738 280.645 574.547 c
f
280.645 508.938 m
280.645 516.742 274.309 523.082 266.5 523.082 c
258.691 523.082 252.355 516.742 252.355 508.938 c
252.355 501.129 258.691 494.793 266.5 494.793 c
274.309 494.793 280.645 501.129 280.645 508.938 c
f
280.645 446.727 m
280.645 454.535 274.309 460.871 266.5 460.871 c
258.691 460.871 252.355 454.535 252.355 446.727 c
252.355 438.918 258.691 432.582 266.5 432.582 c
274.309 432.582 280.645 438.918 280.645 446.727 c
f
280.645 364.492 m
280.645 372.297 274.309 378.637 266.5 378.637 c
258.691 378.637 252.355 372.297 252.355 364.492 c
252.355 356.684 258.691 350.348 266.5 350.348 c
274.309 350.348 280.645 356.684 280.645 364.492 c
f
280.645 426.43 m
280.645 434.234 274.309 440.574 266.5 440.574 c
258.691 440.574 252.355 434.234 252.355 426.43 c
252.355 418.621 258.691 412.285 266.5 412.285 c
274.309 412.285 280.645 418.621 280.645 426.43 c
f
280.645 558.195 m
280.645 566.004 274.309 572.34 266.5 572.34 c
258.691 572.34 252.355 566.004 252.355 558.195 c
252.355 550.391 258.691 544.051 266.5 544.051 c
274.309 544.051 280.645 550.391 280.645 558.195 c
f
280.645 575.453 m
280.645 583.262 274.309 589.598 266.5 589.598 c
258.691 589.598 252.355 583.262 252.355 575.453 c
252.355 567.645 258.691 561.309 266.5 561.309 c
274.309 561.309 280.645 567.645 280.645 575.453 c
f
280.645 492.332 m
280.645 500.141 274.309 506.48 266.5 506.48 c
258.691 506.48 252.355 500.141 252.355 492.332 c
252.355 484.527 258.691 478.188 266.5 478.188 c
274.309 478.188 280.645 484.527 280.645 492.332 c
f
352.645 432.539 m
352.645 440.348 346.309 446.684 338.5 446.684 c
330.691 446.684 324.355 440.348 324.355 432.539 c
324.355 424.73 330.691 418.395 338.5 418.395 c
346.309 418.395 352.645 424.73 352.645 432.539 c
f
352.645 339.871 m
352.645 347.68 346.309 354.016 338.5 354.016 c
330.691 354.016 324.355 347.68 324.355 339.871 c
324.355 332.063 330.691 325.727 338.5 325.727 c
346.309 325.727 352.645 332.063 352.645 339.871 c
f
352.645 634.539 m
352.645 642.344 346.309 648.684 338.5 648.684 c
330.691 648.684 324.355 642.344 324.355 634.539 c
324.355 626.73 330.691 620.395 338.5 620.395 c
346.309 620.395 352.645 626.73 352.645 634.539 c
f
352.645 389.805 m
352.645 397.609 346.309 403.949 338.5 403.949 c
330.691 403.949 324.355 397.609 324.355 389.805 c
324.355 381.996 330.691 375.66 338.5 375.66 c
346.309 375.66 352.645 381.996 352.645 389.805 c
f
352.645 437.648 m
352.645 445.457 346.309 451.793 338.5 451.793 c
330.691 451.793 324.355 445.457 324.355 437.648 c
324.355 429.84 330.691 423.504 338.5 423.504 c
346.309 423.504 352.645 429.84 352.645 437.648 c
f
352.645 542.148 m
352.645 549.957 346.309 556.293 338.5 556.293 c
330.691 556.293 324.355 549.957 324.355 542.148 c
324.355 534.34 330.691 528.004 338.5 528.004 c
346.309 528.004 352.645 534.34 352.645 542.148 c
f
352.645 564.633 m
352.645 572.441 346.309 578.781 338.5 578.781 c
330.691 578.781 324.355 572.441 324.355 564.633 c
324.355 556.828 330.691 550.488 338.5 550.488 c
346.309 550.488 352.645 556.828 352.645 564.633 c
f
9.9975 w
0 J
266.5 475.762 m
266.5 446.086 l
S
266.5 475.762 m
266.5 505.441 l
S
/DeviceGray {} cs
[0] sc
286.504 475.762 m
286.504 464.715 277.547 455.758 266.5 455.758 c
255.453 455.758 246.496 464.715 246.496 475.762 c
246.496 486.809 255.453 495.766 266.5 495.766 c
277.547 495.766 286.504 486.809 286.504 475.762 c
f
/DeviceRGB {} CS
[1 0 0] SC
338.5 477.316 m
338.5 437.469 l
S
338.5 477.316 m
338.5 517.156 l
S
/DeviceRGB {} cs
[1 0 0] sc
358.504 477.313 m
358.504 466.266 349.547 457.309 338.5 457.309 c
327.453 457.309 318.496 466.266 318.496 477.313 c
318.496 488.359 327.453 497.313 338.5 497.313 c
349.547 497.313 358.504 488.359 358.504 477.313 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font TBYDRU+Helvetica
%%EOF
