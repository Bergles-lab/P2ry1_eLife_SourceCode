%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.60.1 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.5.0.944444 \\(R2018b\\). Operating System: Windows 10)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 48 76
%%HiResBoundingBox: 0 0 48 76
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font XWTFYI+Helvetica
%!FontType1-1.0: XWTFYI+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /XWTFYI+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 929 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 72 /H put
dup 75 /K put
dup 79 /O put
dup 80 /P put
dup 84 /T put
dup 87 /W put
dup 97 /a put
dup 100 /d put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 119 /w put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB966E33A1007DCC801D574E5901DDD88D9620EDABB066686F036DC338
90D061C2B4859CE1145A7F356FA1ACE6BC87563C7E3CAA18015EB1B078DE9416
918D5DF8D25A1389F3A4B372B599BB4887352CD8EC6EB2860D645BAB5F062F95
4160B76E0D63044E2F020D89125184ACC5131C1CFABD9F4C10F813E16EF61F59
115370468BFAE475522CD6AC35D761A5F2600D0E0A44EAAE4819351F0CA39A57
00B57929C01B80032A5DEF9CE714128921486155BA4DAC200DD4BA5AB1FAB45D
E2B66AB38EFAF29379D8AC1C4973AF26D22888173352680C1CC7A7191BADD96D
986EE4F8CD9F4BC87CE794DE259C11B884BD14DB6F1949A3E8F5C6A999182699
BD45A340331EE85B2680071FDEA4F06D741154634B47D08722C4163710721583
87283A3EF70BB42C87A2034E6B7559A111E3AAD42F1FA0E84782491ACF1E01C4
37A90F5A0D1E4DE7C03628C8C3D1BCF6484C3652095E0E0604D3FB7D580E2999
A72B1FF2D4344E551B7BF5A24130D72D092BC184479F3990943794B79F295697
93A7312917C6B8A2840F10259577B4C5646FCA7D947BE7A9B631EFA1243DE682
EEFA1E8B5FD892C009B927754206FA7B0FFC03291B9005779D1D0F90B550D6DA
1800AD240C052DCA116B1ACFB0F5B0A8184B6AB4FDAFC55FCB40C8463C813152
3C7AED678FDE30F1BB4C5FC8D658A18B895148AC2C8ABE75653F35B597A9D23C
C1AC2B705B14E9CCC5A1BA4578E443AE90813B8261E3B5E4DC00A9574FBB0040
CB94E61E1A16C2A5A427AB926C40C94B9C98E2A35165DB30F5478954704796D9
A4FD10B1034E65CC5D88BAE812CF749C7E84D977A858554651203360B8397CD1
9557D821AF4D055473D18E3B5B83ECDD12ABB34C5A0F9B33D2FD996A4D3EECD8
3AB1F581EE55448EC3DE024DA6087696AB6E0C597CFBA8B47BF84123DCE69942
7CB29DFAC99E281386C22FD2A5D5142E7018BDC9E17798B3C9904D8BEBDD886D
7A657CF415FF07416D74536FC98DA3D3C3E1CEB568191C151668CEEF84F24887
3D79FDA9F3DA000C71971480ABFDD4BBD8279178B9D660AA6BE5AD7A3CD49890
76C1C4CF4545AC604A4BE893A351ACD628492903B9861BE5EFB56935CB03C615
1A7DB628332B5A22948AE5B2B8A178D632E73E4DDAD6FB6C95106322302A8E55
FF2CC78F1FAB370C179AC40308DD04A151874DAE6647586589249A4DE14D44EE
80C2BBF4F4350EF1DE2957F2C25BC1DA8A5C9CCFDCC7AADFCDD0AA860A0ED270
41BCC742D5702798975321658003063B1B9D7FF0B6560171D6600B7EB069875C
BDA45A35CFF2B3D9049EA8E0A5FFEF6157D0CB1C1650985FE1768C1AC9372B59
BAC220684B3DEDBC80F273E1F1CE675D734552D52F7654EE07826C397092D5BD
87EC36CD464095042B01D5DB65707E5B88847EF5086E7785C300BE3754D17A4D
CA9C3EC248608C37C6C6EFF85581A46724AE831A70C66B2EC1C6F8C6B29D5A54
3DA43BD44BAC0F195DE5D400FC6D22505E8E2E87091F249B167994BD6D7DAFEB
191F58E4475F4ED7BB4132A3E99AF6695ECFE726443FB2F500E3CB6DBDE3584B
C16A62AC47D90D9E41154CA5B5E56655FDBA7147F4B0F2889ED516031C5BB19D
6EFEC11558CDB440190F1180A9C0A6533BAA86454301E9620FAFB801762594D0
11769BB7C8ADC2904052CD87537BA5D0E7A04E737FBC93371F8EF6F129364977
AEA138C0385959CDAF5855961B1E716E0054ACAB766E677E4DBD5EC233C9479F
B77973FAA0D8346EC560D0E3D6368574E918AEF469BFBFCB62CD82E086B302E5
B8EE9B092D95BA51D8A1D7AD058150D9E7E3DD2F4D24DFFBAD7B396C0813D705
7F600BF67A2BF48D2F07102798BDA03F38E7B53E7C6BC1B3B73C810D69EDC053
8E2E2A9EB9ADBD97528AB4D9700FA8DEE321980405C88EA7FF2D68DC46C01CE2
391190D1DD5805C7BE1F92D16F3AE5115790189A5E5BA9D0C06DC9988DFB0E72
C1CE0BA84181C136C92D5B94F02411503F1683517C0376A7DE47AB6A9ED3B241
53BBAA578727DD29952CECC581795BA59D46ED73192FC24C26C1A50E4E251CE3
784663EE28DC98A85E5133EAC022AB7CE03CD31BFD77115D6B90C50493B3ABE2
F96AABF75782E9F4E6917044730212E47FFEE97EC3910295221043FA8A5EE075
AB1A42CD3397330D3AEECFF1022310162E3324E8AB1BC53980198666D82F4F59
0C74AF6D428DC4F52BFEEA198F6CC9559977215081FBED68F6C99037D2DAAC28
4D2013C01E4560D5DD8C0E1946CD953C07F025C207924E2BDE8FE9DEA43BAFE5
9127EC2482BDB2D93028670D826BDA73101444DC1D8A939028202B50BC7F4075
08024C9D20248F6600760AD8B01178898C8EBCC9039068CB184D5A5A0E00FD7D
91FC366D7A13020DB8BFF555602C1A743ADC0A51A7C2CAEED6579B686B151FE3
69881680D1336604E7857D5D9F01320AE4EACC876285B4ED7BE7EF95D7DFC21D
6BAEE3FA5C80B14786BF09CC35EBC163768ED3DD00D2CB8D42F594A059B5DBC0
41A7BA125320FBCDE6C2DB0D6C52233867D41E178998B22D6BA151258B44CE2B
977C2D7BCDC192B80203D67454E09762583B4E9204E18C3334A8E2F4459B763B
579FAF43A87E23AB45E4DC3F1C1084DF71A4422749C22B051D08EA28C0918CB9
26A17777021FE95730E845D0961624D10952AA53E661D0A5E5A40AFAE8F5F71B
65B0ACA10CEA27D13D0D74B9F6CF392F9B14CC62266E9A0F395CF7C56DFD5ECA
7ACA4C0832E60E49AC2B9CF8A13F2D977ED39B13D958E5B584138D04E8450125
93AE2877F5C6E246BB33A11FFF524E25E499630BD8D41332D8E69DD17338966D
DF56A95950BAFAC5416D40764621156AC6A23F25034334CF4E8013336193FB92
FE3A75A0ACE8C7CE524AAD9DE283F84FBB5C408FCF9BBFE72F9544A3E7BC225B
448173275CA930073886C4702DCD2DBDA45FF565F70FA512263167B3A42BF5DC
DE669AFF10D013D8FB67958157B9A6EAF9164A85BCA6DE937056ECAAC84090EE
A258FE015DBBE96C6B185345481C0F85D04BD7D1EEF103A055164C2D7F44BE23
0A7F127014652C36A1BBABD6338F25B78D757A0DA7F67BBE457BF61DC237C864
92DF84E8AB279F062846E0DB5C4B205580D44421689A9480505D14A449311071
C2BB5327F8CEE526859260C4760FF9552D3F598F615B130CECA8C677D9387A7E
22DA6CFB974ED3721E9D507C8190F810BB419D23EA4082285863D28FBCB3FF1C
FE3F5C88DD6A18DC4A6E4F9D67959D1123E244748BF381284BFC5FB04DFBE9A8
BFCE2D84E74780424EC487592DDC5853C405D360389F7815E1DDD13753E6B917
2087
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /XWTFYI+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 48 76 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
-60 30 900 720 re
f
-60 30 900 720 re
f
172.5 127.5 180 592.5 re
f
7.5 w
2 J
1 j
/DeviceGray {} CS
[0] SC
172.5 127.5 m
352.5 127.5 l
S
226.5 127.5 m
226.5 121.574 l
S
298.5 127.5 m
298.5 121.574 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 17.025 4.00742] Tm
0 0 Td
/F8_0 6.99975 Tf
(WT)
[6.607764
0
4.276847
0] Tj
1919.3 TJm
(P2ry1 KO)
[4.668833
0
3.891861
0
2.330917
0
3.499875
0
3.891861
0
1.945931
0
4.668833
0
5.445806
0] Tj
Q
172.5 127.5 m
172.5 720 l
S
172.5 127.5 m
166.574 127.5 l
S
172.5 324.996 m
166.574 324.996 l
S
172.5 522.504 m
166.574 522.504 l
S
172.5 720 m
166.574 720 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 10.7574 10.125] Tm
0 0 Td
/F8_0 6.99975 Tf
(0)
[3.891861
0] Tj
0 19.75 Td
(1)
[3.891861
0] Tj
0 39.5 Td
(2)
[3.891861
0] Tj
0 59.25 Td
(3)
[3.891861
0] Tj
[0 1 -1 0 7.50742 18.75] Tm
0 0 Td
/F8_0 8.00025 Tf
(Half-width \(s\))
[5.776181
0
4.448139
0
1.776055
0
2.22407
0
2.664083
0
5.776181
0
1.776055
0
4.448139
0
2.22407
0
4.448139
0
2.22407
0
2.664083
0
4.000125
0
2.664083
0] Tj
Q
/DeviceGray {} cs
[0.7012] sc
240.645 427.754 m
240.645 435.559 234.309 441.898 226.5 441.898 c
218.691 441.898 212.355 435.559 212.355 427.754 c
212.355 419.945 218.691 413.609 226.5 413.609 c
234.309 413.609 240.645 419.945 240.645 427.754 c
f
240.645 417.289 m
240.645 425.094 234.309 431.434 226.5 431.434 c
218.691 431.434 212.355 425.094 212.355 417.289 c
212.355 409.48 218.691 403.141 226.5 403.141 c
234.309 403.141 240.645 409.48 240.645 417.289 c
f
240.645 452.578 m
240.645 460.383 234.309 466.723 226.5 466.723 c
218.691 466.723 212.355 460.383 212.355 452.578 c
212.355 444.77 218.691 438.43 226.5 438.43 c
234.309 438.43 240.645 444.77 240.645 452.578 c
f
240.645 420.828 m
240.645 428.637 234.309 434.973 226.5 434.973 c
218.691 434.973 212.355 428.637 212.355 420.828 c
212.355 413.023 218.691 406.684 226.5 406.684 c
234.309 406.684 240.645 413.023 240.645 420.828 c
f
240.645 399.477 m
240.645 407.285 234.309 413.621 226.5 413.621 c
218.691 413.621 212.355 407.285 212.355 399.477 c
212.355 391.668 218.691 385.332 226.5 385.332 c
234.309 385.332 240.645 391.668 240.645 399.477 c
f
240.645 417.77 m
240.645 425.578 234.309 431.914 226.5 431.914 c
218.691 431.914 212.355 425.578 212.355 417.77 c
212.355 409.965 218.691 403.625 226.5 403.625 c
234.309 403.625 240.645 409.965 240.645 417.77 c
f
240.645 421.363 m
240.645 429.168 234.309 435.508 226.5 435.508 c
218.691 435.508 212.355 429.168 212.355 421.363 c
212.355 413.555 218.691 407.219 226.5 407.219 c
234.309 407.219 240.645 413.555 240.645 421.363 c
f
240.645 451.168 m
240.645 458.977 234.309 465.316 226.5 465.316 c
218.691 465.316 212.355 458.977 212.355 451.168 c
212.355 443.363 218.691 437.023 226.5 437.023 c
234.309 437.023 240.645 443.363 240.645 451.168 c
f
240.645 577.371 m
240.645 585.18 234.309 591.516 226.5 591.516 c
218.691 591.516 212.355 585.18 212.355 577.371 c
212.355 569.563 218.691 563.227 226.5 563.227 c
234.309 563.227 240.645 569.563 240.645 577.371 c
f
312.645 418.91 m
312.645 426.719 306.309 433.055 298.5 433.055 c
290.691 433.055 284.355 426.719 284.355 418.91 c
284.355 411.102 290.691 404.766 298.5 404.766 c
306.309 404.766 312.645 411.102 312.645 418.91 c
f
312.645 389.246 m
312.645 397.055 306.309 403.391 298.5 403.391 c
290.691 403.391 284.355 397.055 284.355 389.246 c
284.355 381.438 290.691 375.102 298.5 375.102 c
306.309 375.102 312.645 381.438 312.645 389.246 c
f
312.645 473.375 m
312.645 481.184 306.309 487.52 298.5 487.52 c
290.691 487.52 284.355 481.184 284.355 473.375 c
284.355 465.566 290.691 459.23 298.5 459.23 c
306.309 459.23 312.645 465.566 312.645 473.375 c
f
312.645 430.387 m
312.645 438.195 306.309 444.531 298.5 444.531 c
290.691 444.531 284.355 438.195 284.355 430.387 c
284.355 422.582 290.691 416.242 298.5 416.242 c
306.309 416.242 312.645 422.582 312.645 430.387 c
f
312.645 428.91 m
312.645 436.719 306.309 443.059 298.5 443.059 c
290.691 443.059 284.355 436.719 284.355 428.91 c
284.355 421.105 290.691 414.766 298.5 414.766 c
306.309 414.766 312.645 421.105 312.645 428.91 c
f
312.645 445.559 m
312.645 453.367 306.309 459.707 298.5 459.707 c
290.691 459.707 284.355 453.367 284.355 445.559 c
284.355 437.754 290.691 431.414 298.5 431.414 c
306.309 431.414 312.645 437.754 312.645 445.559 c
f
312.645 517.098 m
312.645 524.906 306.309 531.242 298.5 531.242 c
290.691 531.242 284.355 524.906 284.355 517.098 c
284.355 509.289 290.691 502.953 298.5 502.953 c
306.309 502.953 312.645 509.289 312.645 517.098 c
f
9.9975 w
0 J
226.5 442.844 m
226.5 425.129 l
S
226.5 442.844 m
226.5 460.559 l
S
/DeviceGray {} cs
[0] sc
246.504 442.844 m
246.504 431.797 237.547 422.84 226.5 422.84 c
215.453 422.84 206.496 431.797 206.496 442.844 c
206.496 453.891 215.453 462.848 226.5 462.848 c
237.547 462.848 246.504 453.891 246.504 442.844 c
f
/DeviceRGB {} CS
[1 0 0] SC
298.5 443.355 m
298.5 427.738 l
S
298.5 443.355 m
298.5 458.977 l
S
/DeviceRGB {} cs
[1 0 0] sc
318.504 443.355 m
318.504 432.309 309.547 423.352 298.5 423.352 c
287.453 423.352 278.496 432.309 278.496 443.355 c
278.496 454.402 287.453 463.359 298.5 463.359 c
309.547 463.359 318.504 454.402 318.504 443.355 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font XWTFYI+Helvetica
%%EOF
