%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.60.1 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.5.0.944444 \\(R2018b\\). Operating System: Windows 10)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 101 121
%%HiResBoundingBox: 0 0 101 121
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font FUNOSQ+Helvetica
%!FontType1-1.0: FUNOSQ+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /FUNOSQ+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 762 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 43 /plus put
dup 46 /period put
dup 48 /zero put
dup 50 /two put
dup 53 /five put
dup 67 /C put
dup 70 /F put
dup 77 /M put
dup 82 /R put
dup 83 /S put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 104 /h put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 113 /q put
dup 114 /r put
dup 116 /t put
dup 117 /u put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB966C56AEEE4E303152D713BF57F7118DFC603E4A7CDC2E0904B8376E
D56DF637AC6598C63C446905C94BC7753D99804EB624FA54222D76E41B5E9430
8526D1AB6C5F687532BCC02EEE694CEE8278FD0F3537C7F6309867F2EC0E5A44
D54EE72359D6427FB8CC02902618511A687CF91B8CBF26D7CDC2DE5A13A4FC20
FC6187AEB9F03358D176F8B6DE3B47AF86C63043FD6293B7FACE44ADC8DFF64E
0FE1C24D613E616ACC8863A6F9B60858A66B8734BE5E60B901C965B7508278B1
EAA4B89A7B70AC43F2A2039B698B2DD69301039F2475E7D399A6FA266C4884C5
35B526A795D8AF0013AE53BBF8459E290094322A29849C49B28C14168B4A8FE4
A2EB5BAD66E6C2600C1713517D34F8F3745EAF18FD0308A54F1D1F3884E5D719
2D3E07BF1EC4871096AD38EB126411E94D25C02F37B2C9269E5DE604F488D194
0B0CD42D33A07B72900DF09B0F0086AE24A67810573A049F79DF1445A138F035
1E42E63627DA8BF950328EC0AEE11F43990D084445928A7275DCF3F86D038C9A
CE808F4461D2471DE3F6E644C8DDA22B98536B7FE04CD19DC157648D58A0A9A1
A379C7E2F03A01F23E35455B0D3A4B703168F906A0EBA44DD7F18C9194FAEB9F
84C4018836B895E34484D694EE75D97F4072A98523280A314D3DE6B35C7DF82E
EC682C4FC229C413ADE9268235B79C04734287F596EC3B71DB1EA3DD6665688C
6885977D4C4956730918059297106F203BDF2280EEF64590759676810D427A08
F373E29FB0ABC71949E3AFA15A00405A07E4624D1742F207B6285C0B59065D1A
C3D3C5CD3B17DC2F3B451A22E6E8D72E1C392972F5CC38BF9842A3826D26E9AB
2F81D060A3F19CF63C33674290A3BBA3CEA3F727458A604B148066399B0274DD
0E07D5DBDAB4C325754FA478E9630FDCDA4F016E07B823648EA061153A2A0AF2
8A5A8D37F586F44A08C9358ABAD11606457D4679D81C5F7E67BF3BFF11F89089
9F6DC61EBADA986E73DE58F54793FC2C6CD6234B7F055BB0FCE1D49A2C7DACD8
4B093624475B840A7D2118557A7B902653E22CCC5B08224C19D19F97E62994CF
5598ABA2A5C86888388EB329EB314F7A5B075A4256C463379DD6D13980180418
D53A7F4D0763335C00730EC84528F021930BCA9A4C2FDF252615433800B0AD11
F9DD1AD3518E91F51B87261E7BFA771F57B92EA13F83D36459641D5A0A889F8F
518E72CAB35168708EA32E9D3DB0797CB8C0E7E2DAA71E13B7D54AD18BEC8517
ADFFE15D54B5309482F27BAB4BE5472531B5BAB9983B7FB7F531FC62130F6501
712A6EF7CF0EA256FE83718C72D6B1D9E812EBA1FCF7ADB58659BAAE0F070269
18257DCC41C272BFD3952B84942B2A9CD323B89A7FFA77FE39732400F10AC599
AEAE91F4C5E1ED0A55B399A39909BEFEB4EF3B19BB93D22BAC27641529B83FC6
DCEB30FAF17071BC4CEE7D2F9EB839E006F532714670F968885D5CB353588F1F
B446E28F1C287B357FA17F0B0295F8F9EF83FBDEA550F5309E34F5D3685D57AB
8E99A1BDE3774FEE20E8F682136A8D05E5DCA10F0D84C4C8A10D67B9DAFB0B69
7BC20899047A155B8F5FDC42C06E462E240D713DBF86EDD2DC123ACF12D9F04C
631EEA9A4B553F3751EC871FEC6C0349B51506AD30DC24B8B65F655B2A910EEC
CE44708EF232D4B3CB86E1F9545D63CA3B5CAA5A5D45E2161EE01F086E95CBC5
0F1B98885342AE18F24512DA58B0FAE16158BC38EE709E5976C5E41901502403
E275D55B6357DE53D0B57A9E952BED1220D00837A87A53D1A0818B5B949BF369
CCC8E82801B13E3D609F66606A2CEE91F029ECA145686FD3A9C7FA898B26C36C
28F8B4B921B2B0E7DAC3B422780BD574DCC9DFD4A8E8712213AD9E1585A52E47
81F7E5AD0F70D0A16FBFAD19EEF6F810D0A21DEADB1A45AF53D208CC91179600
37435003C2CAF3D474FE019AA5ABA9D4784BBCC9026CA8133F0026C7B5A4D285
7746224AAAF768083170147C88BCECE5DB44B298781247024E218E2B08F8305C
83B9E9553F12F72C81310274556F81A25C3AD8F257F56EED3D9D73A2874145B3
0AAA77D9F5BEE666B3DEE857B35FB2C73081A269758839EF004229FC49173CBC
4F64C74B3F6F6E93D93B985CB6DAC59F852437FCA30C1714CF043B9136E49CEB
04879936EBC6BCEFF01E5BC267935029144EBC8E3EBA66253124E390EBAC484B
083947F98289E316C813C78CE7E729232B4466C9DCD19F76A57CDAB63D068018
E97C0860FCE364BDE7458B216062CAD068D0A0AB227D073B7B110703860D5074
1C4D96AC41DFEA4669293E416A112272DFA4064A39702FEC1554790D3F12DCD6
F7B6CC7C73F487B378F12A4E592AFF64C7F54CB8B407E9C4B9D3489608E516EE
DFCB84FE806EB0B8A504A4FB8C7C58310A9CBBCC7FF4EFAC54A158C2824D33CB
D84269BEE21CDDBD93EF4C9E2887408E937BCEBC9925F8639C78C5C5A2908DDC
64736A462CAA467AE3F695A93ABD6CA6A5003C1C71DDB41807007C34BD089A36
54A0F63D65B8CB081F8F8E90AE3977228E8A43997789C108D24027B6A88F24B2
3D010FBCE640D01874206C15F6592E15EB48FA1C5348374BFF9B72EC7ED22FC6
A94FAD67E1CF07DFDA236DC4ED2E69B1E5392A11ABC299DD88D8920409754FD4
07318079263555895E860A1183439845C9F4F15FAF3D8F9970CF6B9D00B20CDC
003ACC3EEBF38EEE9D3EE9D8E6794AE1A4DBD8CC464B5AA14C48D8E3551E8E78
212D5256D9B0FE8565FF66BDC0BD05D7A07E9F91B62FF52659658437672393E9
B1E43D1AF46213328A37C33B90B2B48621188EF5E6C2CC04A9C92065D14095CD
6195ECB9F2D6DDE492BD95B185C56F6BBF05F004560ED25E47F514A615F31C09
7D3F094BF6C13BC501F0AB2328702947663F2B0C222E1E753D344958ED5D4F12
4935CA2B8F2158CA1F8900AA3ADD98F0094C91A8FB09062A9101A8BC6898AEE8
078EB3A83B2117C862FF6E2425027547032DE181234945F2CC78FCFD7E12C6FE
6F81F8BEB9E1C39FB44E3F1F8036688D75A883EFB7F93F7FD6629144B37AC995
6B29CD35D7189B3EB99C35E58CE44E848912ECA775671778FE99D58C2AFB74C3
5086ADAEDA66BE83AB48224E6158A76DE114D19E1CDAC997B5863DEF7E866DF8
D0E6415175B215ACE129FDF89C317A33F0EAEBB54E75A1BC035EDC16BE7972F1
49A5C7703424482CCC596BDEC4DD2D3730F5CD4E66FEFF6CA24CCCADA44C529D
99C40E6C33CB5D44731BDDD69A3A544554D476BFAA90037D18F7FCB6C87527A5
99C25430B2B44227F9DBC732515BEEED0AD556BE2BCFF6E530388FA3708B6195
7724C5DEA27ED10955B431A6BEF1CE580F0EA491F7B58F9D1251CEF0402D7A0C
1BB063088B523AE4BD7E5A18639438B4D0BA9DDDB62D9D8E6FB0887634C12F8F
DA26A77BDA3B0D91E7A763176B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /FUNOSQ+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 101 121 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
0 0 1080 1260 re
f
0 0 1080 1260 re
f
225 337.5 750 825 re
f
7.5 w
2 J
1 j
/DeviceGray {} CS
[0] SC
225 337.5 m
975 337.5 l
S
350.004 337.5 m
350.004 329.25 l
S
516.668 337.5 m
516.668 329.25 l
S
766.664 337.5 m
766.664 329.25 l
S
933.328 337.5 m
933.328 329.25 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0.707107 0.707107 -0.707107 0.707107 23.3328 10.3117] Tm
0 0 Td
/F8_0 6.99975 Tf
(Control)
[5.05382
0
3.891861
0
3.891861
0
1.945931
0
2.330917
0
3.891861
0
1.553945
0] Tj
16.285 -11.7849 Td
(Sham)
[4.668833
0
3.891861
0
3.891861
0
5.830792
0] Tj
29.4629 -29.4628 Td
(Control)
[5.05382
0
3.891861
0
3.891861
0
1.945931
0
2.330917
0
3.891861
0
1.553945
0] Tj
29.248006 -41.2477 Td
(+MRS2500)
[4.087854
0
5.830792
0
5.05382
0
4.668833
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0] Tj
Q
225 337.5 m
225 1162.5 l
S
225 337.5 m
216.75 337.5 l
S
225 750 m
216.75 750 l
S
225 1162.5 m
216.75 1162.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 15.775 31.125] Tm
0 0 Td
/F8_0 6.99975 Tf
(0)
[3.891861
0] Tj
-5.25 41.25 Td
(2.5)
[3.891861
0
1.945931
0
3.891861
0] Tj
0 82.5 Td
(5)
[3.891861
0] Tj
[0 1 -1 0 8.025 55.875] Tm
0 0 Td
/F8_0 8.00025 Tf
(Frequency)
[4.888153
0
2.664083
0
4.448139
0
4.448139
0
4.448139
0
4.448139
0
4.448139
0
4.000125
0
4.000125
0] Tj
Q
5.0025 w
0 J
/DeviceGray {} CS
[0.7012] SC
350.004 865.5 m
516.668 799.5 l
S
350.004 799.5 m
516.668 997.5 l
S
350.004 832.5 m
516.668 865.5 l
S
350.004 700.5 m
516.668 766.5 l
S
350.004 832.5 m
516.668 667.5 l
S
766.664 865.5 m
933.328 865.5 l
S
766.664 832.5 m
933.328 832.5 l
S
766.664 733.5 m
933.328 733.5 l
S
766.664 733.5 m
933.328 931.5 l
S
766.664 766.5 m
933.328 733.5 l
S
9.9975 w
/DeviceGray {} CS
[0] SC
350.004 806.102 m
350.004 777.711 l
S
350.004 806.102 m
350.004 834.488 l
S
374.996 806.102 m
374.996 792.293 363.809 781.102 350 781.102 c
336.191 781.102 325.004 792.293 325.004 806.102 c
325.004 819.906 336.191 831.098 350 831.098 c
363.809 831.098 374.996 819.906 374.996 806.102 c
f
516.668 819.301 m
516.668 764.477 l
S
516.668 819.301 m
516.668 874.125 l
S
541.664 819.301 m
541.664 805.492 530.473 794.301 516.668 794.301 c
502.859 794.301 491.668 805.492 491.668 819.301 c
491.668 833.109 502.859 844.297 516.668 844.297 c
530.473 844.297 541.664 833.109 541.664 819.301 c
f
766.664 786.301 m
766.664 759.488 l
S
766.664 786.301 m
766.664 813.113 l
S
791.664 786.301 m
791.664 772.492 780.473 761.301 766.668 761.301 c
752.859 761.301 741.668 772.492 741.668 786.301 c
741.668 800.109 752.859 811.297 766.668 811.297 c
780.473 811.297 791.664 800.109 791.664 786.301 c
f
/DeviceRGB {} CS
[1 0 0] SC
933.328 819.301 m
933.328 780.816 l
S
933.328 819.301 m
933.328 857.781 l
S
/DeviceRGB {} cs
[1 0 0] sc
958.332 819.301 m
958.332 805.492 947.141 794.301 933.332 794.301 c
919.527 794.301 908.336 805.492 908.336 819.301 c
908.336 833.109 919.527 844.297 933.332 844.297 c
947.141 844.297 958.332 833.109 958.332 819.301 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font FUNOSQ+Helvetica
%%EOF
