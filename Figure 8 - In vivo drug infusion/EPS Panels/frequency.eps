%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.60.1 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.5.0.944444 \\(R2018b\\). Operating System: Windows 10)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 101 122
%%HiResBoundingBox: 0 0 101 122
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font VOWPBA+Helvetica
%!FontType1-1.0: VOWPBA+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /VOWPBA+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [-18 -218 762 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 67 /C put
dup 70 /F put
dup 73 /I put
dup 77 /M put
dup 82 /R put
dup 83 /S put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 104 /h put
dup 106 /j put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 113 /q put
dup 114 /r put
dup 116 /t put
dup 117 /u put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB966D6518B5A8694B2654089FE00D86C0A7AE42411274EE55A1E0BAFD
F224E724525A32C38BF7C3DE517DC596830294AF404BD5F17FCD5789C434999B
90F3BC7D353843D7CD5C9AB7FDD85F6CE4F559851FBD2AC5821DA8BF693FBF22
AD92F11D7536969FEA694958BFF6EBDCF8BC430DFA526F4ADB45A2E8BBCB6B39
FF3941C860E99A1C077794384CE270F6A84085BA20BD6810960CE8EDCED38A1F
29778F05B0ECDC5335C47C8129872BB140BF70F36870F9722A008B3F24F60E15
EC6F3BDB2143EEE32ECC87CCD33328283A7A9ED63865F0AB41B48179B0A8C76A
EFF5AE2AA9A0E564D7C1E624959DFCE7C28340E1CC88533B6FBF7A8F0D650EB4
10708DB3D88A9BECF267B58226E1CCAAEEDC82151AD745D095237126F7990C87
762560E4EDBECC98B02955D00D5C224094C09164AD72CE1248051E8D36F58142
CA45EA9E5F012E2F12A5A7CDDC6D44A492D31C9370330CFC5B81462D9E250687
C4F5D8B2FDB2100685C8CF37CB7E8BBB26D2E0FB197CE20FA385223EB5904002
4A5F4E11DD1CE01FC8ACAF6C303284A8BD2BF789588197C4F82560459A2A431A
22779F1F2EADCD5A5ED10BA22787DA366584438D60285888420363535D9EBBCB
0EE09FF8F5308B3F63107FE87EE7D29D3C70EF0E64912599F5B5D7B41CEE9B17
2EAFBE725740B0D9D5C3C6D39474C39E2A76A95C0DEFC6F6FA0B2E1E960C9740
ADD234C5A8E97B99F08E82C9184FEB3685B6017797EA931BE132FA90E2E15EC1
54EEA2EF2BA2E31957C36CE4C916A194A25343D1EEEEC0411E1000B15AFEA4E8
F817A0D3F327B7834775164B46B4D02DF593C4AB74420482AEE8A9F442E2ED73
DC6BD16D1056048FA370BA5C7674A48301BC8CFC103BED3DFC675684B3FC98F0
88FD479F45CCE1876989264B6B2C8C2C7A548E9E5140717CEFA0B810C091FF82
41C644B7FCCEBF1080C9ADE5FD727AED2D0B6BAAE673BB8D0DA658E2DAE68304
C631F7512734EC272A4FE7BEB0C0EE045C9A905607A0449D32E0645AD4656ACD
2D82E3593F51E2F0D1B2B6CAB0B645B45B285A444566C0226CD31B80E636FCB9
90D02278013C36D84F1C03003042DD3B0949640AA05CC11239F1C4A671F429CA
C7AB47E3882747D1FAABAC51E6B67B61C17A93B0E4839C360C5A3A7152CDBDCA
12E21AF85306542E172553C73FF2744FE20123819E811694A22E9BF8F3E6AA2F
0F02BA8D42507092AE9C3D54F78A02DAA4B6F46D3660E87F0BCD7BFD8C5D7024
B291147E8425615ADDE457B11B43F65A35C3073F5FE4B1A4B6960195AB742088
2F89F1763AA70128F32C35468A46A2906B9CC8899B3A1FDD26A446CE48BF9CBE
1EE6DA72018CCEE25149CDE84730C44AAA7E68E96728847B81FC83F65EE8398A
41FFDBA5D61FA48128F5364A270801409AA138607ADF07A5B4157BB5961F73C0
B090E245CC8D4F6D1BE0F6A7C67AA22E5A8BE5B0712654413E13C53005995DBF
74CE95D7F96A39DAF52D54913F5100F6335E9B7347CE99A46419C34CC40CC379
82DEF8D88DF2A48FA9756F11DE5A280B072C5209021EE654207B446C8CCBEE9A
54707F4480CB73599D6D9480E6925A7C69104ED86B817FB69090E5BEE2D84045
8405608371132FA51C4C429DC8128DBDB1F66E5D71B175838139EA38BF5BFEA1
94D3D3F51CC2E66EF7742265232D229BBF5E6C9F13AC36912CD1D3386C11AD73
5FAD07B2566C79123FE2CA122F796251CDDE10806CB49841E05AFD00A17D8C6E
B6FB65B4C312F5E69A635ABA49E3A4352AA26AFF89E2E559B1DA3F0BDB4673FD
2F085AEA10B18C7B75DBD06E357E93A3B7EB2CEAC6D082BCA5B18D854F19FC59
B8BCD12E02E526B273FE0A3BB86A81FB8D0BFE47EF05002F4ED634D568D4C2B3
6AA8BC151B0D711DF90C760A494B35884FB09FBE42100C03A2D49D76DE0DA0F4
781E4522210E791DE78F7D1D69CE1008B07FE647BBF807D21A425621CADB85A7
2A14A37C80CEA00FED64AA0991D3A8E2D3445550273A3991AC0D851C629DA10F
7B1AF9D564DD37354174053CB776BAE2DA728B8339568689959003BF927EE757
4466CEF6355C99DD785E987489ADDAFFBCFB5E67A16C1240202DC2D354917873
D5C567E3984B6B219E80A29FE0586359192E33F2C4DD0DB4DE5DAC72E96EC19A
6BD82947AA2BDB8E3000E2F4FC44BB9DC232B791FED95493CF818C5C238B6CE0
9CE528362117C99B0513EAFABEFF9E0D182F9C6241E38B96BF5932F4DA071053
D8AC9FD91BE44EF60B6F075C60E309E7702067A2BFD034DCB59BC3AF5E63C224
F45463E7C0818E8CB9A19553090AE5BF004A8815047455253CC990173250F4AA
F02F8BBA4E6252FCBCE4C5709B14C729AF3644FB996A2727C7CF342C7F31C7DE
07F7C1CD40336B94106D4A5A6A91E937F9BC66563FF270A5D5159EA94F588616
D389AF23B956EC2B5C005958630080DEDA69E80ED4E804BF8C56D7FA2D115F26
258E053ED33683C37EDC20DB45549B6DF1FFE03EE7877B5FAC4C88CEBC962EAC
FD3FBC47209B6026C575A06838739935415FA705CD48BEBC86AF9ED65ABBA09B
12E8A423ACE84BC6F02EABAB89608E955ABD7728DE530E8A68CEE4E88E1A447A
E6C930CAADF477C1A6FE5BFD6ADE84B8176A59F0C4ECF4DEB0D4BA4F3F28C091
E035A0CE595208ABF301B186DCE3EC617DF6ED58E7114A7399F7AD9E4325281E
5EB5153F142DA34EE4CB5E0A3AE0443A6E569B6A5FF2E28CF84542D612E72771
98B3AD1F529A2C709166E08E141CE921EAE69821748520A35A3B8BF69961CAA5
7591D770DFFB7351CE86D4ABAD80C7099A20D598C6CF59D5BE2AD03B348E1C10
CF187DCFE0A844C67037718AE37D99B617E6926C8202B70C7AF2E2BBE220A1B3
80F7F01310844C060E803584CE093BBB1ECBD854A2E0BE4937A51571D354E9F9
30A62B69FB040C75B854C244B459F2430B5C20BDB4EB59F648E342D1BC404D9B
0A4AE89E4997C7210E378AA067C3F8B1B66EC33E956ED5A82567B1EDDD2EAE94
BBD77597A5E0454C0BB78C83A9979D5A51BE782FA84F3D1FC466762C2759C683
F304D484F48A5F8267C8B8757C8FFF07D29875E5F8FA09D1A4B05F7F57FA59EF
F147BDDB547590DA2752B9749E78F365AB2E3D7B3625424408CD45D3F80F4E04
9ED8E75F6F02C0632EA5192CD6AD034CFBC6ADCC122EBD16E3BEBD9B1F917E82
629287D1B44706B5C1BFBBC3019178F9594ECD26E577CEFFD560714F61BBF551
8DE11F8A7AE67563E0ED31D607890010DD19948766CECF0395D65E60B7340222
FC91B5D1818BE973591727C4F3CFB187E81C3147C2D79C0519EC7019F28BE9B2
9EF392318D75ED70D8DB0D04E7F07303BA776D458E378119142BB32E91C4F51C
2297941BF9D275BF1A505A30D096ED664A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /VOWPBA+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 101 122 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
0 10 1080 1260 re
f
0 10 1080 1260 re
f
210 362.5 765 810 re
f
7.5 w
2 J
1 j
/DeviceGray {} CS
[0] SC
210 362.5 m
975 362.5 l
S
337.5 362.5 m
337.5 354.398 l
S
507.504 362.5 m
507.504 354.398 l
S
762.504 362.5 m
762.504 354.398 l
S
932.496 362.5 m
932.496 354.398 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0.707107 0.707107 -0.707107 0.707107 22.0828 12.827] Tm
0 0 Td
/F8_0 6.99975 Tf
(Control)
[5.05382
0
3.891861
0
3.891861
0
1.945931
0
2.330917
0
3.891861
0
1.553945
0] Tj
-2.22932 -12.0211 Td
(Sham Inject)
[4.668833
0
3.891861
0
3.891861
0
5.830792
0
1.945931
0
1.945931
0
3.891861
0
1.553945
0
3.891861
0
3.499875
0
1.945931
0] Tj
30.05208 -30.052 Td
(Control)
[5.05382
0
3.891861
0
3.891861
0
1.945931
0
2.330917
0
3.891861
0
1.553945
0] Tj
30.822716 -42.0728 Td
(MRS Inject)
[5.830792
0
5.05382
0
4.668833
0
1.945931
0
1.945931
0
3.891861
0
1.553945
0
3.891861
0
3.499875
0
1.945931
0] Tj
Q
210 362.5 m
210 1172.5 l
S
210 362.5 m
201.898 362.5 l
S
210 767.5 m
201.898 767.5 l
S
210 1172.5 m
201.898 1172.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 14.2898 33.625] Tm
0 0 Td
/F8_0 6.99975 Tf
(0)
[3.891861
0] Tj
-3.75 40.5 Td
(10)
[3.891861
0
3.891861
0] Tj
-3.75 81 Td
(20)
[3.891861
0
3.891861
0] Tj
[0 1 -1 0 8.03984 57.625] Tm
0 0 Td
/F8_0 8.00025 Tf
(Frequency)
[4.888153
0
2.664083
0
4.448139
0
4.448139
0
4.448139
0
4.448139
0
4.448139
0
4.000125
0
4.000125
0] Tj
Q
5.0025 w
0 J
/DeviceGray {} CS
[0.7012] SC
337.5 978.102 m
507.504 961.898 l
S
337.5 1010.5 m
507.504 1010.5 l
S
337.5 905.199 m
507.504 864.699 l
S
337.5 872.801 m
507.504 840.398 l
S
337.5 808 m
507.504 775.602 l
S
762.504 913.301 m
932.496 411.102 l
S
762.504 889 m
932.496 492.102 l
S
762.504 945.699 m
932.496 540.699 l
S
762.504 970 m
932.496 678.398 l
S
762.504 791.801 m
932.496 475.898 l
S
9.9975 w
/DeviceGray {} CS
[0] SC
337.5 914.922 m
337.5 878.566 l
S
337.5 914.922 m
337.5 951.273 l
S
357.504 914.922 m
357.504 903.871 348.547 894.918 337.5 894.918 c
326.453 894.918 317.496 903.871 317.496 914.922 c
317.496 925.969 326.453 934.922 337.5 934.922 c
348.547 934.922 357.504 925.969 357.504 914.922 c
f
507.504 890.621 m
507.504 848.266 l
S
507.504 890.621 m
507.504 932.973 l
S
527.504 890.621 m
527.504 879.574 518.547 870.617 507.5 870.617 c
496.453 870.617 487.496 879.574 487.496 890.621 c
487.496 901.668 496.453 910.621 507.5 910.621 c
518.547 910.621 527.504 901.668 527.504 890.621 c
f
762.504 901.961 m
762.504 871.156 l
S
762.504 901.961 m
762.504 932.762 l
S
782.504 901.961 m
782.504 890.914 773.547 881.957 762.5 881.957 c
751.453 881.957 742.496 890.914 742.496 901.961 c
742.496 913.008 751.453 921.961 762.5 921.961 c
773.547 921.961 782.504 913.008 782.504 901.961 c
f
/DeviceRGB {} CS
[1 0 0] SC
932.496 519.641 m
932.496 474.863 l
S
932.496 519.641 m
932.496 564.414 l
S
/DeviceRGB {} cs
[1 0 0] sc
952.504 519.641 m
952.504 508.594 943.547 499.637 932.5 499.637 c
921.453 499.637 912.496 508.594 912.496 519.641 c
912.496 530.688 921.453 539.641 932.5 539.641 c
943.547 539.641 952.504 530.688 952.504 519.641 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font VOWPBA+Helvetica
%%EOF
