%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.60.1 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.4.0.813654 \\(R2018a\\). Operating System: Windows 7)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 83 105
%%HiResBoundingBox: 0 0 83 105
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font AYKTER+Helvetica
%!FontType1-1.0: AYKTER+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /AYKTER+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -23 929 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 48 /zero put
dup 50 /two put
dup 51 /three put
dup 65 /A put
dup 67 /C put
dup 75 /K put
dup 79 /O put
dup 84 /T put
dup 87 /W put
dup 97 /a put
dup 101 /e put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB95B26E44CBCF2F088B622E3040F0070952DE4616F349A8EFB28D989B
F94F59B8E4550FA11F74D2F3125D2D74BD68B23065B7F8AF8007FA2B2514F1C2
F010DC8B7C17BCBE479ADF4A1788A3E759028E5788FA5C61AB61A46C9FFC7EB9
96853F1594A1226DE5882FEF5D7778039944973E3E4608F2970530D1B678BCF1
B74C6F94E0C3584AAE1D5A8095DD170E14741445885F487495A819C60B3E8146
E123DD1DED4B4A56B1384CFB9573A585CF8A285A62E0C9F94FD270A9668A61A1
EF9E7C380CC20005B39C50FA1BA4114CFC4CBE3368FE84A855FB00D8D2A88C94
014CB618EFC80B549198DC9318884FEF85C371AC05CBC2C7BFD5AF759AC68514
D14DE2A6364A580D8A2E50F16159534286FDE0D597536567E80FD4C2011EEC4C
7797D407E9AF516CE230AE2C783E13DAFEC66C8A242CC2715506896D90625B4B
52FBD0A7A7BDC38719E459E0A1293853EB8E743C4B458A1D062D09AB508B9F9A
44D8301D0D5210F013CA4CD6DB46E751BD0ED42B2042740A27AD4C2CC5E8B39A
8CA11F83491D0415A6D9F01B4ACD743998F610008B439B464AA187F4BD71595E
A05868CDA61973AD7BCFC83BD23B3D389F6B24CE3B185840CE16236D6BE9C7F3
99D0D94A678871B43DB4EBEE053E74EF6190EDBAB9A90F14F4BA4ECB3EB35E47
611A31E914273D539588504F4B02A914289128A36D0EF4496A9D81B9DD98F56E
E23C507DA8DB2BBE954DEADE936037FA226273A8A92656728D384034384C68E9
A38F26DCCE1AE1952A387A681F7DC67CA9C4FBABEE1C66F9F81EEA2C9AECCB3A
E64277B30C9278BB4DD24064F6FE3B1FCA0BFB820F547644C58153EEE9CE5CF4
F312D9529B318D0B532D7A66E1344575ADAB60D69781C0DDF1193F31A618EEE7
712256D6AA5389F6A1E854C09962EC5FE7CE80EE455ABEB81A38FF9F68F1EF68
49B247ECB7420F7B4ED99FD228A98788FDFD2AA2D5B1247E5B852122104BD8D8
E608BCEF399016784EE4F14C2C6895378C10DE04FA6F33C4BC82D992D6CC453C
1F2B6173A6BBE5D6D70D12F8700A80998A78F0ACB56AC90C650C18611CD5A4ED
04A59F7203BCE39EA526B8FF794898E0C3BA691478DE012E808290C2829AF16B
2B8A25C507D514574444DFD3E5F3B3D79104708529B6AFF211FEFC377B404E0D
997F0CBD9D6B0E70DCAC49F6E35B392A78518059025BE5E9BB2D5F5EEB07F0AB
5989A13AA940700797D63633331745713CF5F553CDA85231342F540494FE2859
48883A5AFE723AEEE347B464DFB814D2E4F12770D7751F0DCB55B125511D48A6
63B71C49D5C793735D9663BAC32522A6CF69F711CA04FF3EEB938ED500AD997B
DB993345F2E1EEB509A397EA4F3212035C4D974BE7A202DD97011E83EFF469CB
62617F882DD3D1871E68E15636E0AFC307440CE9A6271D65BA5C22994A6CFFF8
F59FDCBAE5EF293FC9BAD0BB6B33E42F51FA0185A03A691346F8E6ABACCEC22D
73C0A6B59687A33A998283E30B42BB579D5F0FB6BA401B7C2FA17A879D846A82
A774545F6A0B269419AFBB304445DB4A6AF3175AB39139302DE43B16368AC510
5259956C32C074F9495D2A4E171A18BF4E5B9D9880B60967BAE42C39FC8AD0DC
1266347750660DCF17FEF4BEACFEE8F2B0AE6281A9356680924E4E5810C4DA37
A2A3381FC5D44B8465090127567EA9CC7C0E53864D090DF211BC649D0870395F
E72DB2990ED85D3CF52EC5F9CC8751001DB2768BB1BCFAB8A5DC043B01F47004
FCA9C404A20D31EF8A5C04FE6EE8ED0BAB632CE19BCBCCE2D0BE2FF96B8A965E
00FDA76C8FEDEC1C32AD5995170AB4A38E37E6C3B69B6D138AA6A870024B0549
7D2313365C543221994D6D2545E061F42612AD0EBA5E68B92043FA1736F92E8B
C7B0B9D4E70A9B300DD1AF52C485C71006657B8B9B207D1DF9E015AE2723F61E
C171EF1EEBA490BF3067C8D94BED859A3E2AF838C0FF5C4998BA40D3C31C5C96
F667D043804DB4834E9DD24A42A9F3F8A43B1413F2D2BF92845757ABDD1CDBE2
67739C5D620732F64D975B054C13FC069B1BD2A08C57C0FB94D15E4585D0F4B9
31C38DABA20C5A3B53DAC15EBFBD75425B06BF05494009450D41F7BCA35138B8
9875C1A126F1497072D8E792FB5C4068A628992EC69ECCB45065C13C8D101B01
6EF52F1469DF44F0A62F4085671E969F39191BCF244172871472485B80A68C17
5EC879DFFD9C609557A77AC259C79889A2D89C73D4BFCCA8F10D7E617D31B957
42A0E4BFAC30FCC80880811730EDD631D9137F69E883AA0FBA9757FE4234DFA1
8149E35DC8162ECA2D80AC6DC9B78DCA8B2C8D9D01E9418AAE660265E40A9541
22BA537980AAE07275113A84F8CBDFF12E0AA952E7CD0AE8021EAB8C6122E9D1
17BB1727320B4ACD00F39309DDAE6C01D80D54AF31F6D7AAE448C940DF3DC911
F487BABFAEAE9884E5468B3FF4FCE4E83030312DB76647E4DA3FAA0CE0A6E7DC
81F7B220E98F2ABA1C775C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /AYKTER+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 83 105 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
10 10 870 1080 re
f
10 10 870 1080 re
f
490 130 307.5 877.5 re
f
7.5 w
2 J
1 j
/DeviceGray {} CS
[0.1489] SC
490 130 m
797.5 130 l
S
582.25 130 m
582.25 121.227 l
S
705.25 130 m
705.25 121.227 l
S
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 52.6 3.97266] Tm
0 0 Td
/F8_0 6.99975 Tf
(WT)
[6.607764
0
4.276847
0] Tj
-255.779 TJm
(KO)
[4.668833
0
5.445806
0] Tj
Q
490 130 m
490 1007.5 l
S
490 130 m
481.227 130 l
S
490 568.75 m
481.227 568.75 l
S
490 1007.5 m
481.227 1007.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 42.2227 10.375] Tm
0 0 Td
/F8_0 6.99975 Tf
(0)
[3.891861
0] Tj
-11.25 43.875 Td
(2000)
[3.891861
0
3.891861
0
3.891861
0
3.891861
0] Tj
-30.75 87.75 Td
(300000000)
[3.891861
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0] Tj
[0 1 -1 0 8.5 31] Tm
0 0 Td
/F8_0 7.70025 Tf
(Crenation Area)
[5.559581
0
2.564183
0
4.281339
0
4.281339
0
4.281339
0
2.14067
0
1.709456
0
4.281339
0
4.281339
0
2.14067
0
5.136067
0
2.564183
0
4.281339
0
4.281339
0] Tj
Q
/DeviceGray {} cs
[0.7012] sc
593.434 742.594 m
593.434 748.766 588.422 753.777 582.25 753.777 c
576.078 753.777 571.066 748.766 571.066 742.594 c
571.066 736.422 576.078 731.414 582.25 731.414 c
588.422 731.414 593.434 736.422 593.434 742.594 c
f
593.434 680.238 m
593.434 686.41 588.422 691.422 582.25 691.422 c
576.078 691.422 571.066 686.41 571.066 680.238 c
571.066 674.066 576.078 669.059 582.25 669.059 c
588.422 669.059 593.434 674.066 593.434 680.238 c
f
593.434 757.004 m
593.434 763.176 588.422 768.188 582.25 768.188 c
576.078 768.188 571.066 763.176 571.066 757.004 c
571.066 750.832 576.078 745.82 582.25 745.82 c
588.422 745.82 593.434 750.832 593.434 757.004 c
f
593.434 834.516 m
593.434 840.688 588.422 845.699 582.25 845.699 c
576.078 845.699 571.066 840.688 571.066 834.516 c
571.066 828.344 576.078 823.336 582.25 823.336 c
588.422 823.336 593.434 828.344 593.434 834.516 c
f
593.434 715.57 m
593.434 721.742 588.422 726.75 582.25 726.75 c
576.078 726.75 571.066 721.742 571.066 715.57 c
571.066 709.395 576.078 704.387 582.25 704.387 c
588.422 704.387 593.434 709.395 593.434 715.57 c
f
716.434 294.105 m
716.434 300.277 711.422 305.289 705.25 305.289 c
699.078 305.289 694.066 300.277 694.066 294.105 c
694.066 287.934 699.078 282.922 705.25 282.922 c
711.422 282.922 716.434 287.934 716.434 294.105 c
f
716.434 373.027 m
716.434 379.199 711.422 384.211 705.25 384.211 c
699.078 384.211 694.066 379.199 694.066 373.027 c
694.066 366.855 699.078 361.848 705.25 361.848 c
711.422 361.848 716.434 366.855 716.434 373.027 c
f
716.434 363.809 m
716.434 369.98 711.422 374.992 705.25 374.992 c
699.078 374.992 694.066 369.98 694.066 363.809 c
694.066 357.637 699.078 352.629 705.25 352.629 c
711.422 352.629 716.434 357.637 716.434 363.809 c
f
716.434 284.52 m
716.434 290.691 711.422 295.699 705.25 295.699 c
699.078 295.699 694.066 290.691 694.066 284.52 c
694.066 278.348 699.078 273.336 705.25 273.336 c
711.422 273.336 716.434 278.348 716.434 284.52 c
f
716.434 262.914 m
716.434 269.086 711.422 274.098 705.25 274.098 c
699.078 274.098 694.066 269.086 694.066 262.914 c
694.066 256.742 699.078 251.73 705.25 251.73 c
711.422 251.73 716.434 256.742 716.434 262.914 c
f
9.9975 w
0 J
/DeviceGray {} CS
[0] SC
582.25 745.984 m
582.25 720.281 l
S
582.25 745.984 m
582.25 771.691 l
S
/DeviceGray {} cs
[0] sc
602.254 745.984 m
602.254 734.938 593.297 725.98 582.25 725.98 c
571.203 725.98 562.246 734.938 562.246 745.984 c
562.246 757.031 571.203 765.988 582.25 765.988 c
593.297 765.988 602.254 757.031 602.254 745.984 c
f
/DeviceRGB {} CS
[1 0 0] SC
705.25 315.676 m
705.25 293.508 l
S
705.25 315.676 m
705.25 337.84 l
S
/DeviceRGB {} cs
[1 0 0] sc
725.254 315.676 m
725.254 304.629 716.297 295.672 705.25 295.672 c
694.203 295.672 685.246 304.629 685.246 315.676 c
685.246 326.723 694.203 335.68 705.25 335.68 c
716.297 335.68 725.254 326.723 725.254 315.676 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font AYKTER+Helvetica
%%EOF
