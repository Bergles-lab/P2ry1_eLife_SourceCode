%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.60.1 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.5.0.944444 \\(R2018b\\). Operating System: Windows 10)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 102 87
%%HiResBoundingBox: 0 0 102 87
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font PCNHUY+Helvetica
%!FontType1-1.0: PCNHUY+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /PCNHUY+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -23 761 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 43 /plus put
dup 46 /period put
dup 48 /zero put
dup 50 /two put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 56 /eight put
dup 66 /B put
dup 67 /C put
dup 77 /M put
dup 82 /R put
dup 83 /S put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB9660E97140986C460AAFC0F27F41C0F31EA98BAC1D6EC92F1EA1F495
8778B4E03D6924C79C969F94D95DEC2827E57BCB1056104759BEE983DD5ED2A4
B69CC867EC956E793B16316C479C430E94AD23FA16F59EA99259DC04F50F9EC7
119268AE551F4064E33A4BFFCC48DD28CD7C0EB502F87F0A4B2B9F428C435FBF
7D0096B73EDD49EE24CCBF386C4697979CD8945C434CC44A3E9C701AC08CC5F2
47C5E3CFCC23E166C190797F1A365971804A95CB572B9FEDB60A7071ED6F70EA
C335A40F453B2F51F1AC59B923CF3608D86DD68C37F92252BD1ECEF942B008C3
6BC500B9E020F9F3C00BBF93F61401C6A338BFEE98FF0989B3DBA3D4CFB74054
2C45F0570168625C3E995FCE3A71F9E5EC7DDF936A24A3AD3763A210FFF74BC3
0A6A068174D00C422976628EE18ABB65CD41574AEF61D545DA2B8C4F4CB73150
1831CB3CEC19F667E155D9F3CCF62FF522E292E2FFCBC0AEF0BD2A8D4E4188EF
E38D048F84AA235ED3B1524E04CAC93B0865C2301AAFDFFBBA767E73EC209920
DC950CDF440CF0B3746A7BAC863A195B197F77EA6615F802B3A9C1894BB5B426
067746D9FEE9E98AAE158150DAC6D6B8881F1D44EE04C84632A21AF5777CCFFF
21A96F3B7547AD3E306FA07C555BBDD147BF07D19C1CE2446F7F2AF8ADFC4969
AC413CD9BCC8AFFE184EFE9CF4EEBA4E3B5CB6CABF4372B959BF2DAB0DC1B53C
E19D4867CEF42838AD4536B6B032A9EF0A710B56811F90D864677F0787CA78D5
3CAF043A97AC5EFE9FF13D8F46BECF7517B87272FFFA11CC6BB8CE6A02CDFD50
71B82D05863F6F72A68FA07EF7E34960B913A943D08EE24B9EC6CB26C3F2FEC0
A0D6933442B18FB2856E244273F5332DBF89C5FD8179ED2DA14A0D093EABF1E7
F4C20CC2FE2411C01D262987A495D246B54AAE364A3BEE0680E8F63BEE7D4EEE
001DB078A1A6260412E747F8E52343BC97552AABDA1CDD99C71102B31EFB9AAC
F8E2FC2759197815956209BD9EE6E082654194C9E95E80B97A3EDD8D502216F2
3D389ABB00E9018EBD5B58FB8123FEC8C19666AFF8559569E879DDC1C52CFF01
D88BC8852B57711272798B9F4512D204DFB00729C26B6467DBD4D3E42D96ED23
A105C54E02A5C755FE7E03F8132E411251A39EFFFC01F607FDF33E2A6A7CA1BD
42DF190B1D0C3622173DE6E4307727E3382911BA3EB5274C1565B27CC1EC592E
A2A9E807F640BF2C999A265FEA20E72C59CC942F5855A75687DFF877999CEF52
F06E4EF36510A6461441B5E50C0839327556BD7FC983C00D9C9B5155590FF113
A612513A2DBC6EE676E526C9C39A7AFB742F30CCB3593C4708555A5786F0B3C1
8201D61EF7523ECFB66B705913F037329D4E1A69603A601996136AA12F131A0E
4CE50020635BC7981FA26E63FCA83D8A78F2C8278E435B5E4746C4CFB21F9580
8AC33C2A402A5A3B5B4F61C561290B1CBB4C16CADC4A3D4959DA13575528BC09
6A67F562A0522EC6E89604E04E72910405821776A78C44C938AA33AF5FB6B911
F67E58FADE6270B2DE1879D46ED218A9D02C2B9D9648FB6987BF50A91FFCCBC3
62615D5CAB2855AA08F638DC2B02270F96DB493BC8652276E1E3E7BACE48C867
37DA5573562992B2C6A225E9050B2CD643FF8E7C56C243E4B87644F05A3AFF09
E677D8B9EDE01106AE943D564655C78E9656B27BEDEB92FFDBB2258815B84476
F6C84584986E67B7EFF789B4658BA8C79B4360F8A36EF122D725FF498C66FE31
7FF42B48048A7B326018AC6F8C81E7E9E9E25ABFE9A0324532B6136C275E41D8
AF65B3E4C498888E19EDB1C7638502201CCE6871BD7B8F3C81B70998315ADE5F
A398D3141282373A681912AEE614CBEF136DB4B71220A775786E98564B5BB4E9
79B2FF4921F9EA471EBA0164D01B955E267EFD587EA78C7BF4D3F630ABC40316
303663B3FEDE32204B3D0EAF0CA15BEA3F35B3B8439A3D395FE714D6A9635F49
13C8B30A78B0A0AEC9560B162719951D2F3BD2B223EDA6815708510247992C92
9B2EAA36716D3BDB629E510135BBC6CFC4DF09493383A2DAC083D3F6F68797D4
8149CAA756BABA7D5F2C5F48542DF693FC4336B123229F75FEE5D60967A13A88
F214EC4E3EFBA18D116880FFC806146BFC1687A5082E63BF5C19DBEAC0278232
D876CF790315C98731B0CF3D30DDBC90F1BA5AA16531D3DF98C0A891ED4FB62C
1E5CA2430D29C00C1E58C746A7A29C0602738ED819D774E82BCA6C0C27CB58C3
3EAA99E6939B29D27DFD5FE826965E2FB944FF1C34B08777AEB75DCCAAB22B04
5E30B2742035CAAE8F9A24014253E8B1A3E3CF9DB2F3A8C0A4AFBB5124910816
F453418FB569FA961832608FCD7A3846E6A8D7308245BB0F85131C45326F6816
7CE98B73908C85015695ED4C7D12B568438AB41BBF4564C8AE01B689DA3599E4
5CDB81145C8C0C241A1B1039F5541D1C95D17E9A3BA6A99E1FCD0BA908DAB866
E3FDD2D9098A61616268E1D09DA33AB8F07D4199C32F435E4002F7F1D65DF1DC
25AD2AC114963B51E25EBF3777AFFD1609B52BFFCA0E48011C5202D36D6C7D9C
EB9B647F73E5F45526AE2FB8F51998717201593493DE2693BECD84A7B833C664
AFA8BF109B242AA126875F2A3A7F2596A39E5F7051F05F40158EB92A50D78F4E
7A93541B8D1C93CC8D9CDB74497358F5C9E71A03BA764538B25DF83B131BDA2D
FF05CB8E601B7D67FE01D22F47360B380BC85C63B6B51CDF2EE9CADED03A8940
2BECA49BAEBDE62D7321B4B18A45F638972D8EF37180B0A2217E9AC835D88E78
6D9E43DD8E74B676B9B9BFC0AC55C4056F7991A7C8DC7E96FF4EB55BFDD8933A
ECB32F5E94B64EF6B075412B2E84A553B274BA09482F606342ADE5EA957F98BC
FDAC2F04D2897D51AF17F0E446053E02EA3304458267D53ED78015836500AAFC
149E3486941DA888D181065AE636070E4BF0D4BB43C5FB10F4DD81ADB71578F5
0C7ABED724B8CD5C69F93A67D5F3AA773117745A2B77B46B537505EEBAF6A45C
12D025EFA8BB360B6201D53F15F727F25407B9886895B25482E9C02A6E5B12BE
A126B594505F58BFF02E438A63B76053090ACBF8860EBAAB8033A5805013C118
35CCFAD0138C313EEF1C016FAC98C9B0B7FFC7B9597C70AE608ACEC30A36A336
2784B07425311DD8D3A8B5944FE6431332BAD12D5B14BCD1A268D20B82C326B9
30E0F8B6A51BA90820BF913995D5032B7BAEACEB716189B3618578D8E74BA25B
AA995AB8B97AB6F8352CCDD5AE12A703F170BE468BDF6D3600F4883BC713C79F
D62EB856C94DE8E8D694022893DC0B801B885AD247FCE1B055FF982E228D1444
78DDFAA368E489741CF705C9C7FC6D2E1D98637CF4A81620BDBDFA02D3DFD6AD
E9122E595F495F8794323CF765A93DE1777B467927E1EF78C948DB154A0546CC
DB902A5CB56004316072D406145921AA88D21B37BF5E7D3F123A8DD8D7BD2F98
50434060B40E18402280EC05E1CEBBB16757DDFDD3E4A47187E3A81CF86C4A0A
4B994BE36EE871BAEB56225D93C3BC32EB152BE3E83D768924112597B04EF91E
48F87D0BD07148B1EB844996A13C7E1006F22F048FEDD8EB5B05BD53DE33F28D
8457DA5E9234754E4668F36368B0E37BB26B87BF315639B91BBB70A112BD6C5E
0FE42B793C30961209EFF8EC428221F95493C51E8896977E19311A1BF7AE3B2B
FF404507231BEB4C0876FAB08450229E20EE6EACF5F53506A752F824AEEC8BC0
77E3F98661729446C2CE298DDF75A25563CA92EF068856A6F1EEDDE8792EF747
E88B4734F7B78BA1E84CE70228B134FF6835C939C733790D160E28A0AC4A23FC
C5547909682F63D1DEF3FB8E15E97DC826E3A9F87916337474B5CDAA6C5872D8
DAB3E04F6A761DD70A7F323D960E72D88A0BF2390458F5EB67C816A7D09A963F
988BFB7530C12A0F3936966498BC156B51DA1615478D1B07E1C78F4A1959D8AA
7A1D410C58B6DB7B9E19CDAA6BC2FF9BBB416FB3FC6804D70D4F535F29588E8B
3448D803F41C43438C4DC301F2ECCB35C3880A281003EE711787D3ADC6545F8F
021B2D19969368C6CAEFEC04A68AE5A6E1AFA6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /PCNHUY+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 102 87 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
10 0 1080 900 re
f
10 0 1080 900 re
f
235 330 750 502.5 re
f
7.5 w
2 J
1 j
/DeviceGray {} CS
[0] SC
235 330 m
985 330 l
S
360.004 330 m
360.004 322.5 l
S
526.668 330 m
526.668 322.5 l
S
693.332 330 m
693.332 322.5 l
S
859.996 330 m
859.996 322.5 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0.707107 0.707107 -0.707107 0.707107 21.6813 6.98516] Tm
0 0 Td
/F8_0 6.99975 Tf
(Baseline)
[4.668833
0
3.891861
0
3.499875
0
3.891861
0
1.553945
0
1.553945
0
3.891861
0
3.891861
0] Tj
14.035 -11.7849 Td
(shuffled)
[3.499875
0
3.891861
0
3.891861
0
1.945931
0
1.945931
0
1.553945
0
3.891861
0
3.891861
0] Tj
15.32022 -23.5701 Td
(+MRS2500)
[4.087854
0
5.830792
0
5.05382
0
4.668833
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0] Tj
37.60542 -35.3553 Td
(shuffled)
[3.499875
0
3.891861
0
3.891861
0
1.945931
0
1.945931
0
1.553945
0
3.891861
0
3.891861
0] Tj
Q
235 330 m
235 832.5 l
S
235 330 m
227.5 330 l
S
235 454.074 m
227.5 454.074 l
S
235 578.145 m
227.5 578.145 l
S
235 702.227 m
227.5 702.227 l
S
235 826.297 m
227.5 826.297 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 16.85 30.375] Tm
0 0 Td
/F8_0 6.99975 Tf
(0)
[3.891861
0] Tj
-5.25 12.4074 Td
(0.2)
[3.891861
0
1.945931
0
3.891861
0] Tj
-5.25 24.8148 Td
(0.4)
[3.891861
0
1.945931
0
3.891861
0] Tj
-5.25 37.2222 Td
(0.6)
[3.891861
0
1.945931
0
3.891861
0] Tj
-5.25 49.6296 Td
(0.8)
[3.891861
0
1.945931
0
3.891861
0] Tj
[0 1 -1 0 8.35 41.625] Tm
0 0 Td
/F8_0 8.00025 Tf
(Corr coef)
[5.776181
0
4.448139
0
2.664083
0
2.664083
0
2.22407
0
4.000125
0
4.448139
0
4.448139
0
2.22407
0] Tj
Q
/DeviceGray {} cs
[0.7012] sc
369.996 797.777 m
369.996 792.258 365.52 787.781 360 787.781 c
354.48 787.781 350.004 792.258 350.004 797.777 c
350.004 803.297 354.48 807.777 360 807.777 c
365.52 807.777 369.996 803.297 369.996 797.777 c
f
536.664 493.602 m
536.664 488.082 532.188 483.602 526.668 483.602 c
521.148 483.602 516.668 488.082 516.668 493.602 c
516.668 499.121 521.148 503.598 526.668 503.598 c
532.188 503.598 536.664 499.121 536.664 493.602 c
f
703.332 414.586 m
703.332 409.066 698.852 404.59 693.332 404.59 c
687.813 404.59 683.336 409.066 683.336 414.586 c
683.336 420.109 687.813 424.586 693.332 424.586 c
698.852 424.586 703.332 420.109 703.332 414.586 c
f
869.996 368.234 m
869.996 362.715 865.52 358.234 860 358.234 c
854.48 358.234 850.004 362.715 850.004 368.234 c
850.004 373.754 854.48 378.23 860 378.23 c
865.52 378.23 869.996 373.754 869.996 368.234 c
f
369.996 658.707 m
369.996 653.188 365.52 648.707 360 648.707 c
354.48 648.707 350.004 653.188 350.004 658.707 c
350.004 664.227 354.48 668.703 360 668.703 c
365.52 668.703 369.996 664.227 369.996 658.707 c
f
536.664 440.531 m
536.664 435.012 532.188 430.535 526.668 430.535 c
521.148 430.535 516.668 435.012 516.668 440.531 c
516.668 446.051 521.148 450.527 526.668 450.527 c
532.188 450.527 536.664 446.051 536.664 440.531 c
f
703.332 351.508 m
703.332 345.988 698.852 341.508 693.332 341.508 c
687.813 341.508 683.336 345.988 683.336 351.508 c
683.336 357.027 687.813 361.504 693.332 361.504 c
698.852 361.504 703.332 357.027 703.332 351.508 c
f
869.996 339.195 m
869.996 333.676 865.52 329.199 860 329.199 c
854.48 329.199 850.004 333.676 850.004 339.195 c
850.004 344.715 854.48 349.195 860 349.195 c
865.52 349.195 869.996 344.715 869.996 339.195 c
f
369.996 804.41 m
369.996 798.891 365.52 794.414 360 794.414 c
354.48 794.414 350.004 798.891 350.004 804.41 c
350.004 809.93 354.48 814.406 360 814.406 c
365.52 814.406 369.996 809.93 369.996 804.41 c
f
536.664 549.445 m
536.664 543.926 532.188 539.445 526.668 539.445 c
521.148 539.445 516.668 543.926 516.668 549.445 c
516.668 554.965 521.148 559.441 526.668 559.441 c
532.188 559.441 536.664 554.965 536.664 549.445 c
f
703.332 444.699 m
703.332 439.18 698.852 434.703 693.332 434.703 c
687.813 434.703 683.336 439.18 683.336 444.699 c
683.336 450.219 687.813 454.699 693.332 454.699 c
698.852 454.699 703.332 450.219 703.332 444.699 c
f
869.996 378.105 m
869.996 372.586 865.52 368.105 860 368.105 c
854.48 368.105 850.004 372.586 850.004 378.105 c
850.004 383.625 854.48 388.102 860 388.102 c
865.52 388.102 869.996 383.625 869.996 378.105 c
f
369.996 788.59 m
369.996 783.07 365.52 778.594 360 778.594 c
354.48 778.594 350.004 783.07 350.004 788.59 c
350.004 794.109 354.48 798.586 360 798.586 c
365.52 798.586 369.996 794.109 369.996 788.59 c
f
536.664 442.766 m
536.664 437.246 532.188 432.77 526.668 432.77 c
521.148 432.77 516.668 437.246 516.668 442.766 c
516.668 448.285 521.148 452.762 526.668 452.762 c
532.188 452.762 536.664 448.285 536.664 442.766 c
f
703.332 380.934 m
703.332 375.414 698.852 370.938 693.332 370.938 c
687.813 370.938 683.336 375.414 683.336 380.934 c
683.336 386.457 687.813 390.934 693.332 390.934 c
698.852 390.934 703.332 386.457 703.332 380.934 c
f
869.996 332.117 m
869.996 326.598 865.52 322.121 860 322.121 c
854.48 322.121 850.004 326.598 850.004 332.117 c
850.004 337.637 854.48 342.113 860 342.113 c
865.52 342.113 869.996 337.637 869.996 332.117 c
f
369.996 668.703 m
369.996 663.184 365.52 658.703 360 658.703 c
354.48 658.703 350.004 663.184 350.004 668.703 c
350.004 674.223 354.48 678.699 360 678.699 c
365.52 678.699 369.996 674.223 369.996 668.703 c
f
536.664 415.922 m
536.664 410.402 532.188 405.926 526.668 405.926 c
521.148 405.926 516.668 410.402 516.668 415.922 c
516.668 421.445 521.148 425.922 526.668 425.922 c
532.188 425.922 536.664 421.445 536.664 415.922 c
f
703.332 405.547 m
703.332 400.027 698.852 395.547 693.332 395.547 c
687.813 395.547 683.336 400.027 683.336 405.547 c
683.336 411.066 687.813 415.543 693.332 415.543 c
698.852 415.543 703.332 411.066 703.332 405.547 c
f
869.996 356.508 m
869.996 350.988 865.52 346.512 860 346.512 c
854.48 346.512 850.004 350.988 850.004 356.508 c
850.004 362.027 854.48 366.508 860 366.508 c
865.52 366.508 869.996 362.027 869.996 356.508 c
f
9.9975 w
0 J
360.004 743.641 m
360.004 710.871 l
S
360.004 743.641 m
360.004 776.406 l
S
/DeviceGray {} cs
[0] sc
384.996 743.637 m
384.996 729.828 373.809 718.641 360 718.641 c
346.191 718.641 335.004 729.828 335.004 743.637 c
335.004 757.445 346.191 768.637 360 768.637 c
373.809 768.637 384.996 757.445 384.996 743.637 c
f
526.668 468.449 m
526.668 444.586 l
S
526.668 468.449 m
526.668 492.316 l
S
551.664 468.453 m
551.664 454.645 540.473 443.457 526.668 443.457 c
512.859 443.457 501.668 454.645 501.668 468.453 c
501.668 482.262 512.859 493.449 526.668 493.449 c
540.473 493.449 551.664 482.262 551.664 468.453 c
f
/DeviceRGB {} CS
[1 0 0] SC
693.332 399.457 m
693.332 383.715 l
S
693.332 399.457 m
693.332 415.191 l
S
/DeviceRGB {} cs
[1 0 0] sc
718.332 399.457 m
718.332 385.648 707.141 374.457 693.332 374.457 c
679.527 374.457 668.336 385.648 668.336 399.457 c
668.336 413.262 679.527 424.453 693.332 424.453 c
707.141 424.453 718.332 413.262 718.332 399.457 c
f
859.996 354.832 m
859.996 346.215 l
S
859.996 354.832 m
859.996 363.449 l
S
884.996 354.832 m
884.996 341.023 873.809 329.836 860 329.836 c
846.191 329.836 835.004 341.023 835.004 354.832 c
835.004 368.641 846.191 379.828 860 379.828 c
873.809 379.828 884.996 368.641 884.996 354.832 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font PCNHUY+Helvetica
%%EOF
