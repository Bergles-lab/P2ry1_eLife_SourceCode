%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.60.1 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.5.0.944444 \\(R2018b\\). Operating System: Windows 10)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 86 85
%%HiResBoundingBox: 0 0 86 85
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font FNFNEN+Helvetica
%!FontType1-1.0: FNFNEN+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /FNFNEN+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -23 761 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 43 /plus put
dup 46 /period put
dup 48 /zero put
dup 50 /two put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 66 /B put
dup 67 /C put
dup 77 /M put
dup 82 /R put
dup 83 /S put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB966FC1848061C8C2792EA837CA2980815FE1B4759D42110B21023348
675B4A4C5BACC0A5FCF9882D40B72C58931ADA515092744BC84E4A0FA298B51C
28BDAC3577CA1159BC2EE6FEB2F7BAECDC5755E315C72798A3AAF95CB7810D8A
BAD78866D715F5EBE8C8BCBB25B37D6E898E6EE2FCC5EA72E8A3D9EA5958C8C6
313AD2EB3BDDBAE8AF5597ECDAA6B8E9F469DD8114344CF8DF185278EE8FAB28
E7D9D5B0B2A0C8A12CF4B3B222F35655BE778410885644E46CBC248CF15ACE81
1168935F03AF578D1055761EC4CD5AF4B20DA885D01FB3647463A49FCAD1C779
85C4D06529615C5338CF86CF8A2FE65602325B8F5768D88F91FF30DAE0DB0633
CB9B26766A975CF38F132972A1FF9F2A044E929FB2CEA50918287EF3D73D9D68
DCB2F5362EAE63285C2F7D0A134FF168AD9A99F8655DA95A336664383C56858C
2D9F3AD991CC4472AE5F3F7F22EDE3209C61BC8999A9E9213567B9AE7AC76AE5
76D72BA87086EA595171E8028570B17763C738C271E3E160CA77C04B838BD0D1
64154D63DC1DFBA871F874429C126634568DB62A845CC6736571F766BAE818C7
8EA44F2B67AB7246B64E80F622ADDE843A7400383756C784A7ACBE2597C6BA06
E6D234A1E86F2C0E6EF98C16DC7C3DFAD7A594F55969D5F884B30A74F619F638
852C012AE40AB915F1B16E62B562F54767EC7A7B022C470A2C3DDDC43953DC01
73BE370DC91451E0902D22AEF17D4361B1655492DE4133631AEAC88154C04CC9
39D3AB776F090E8E06F1DA9E8395645377A9E0921313698288FE4E3E6A2C01B7
72A7E48B8F2A9EB11F2D547C9266ECD4C6DDB6147AD2C5692D9801F8270AFDBC
8DC4C7811DBEECC647792671BAA716918D79EAEB05ADBFF35FB830AA86ADA6AB
45662FB98F8E04E7E27B6406AD11BBAE143F3F246CFE4C7FC9E2A4D3750C8832
E54C8221F914E7D762044ED4C802FD42FF9FAB451593F34DCC573710FEC56C49
59F0D8574E4BAC6E6C20831DEB13B965ED21BB405A0DE56D4C84DAF19026321D
26A9B97D3DBAAA79032D4FEB32D337C6E55E65C2823F4235DDFD11C862E2242E
27DB7053441A7CFB1F9A5D25002F2CA57F7CD18CCED8142A892C691F9A48EF7D
5D4A8BE5EF6BED2BFF95A62AB17ABE46E990D9359AC06C18E4A491197FC2BE62
3C03F0020778F9FD959892584183DA2A66F572B7FE59B84AFC64F59016373530
121DB66B1A1CFE726C970D6A6CA7878F975CD3FD200D5E079B1ED88AB443D432
DCF5CDFDD3EC765C88C999C40F64CC737B7F60F65649C03BD464DF545008C7EE
7A168269E41E1E27623712FFD070E7B7A4DE726465503216B67EF6545CE8A33E
5CC58EFCDF77E4EF0FACE38BD51BCDC00AE678F1E161F596C32B921D1F5ADF95
C97C64842FC717178F1D61A2EC07A291C507C9E6084AD7D22A1D5C4844EA6F29
2E8C9163C6BB226319D5E632B1B5CF36165402CFF89BC07A8F9259F2FF8EDEB0
3F0E0AD62156BBA648E5AC9E150B9C3FF525869A41D32AAD9C38949FA2602E24
C8DC8AF6F176CC05FE9142B720DC5AABA09259846D614A86ED26345BD44FD39E
B066A82EFE6C9D1C691E8EB43269A3ADD2867E73CB185B5648AB6EA7CB1C199B
280877865F51C5E6287E4B184552D60A73ECF2391A83D7841401E6B68560CAF2
FDF5C3B1ADCE532A85BD8AB7286DCA160AD80FF1100AD574929B944690720AE7
D913063900359059494AB80096CA27326B22D9773040675FCEB2AE32F20A8AF8
D5A749CF19B061332EDA448CFBF1D317CA8108A8EF4AEA48DDB569E0A1106E22
8DA814D4CDC7DC8B471ADDA09F6F686D407D6CFACE4B60D78598184C04BF4913
B0990844095524D32EFDCE171688DD054E9A00958539A04DF64D152E8724FE8C
6BD335987AF9A8B562D87C71C48BF9C862EA9579E56C6B523085F9576A9DFC0D
F0915DC311CF474776EEE5489B61E41398AB249BB2D38E54DE12BDC071F1B0C0
F64E4782466A97909DF2E01E1419E55A74FCAF31C628BF4CA4630F8F6EBA95A4
E2DA009BFD409CFDFD07686D96DCFFB5A79C9A9C5743B9DC8E3A1E44F589132E
F7ED6418C00F358BD6CB3C9D52FB3588AC5812773A79B1EEB92F4765A31A83C6
A0BFA0BDEB44F355EF993DDE1A46B11428AE42F33C255281F88BB8FBEB7713B1
99E534ACFD4B9BD735C5D651F9CBEEF60044E7C7E3CA810816B20EC874929A72
ECEAC8DCBA5BB95E945FCA5BCAFA166B8060619940B287635276FDE45B55EAC5
C3E7DF4CC87E9BD50FD6BA76EDE8C5890DB5B32801A7EB64BEF9833FE3D86B7F
A3F30260B6A773BAB7ECEB3EC12B2C034BB64EFD47725B315CAA3FBCB225CF26
64AAB5F19716DA67FA59BA0A5147D7423EEB5533A0C04849499B6C17B25B1A35
75D31232BF03BB4489E3C462563C96A6CEBE7DFE86F2569438C6429C20CBC732
878B7DD29E7B87EAF0D216EDC11BF38DDF92B5449472392D292BF6449F740CE6
3DF24B5BB7BEE9C61283367B4891A0456CB2FFF959DB89F85F8A2491EB6CFB7F
425915FFB5203C153EF0DCFA9697D7A20EE4F25E93CDD1F09913A79E859D9A97
FD261979B643379CCC2DA966C63D3D3E57384090C93358E18771078D648FB188
1C42E9E2AF9E21AFD9E69155179A048F0BE8C6C2F83AADE45E9F6871DDE16C2D
34109814662B31518758ED8C339630A09ED178377A7F8A4312134C7B89423020
43B8B651EDE7FC075E70DC13EF64EE52B8025770CF2676F287980CED02090325
724C70670216DE30603D0BB432DB8AFFA45B733B37F5D59E75C5ABD253EC1108
4A8FFD696C5FDAE0BC3342C3775C05D8716AC6007F7A558F3635FB5F744E9F91
9A9732ED2AF1C4545530CC205D8425C3CF3D94232788B202A04BE158E44A6031
BE1B2F755E2BC6A803CD3566F9A3B46D48ECAB403C93EDB2B36F6544B44A8367
3F506C714D6229A02CD9B617ABD816F8ADD6F136B83C341F1BE59ADCAC5DC9B5
781DCA6404E799A6047DCC02305895149327D8A59359B8FA7E2B457C08A4624F
2CC14C679ED95DB68578DFBC1AFA8E365C0688960ADA140248BEB686FAD0C990
BD8F41005312D7B8F71FB26DAA04F00BB488A5C2147552A490AFE4F26731FA23
067482322A2E61205D7F32B76AA8E2C7860C072AAB02F40B52B997843206C3C9
9B34A946FBD450FF83685C530F33CF0D08D7FB1A112B7C88349B065080E9FE52
673FC1D8DD3ADA19DB43075C026BC01884DAF12AD82A2E858E9D1BC1752EE408
5B9B3BDA726D79F1BB7F7DEEDE24E8153BF35035130226C37E504F5B6078BF69
5A6DA049EA4A22F3B319AAB0FFEDACFCE5424B63184F497DD5D16C99C7C406DA
B14781DBF808B51B90974B6BA69FABE80317AF13800BFC56EFD6EF3E6997670D
FD91B76402D703676738CBE9D3276E7DC834A02D9C17EBC9124E8AAE4F4211C6
51944FD5D517DB7F3B9FBD89346792C0793A420BFFE7F35C25295D05B21E2E43
17A095A94E35EB5C4C716B3051D673D934F3EB727444594108D6DCD8F5301815
2D921E1CD0C9F07F21AD651B3336B45E7AD5BE8FB4689246F09D36B33A0BC5DB
746077CC45B7717684923EB82FF6C582DD82CB140A27A704A318262C2DC80784
4AE4E1C4B2237417CF5DAEFBF00B0CC1B9EE7C211788DF5299F1316176AB88DF
C647889635F607D94A192825E4E06EE01493B45C5ECBB99831A57D4CE233894E
ABD4030AB03835252FAD75C9A9320496F2CAE1C6C2DEF39581B6E10C24410C94
12805B4C92A4B5FE54E948D757C021AF71B77A15521AC7710E72C3881FC95B3A
7D234486F774A80BC733252CE6BEE9A7C04DBA8AA21C52CA551AC7129F760189
644C74B39613617B19E4D33126F7ACA06FC40D18F635A6F63319F8AF9706F902
1A56C28E29A1E538
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /FNFNEN+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 86 85 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
10 0 900 900 re
f
10 0 900 900 re
f
235 330 592.5 502.5 re
f
7.5 w
2 J
1 j
/DeviceGray {} CS
[0] SC
235 330 m
827.5 330 l
S
333.754 330 m
333.754 324.074 l
S
465.414 330 m
465.414 324.074 l
S
597.086 330 m
597.086 324.074 l
S
728.746 330 m
728.746 324.074 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0.707107 0.707107 -0.707107 0.707107 19.0563 7.14258] Tm
0 0 Td
/F8_0 6.99975 Tf
(Baseline)
[4.668833
0
3.891861
0
3.499875
0
3.891861
0
1.553945
0
1.553945
0
3.891861
0
3.891861
0] Tj
11.5601 -9.31006 Td
(shuffled)
[3.499875
0
3.891861
0
3.891861
0
1.945931
0
1.945931
0
1.553945
0
3.891861
0
3.891861
0] Tj
10.37045 -18.62039 Td
(+MRS2500)
[4.087854
0
5.830792
0
5.05382
0
4.668833
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0] Tj
30.18075 -27.93072 Td
(shuffled)
[3.499875
0
3.891861
0
3.891861
0
1.945931
0
1.945931
0
1.553945
0
3.891861
0
3.891861
0] Tj
Q
235 330 m
235 832.5 l
S
235 330 m
229.074 330 l
S
235 455.625 m
229.074 455.625 l
S
235 581.25 m
229.074 581.25 l
S
235 706.875 m
229.074 706.875 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 17.0074 30.375] Tm
0 0 Td
/F8_0 6.99975 Tf
(0)
[3.891861
0] Tj
-5.25 12.5625 Td
(0.2)
[3.891861
0
1.945931
0
3.891861
0] Tj
-5.25 25.125 Td
(0.4)
[3.891861
0
1.945931
0
3.891861
0] Tj
-5.25 37.6875 Td
(0.6)
[3.891861
0
1.945931
0
3.891861
0] Tj
[0 1 -1 0 8.50742 41.625] Tm
0 0 Td
/F8_0 8.00025 Tf
(Corr coef)
[5.776181
0
4.448139
0
2.664083
0
2.664083
0
2.22407
0
4.000125
0
4.448139
0
4.448139
0
2.22407
0] Tj
Q
5.0025 w
0 J
/DeviceGray {} CS
[0.7012] SC
333.754 803.625 m
465.414 535.387 l
597.086 415.641 l
728.746 365.078 l
S
333.754 662.813 m
465.414 427.477 l
597.086 351.773 l
728.746 337.141 l
S
333.754 810.336 m
465.414 562.98 l
597.086 446.137 l
728.746 380.34 l
S
333.754 794.324 m
465.414 465.246 l
597.086 381.57 l
728.746 334.531 l
S
333.754 672.938 m
465.414 441.398 l
597.086 406.492 l
728.746 347.609 l
S
9.9975 w
/DeviceGray {} CS
[0] SC
333.754 748.809 m
333.754 715.629 l
S
333.754 748.809 m
333.754 781.988 l
S
350.414 748.809 m
350.414 739.605 342.953 732.145 333.75 732.145 c
324.547 732.145 317.086 739.605 317.086 748.809 c
317.086 758.012 324.547 765.473 333.75 765.473 c
342.953 765.473 350.414 758.012 350.414 748.809 c
f
/DeviceRGB {} CS
[1 0 0] SC
465.414 486.504 m
465.414 459.848 l
S
465.414 486.504 m
465.414 513.148 l
S
/DeviceRGB {} cs
[1 0 0] sc
482.082 486.5 m
482.082 477.297 474.621 469.836 465.418 469.836 c
456.215 469.836 448.75 477.297 448.75 486.5 c
448.75 495.703 456.215 503.164 465.418 503.164 c
474.621 503.164 482.082 495.703 482.082 486.5 c
f
/DeviceGray {} CS
[0] SC
597.086 400.32 m
597.086 384.383 l
S
597.086 400.32 m
597.086 416.258 l
S
/DeviceGray {} cs
[0] sc
613.75 400.324 m
613.75 391.121 606.285 383.66 597.082 383.66 c
587.879 383.66 580.418 391.121 580.418 400.324 c
580.418 409.527 587.879 416.988 597.082 416.988 c
606.285 416.988 613.75 409.527 613.75 400.324 c
f
/DeviceRGB {} CS
[1 0 0] SC
728.746 352.941 m
728.746 344.234 l
S
728.746 352.941 m
728.746 361.641 l
S
/DeviceRGB {} cs
[1 0 0] sc
745.414 352.938 m
745.414 343.734 737.953 336.273 728.75 336.273 c
719.547 336.273 712.086 343.734 712.086 352.938 c
712.086 362.141 719.547 369.605 728.75 369.605 c
737.953 369.605 745.414 362.141 745.414 352.938 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font FNFNEN+Helvetica
%%EOF
