%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.60.1 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.4.0.813654 \\(R2018a\\). Operating System: Windows 7)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 87 93
%%HiResBoundingBox: 0 0 87 93
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font XIIOQC+Helvetica
%!FontType1-1.0: XIIOQC+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /XIIOQC+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 762 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 53 /five put
dup 54 /six put
dup 65 /A put
dup 77 /M put
dup 82 /R put
dup 83 /S put
dup 97 /a put
dup 98 /b put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 112 /p put
dup 115 /s put
dup 116 /t put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB966FC1848061C8C2792EA837CA2980815FE1B4759D42110B21023348
675B4A4C5BACC0A5FCF9882D40B72C58931AF517DF541CAE397EEB49302082D4
84EA76FE6865FD0D5D635C2B1D6115C9C3A491DB57199900FDBCCCF0994EAB43
BAD4BFB4DAC85771D629060A7DA4A7AD6A52BA4335A368FF9168D634363A2F57
17F588FB0EA874DB37A38E56FD02B6DA3D725AB34BCE6AB6534A01AF5AAE66BF
D1714EF7AE5895D84B0FB667E9341429FF03071951DC5BEAEA1386F71A099B13
7C407D7F3AF6DECD1AE4B4CA1B408F06C7DC5B2ADD08F49360D537F90D10D0B9
994F44286D078DD63C754DB04D6E4D4CD8C1F39818896EDBB9F2AB7B42910C9D
366FC4A1572CCF21AA92F4ABF5B19AF4D0EE2FE9AA084B5E48F6E0DD525F2433
8F188D83EEB485C2D9847700583210D3098067887E35CFDAA998EBB57BF2E987
3590626EC872445F55E1259598AE7BE985DD4BC6657A65FE20714896C5C0E652
4593A83C8B823AA2215D9AF5D5BD5F3A2FE14DAADF17F5D690C4DDDC571AC317
52E247FAAF00882D70EA496988D1195071D9C097557D634CCDB91F8EE9F52046
8AB7B825B842C8F6E4149557454A884E664EF122CC5149F41BB180D72E092128
B6D650831ABC44969BA19E7456BDEA7FF1A62663C2F5D2F3AD11755CACD0BB97
C0E70ADFC69C2461E5557656A84512CE9078CA5F5B17C89891DBA26F7B042929
B92186EBA222068F361288C57C737633BBC801EEAE3FBB29B184199C5178D4AF
58DCA51FE6391018D5A156E40833336941E1A198CBFAC7DF09E44950A205A227
39E71A7B3E374CA23761265E952A1F13E0C0DF3F72802495D8F92F46B429AC7B
C7BAC0E4C27499274D64D3F97E671638948FDA9AA47F9C211F3E33EDA139D1E2
BFA7FAD28D66BE59AF753095AA179DF366C96E736936CAC1227C3552F9A1714C
D17FF049F87372DDD22C462A1E39F8A109BD0837707242C670DD21CC0DD2E35E
81C6A7815255DEBC79FE092DC02BAB4EAAB309CA045DCC2A42D65F8143887A87
0F1C9AFA86CD52552BA91B7F15E9175D588C304509C49BB6D1F7477F271B6C27
DC8A78611B3FE13694DE738EB24C20D7AF8A2C667F05C87898FB22FE4DD41A8E
8EDF1EE6377E2DE2654B4CB889F26ACFDF42A4F4B8A6D4732A3CE271F2B3DD9C
8EFAA2EFD98C4F35D908A14508EAE6FC2577394A321CDB208CDF269996570B87
52D950AB277F3752F126456ED04C4AC1E0EA10C784001B0E69E67F8942219FF5
67EE52136B839D50CCF5A7A2A1CD12D76A9CD6792DE1FB9E031A2472F228969A
12226D1BB3E503FF50AC0C795C169398E35A0D74997E4A455871D6B49E6493BA
E251E458F4F89CFF179B3093518F0812E58D01F8C980CA8A005DAE9847B05155
1E4DECB79DB81F9AB2647FE7B2F29C1A9255AEAA02BDC386E0541EF23A51D18B
CC78EAE598EB3D3AA2F93DD642190E3B78D2B450BB8D4798BA9214D448D9CD13
7F36D4ECB2E8B90776AF5F7050CF9F3CF9F4C31FEF9755CBB20A95CE56CAFA2E
0EB3252DF90F82A0834A4CB6B0BD5DF33481CEEBC5EDB8294768825287933051
1A928F2BBBDC830A416A788BC6846D826E07AB5D09ABC34099C6CBEA786D33BB
99F6480386AA1CAAEE0BAA088D67E501CD227D9559E71EB5D858D4AD15EAC642
A117779E93CC51239ABDA5624A487D321BF9DAB818AD5A0A334FDC528DACA390
3D0666DBC8A6A6F10C9E6D972E1B5E5B004F8DDA1C4F5C3CF0529D9795A5EFC9
DAF9922362D0A6342B2532B8B7721E600501AAAF97FF46596D50F9240743C3A5
02F2FF48E0A74B8F9C8306DBDB96435244F3389970A51E498F84DC0D07D702DC
A01640F908EFAA669107E15C5862BDBDC41AFF2ECA1F9A6B966EEC6A38FA0F4C
93DA27B3F27521D3A3E5E127C5D62F9D9A57E2A9D8FCAE2ECCBED1A04A9EAE51
D67C2E4D054BC4124072220F9BEAE06C2BB5A3E223BBE2BA4FCEB1E398E988B5
A32AEE851DC2A044608A45C7FAEAE372BE0CF854AA72D4782E240D7AB67EF0DA
4D266D6A9BC444EDD0036871D00A4F2C75240F41360C64463A87A47507A27A5A
6213C11B7ACC9AFF9610AD3C47AC55496FB5375416E2DD1D4A2A8EE0E4178B8E
F0A325AACE1ACED44D7B42E35A1738362B16F6A4DBA9CC6AECE9C2FDDA67686F
409F9B37FB44DE4A725CCF4E4A8C7FB8EA1F6A15407639E2EE3D6210A43FB273
4292C23CA9EA94B40AF2545D43635144EAD55AF603EE07AF597F84B67E07DE9E
E96DA4C1B14C0A7F15A3DB5FDE28788A12387E7CCC521EAAA921D58CF8670C40
3A6550F67C8C95D3E15545D42F0DA3A97387574159E4B7BE116F7E8754E00DB9
D704C16018B6AA76075B72B46E0D0A16CDE5FE6759BAD02B36CE2F68D013279D
5F3C794E1A0E591187C42D3D10BECD74B2AB35FACACE7C05F0C4FFF912331D4E
8FF209C73774E7CCFBA027200464EEF2F337E5B62E70427C2EFFF7C91F94C08F
117D8B1E8D5098502E4093F2E5A9ADAB63A8F453464E394CABB1EB925B1DDC0E
1AA4983CA2F9B17D9C3168C7950A672E4054ECAAE83BDFBC41E40FD551DDA4EA
5936C779470584C93A05CDC46CD37709723ABE42FC6ACF59649918B39D0BD072
DEBC84AF6458618C9ED22FE5ACE6C4256A60FAEC6AD31EB98AF680EF858DC520
D9EFB53F34BD219FE4B9D155E441B106E5E91DBA300B6B8F87C10D8DFEBA47BD
32305C71DE2F50435C12A7E337E467AEE88763B40421F4E95AA9087BD70B01F2
DDC8FFABFDB0A0046FAB77AF374646324E013730BA657F2748A3345453B1984A
914A151F615D50B2E8EE93767FEC03FDA6C4D82A1DA5C00D01F492363216343F
1B770D50BE85CC24C7704342A022970C5F1716CC5AEE8CB35366AB69E6C7DD57
1C2A6C59D7C5A99AE6520659C5CCA77347AB37A78A9DCC8D16C661D5B340BCFA
D7A1E2FAFF9770A5F8567611334868F8AC748CE78AB526DE714EE43D1AE1D0DA
857782DA71B23B0AD5E28BBE23573C599C8C934828369AEBC5B3E6AADF576D5C
76C36C8D4AB0A9B27350E50A588C13715E9E6D52A682CF439AD76FBD8B173B9C
604879DF00C873DB99F5775663678FD0DE4765F9D3C7474199542AA5196CAEB5
DC0FA86358ED81B3D877B3D4B478625497FBF6A337B481F2C7F719BED660DCAD
760CE7AE3E2579DCEEE9C0DEB17CD1B0ACED830E9A44FD4F14FD93348E8CE037
62C2738A934F4599C263CC4255BC35E3B2604B2F2AC7B559D957789833881C13
FE018D4AA574CD7A3AAF7FE2AFF938F26BC59A7E1547D9A3BF7DDADDD3BE4B83
708B585E67194D3021F569A92D5319F7922906C725DEECC4E261C6D3FEBD9534
94139573FBB4B8D18406BD859D8F0843451E04ECA603A5D20A3E282554C5D6B9
D61603DAE1855150FAE5BD3D0A24DD54502A7A5E7CB9838E8899757CE346C49E
BAAFE063479FF0E7B17B1D000C24A46DD7A12EB8540179414CF75594255AE8AE
8B6E778523E54C8971C4843704408C4559CCD440C87C82E604A34EE80E3A22C2
8ACFF87AC5904756295B2161314779167D866ED49B00894B96908556214942C4
A4602CD5F6506AA74A6385EA51CAEC66E52345A69A63B9E8DF3AE2E1FA868437
E9918A5852E50E5C9FEBCCCD63687E42F4E4BBAF0C0A3CEC8E03989E4406092F
4307D32AA061F19CAA46263AE280A9585746AB6671E9D535FAF6E63538606DC5
7ABD5F4534151F04BFD80DEC9CA308B8419F6B7A6FAC91CC889515FBE8738E0C
3FF6EFBEFA2AE3C2A223E1B819FEF7AFDE1D18033CA0BA4B7F721B2452CB81E1
1D9F566370E447E990D764E2FB8ACBDC6FD27A49F6319467070AF683A2E0A2D0
D7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /XIIOQC+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 87 93 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
10 20 870 937.5 re
f
10 20 870 937.5 re
f
452.5 125 345 765 re
f
7.5 w
2 J
1 j
/DeviceGray {} CS
[0.1489] SC
452.5 125 m
797.5 125 l
S
556 125 m
556 117.352 l
S
694 125 m
694 117.352 l
S
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 42.475 3.58516] Tm
0 0 Td
/F8_0 6.99975 Tf
(baseline)
[3.891861
0
3.891861
0
3.499875
0
3.891861
0
1.553945
0
1.553945
0
3.891861
0
3.891861
0] Tj
2127.51 TJm
(MRS2500)
[5.830792
0
5.05382
0
4.668833
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0] Tj
Q
452.5 125 m
452.5 890 l
S
452.5 125 m
444.852 125 l
S
452.5 316.25 m
444.852 316.25 l
S
452.5 507.5 m
444.852 507.5 l
S
452.5 698.75 m
444.852 698.75 l
S
452.5 890 m
444.852 890 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 38.5852 9.875] Tm
0 0 Td
/F8_0 6.99975 Tf
(0)
[3.891861
0] Tj
-3.75 19.125 Td
(10)
[3.891861
0
3.891861
0] Tj
-3.75 38.25 Td
(20)
[3.891861
0
3.891861
0] Tj
-3.75 57.375 Td
(30)
[3.891861
0
3.891861
0] Tj
-27 76.5 Td
(60000000)
[3.891861
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0] Tj
[0 1 -1 0 8.5 13.625] Tm
0 0 Td
/F8_0 7.70025 Tf
(Mean amplitude \(-pA\))
[6.414308
0
4.281339
0
4.281339
0
4.281339
0
2.14067
0
4.281339
0
6.414308
0
4.281339
0
1.709456
0
1.709456
0
2.14067
0
4.281339
0
4.281339
0
4.281339
0
2.14067
0
2.564183
0
2.564183
0
4.281339
0
5.136067
0
2.564183
0] Tj
Q
5.0025 w
0 J
/DeviceGray {} CS
[0.7012] SC
556 423.313 m
694 229.52 l
S
556 574.527 m
694 235.047 l
S
556 860.352 m
694 125 l
S
556 541.121 m
694 125 l
S
556 578.406 m
694 322.137 l
S
556 483.484 m
694 286.836 l
S
9.9975 w
/DeviceGray {} CS
[0] SC
556 576.867 m
556 515.238 l
S
556 576.867 m
556 638.496 l
S
/DeviceGray {} cs
[0] sc
580.996 576.867 m
580.996 563.059 569.809 551.871 556 551.871 c
542.191 551.871 531.004 563.059 531.004 576.867 c
531.004 590.676 542.191 601.867 556 601.867 c
569.809 601.867 580.996 590.676 580.996 576.867 c
f
/DeviceRGB {} CS
[1 0 0] SC
694 220.586 m
694 187.297 l
S
694 220.586 m
694 253.887 l
S
/DeviceRGB {} cs
[1 0 0] sc
718.996 220.59 m
718.996 206.781 707.809 195.594 694 195.594 c
680.191 195.594 669.004 206.781 669.004 220.59 c
669.004 234.398 680.191 245.586 694 245.586 c
707.809 245.586 718.996 234.398 718.996 220.59 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font XIIOQC+Helvetica
%%EOF
