%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.60.1 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.4.0.813654 \\(R2018a\\). Operating System: Windows 7)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 87 93
%%HiResBoundingBox: 0 0 87 93
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font UOZSKF+Helvetica
%!FontType1-1.0: UOZSKF+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /UOZSKF+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 762 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 48 /zero put
dup 50 /two put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 69 /E put
dup 77 /M put
dup 82 /R put
dup 83 /S put
dup 97 /a put
dup 98 /b put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB966C56AEEE4E303152D713BF57F7118DFC603E4A7CDC2E0904B8376E
D56DF637AC6598C63C446905C94BC7753D99804EB624FA54222D76E41B5E9430
8526D1AB6C5F687532BCC02EEE694CEE8278FD0F3537C7F6309867F2EC0E5A44
D54EE72359D6427FB8CC02902618511A687CF91B8CA02733C8E8DA1E52545997
F42299F6E329E9FE964DF64F93E838646DCDD43EACB61CA50BBEB8DDA2C15AAD
216F26BEA53CC2C91D77143F878408C65703D80E3A6C9F5181E34B360AA5349F
EA92CE8084573FE06803A285404A9D5787829755DCA40E2179E9E395BCD9C226
C247B91BB8DAE3CBEA3B6C8A6326CBBE3DEBB50DBC45BE7419A86F92BC24EA9E
35BC7BA73FD0B34BF5FB852DEB8E0E419C79D6CAC400EA1E36CB382CC6610094
B784A15054E826E32CEEDD96999B6C041877474C2B0DFA251980BBF453381959
6AD51A283627CB65EB8879EC1E7AB3DC17EC76700DC0A4126FB1EF513E19428F
C765D3A33A735A9D37715B8FA7A12B4FC270007B3774CA1D2AEEA65F45173A99
292CA4DB11490824075D37B3596DE37B2281838EC3CA5CC7622A502A2DFC1170
AFE9D44718C046EECD618A765E39476D4CC299F7E0DA2A89DACBE83BC1B9A7DC
F8C2A1D812A8BF44B8A3A4407745496F0EE23F20EC6AB917323E6645727E053B
D4F2376E8A6B1EE34A6191313D1483DE6412F01C73F833BC9D2BD7E1DFE139A8
43EF0C35ABA71C74C59A332AE12187985BD2683A0D8E22AE315C9003AD196B88
BA5EA3CD60AF0F6A93A82EF45B4DF8FB00C982CEED7A107DB0A3E5515C5C1814
1A4B02E656049526AD62B06834749578C7DBE4CA1CDFDDF085EDBBC9A2C1BD12
F5DC13B3EB8A44BF50606154B8571A967B7BFB41D44846A2E3748463131B7E30
EF439296E405C0458A62165F38251F91A434982AAB487074BEA7F967C790B49C
7266E38FFF502D0D18F9041CEFF9D5D2951590D15F5AAE7C8EC434C96AE55878
9BD4AE34FFFEB3646EB8DE013649F79205544415A90C326F07C12D6FBE58F57C
55110854C66D3C5518DEFD2D029C8B643D144D6E4A1E59B70567582FC622AA38
97DF0D3966CA38A6E459AD6ADF131A577C4DB7D9BDE1D5E48883CA64FFEDC96A
CBAB088D88B5F18AB2F9B56E6C76457DFF43888B4C37507EE947E1D96BAE6843
5C60042D01185F4464C794B6F356E073F31F3E9BFA5EAD6DE040F72D450D391D
5682233702163E495933F444DB793BB9286EF3F6180A75F94879F6F27E249700
763F1E4F410E9F19A0F338F78E1CFBB1DAB1A8D76AF9F7796A073998505790E4
E238E1AE352F7AD5F4D024680319EB0870B4795FE06418480BFE1058398530F5
314F1F643B15F8E3C442E85E770D98514EDFA3B145C7AAEEDE08D7652AC52B19
AFEE36EBD8E27A069113EFEEAF9E46CCD962B53172B2E61BFDA1DF03C54BCAC6
7467A0518E8A49D906D357563BBADA2F68E02E2705E2BE370B67CA1AB429B0D5
969FAABCA073A1A85628DAA85AF02DC2BF3B2EBE1239325A4FB9871C842293AC
CA85AE7297C8D27F5988803C177EC6A19556F2ECED61EAC7995B617594A7B1E1
610BAECB09FC49D5230F6CF907EE6CC7964B4079520CE5A7514F32D73F16D2FB
0E50F79A971DE117183FA63D3F393EA107D22473715CCDDA321C8B082EC837FF
4284A7ABD9D5D5FB7287DC9C2FF199B703DE92B99CBF110565458C2EF1982B35
D906339CB96236A9285321F032B5BE40318F8B8D9367690C6384326EDD87A19C
DF0C54D1A373E1B9D154E0C1416560C8B033874526AAC8BEC9EBDAE7C81E8233
FDB72944178FA444B427201E4F79E4F92F894D36145CEFF67C041B548B2A8B19
DDF0880B55C0A1A7FEFD15FB9D81FB1E3808835F19ED75F4D8CCEFAC2BAAC335
F1B0AAAC798278F3C42A96DF3C75723F7A2CE902367A9B8E5803535DCA99664D
CB7E78AB53D463D1E5B33CDB9F4C325FC4D62DB390ECC0AC2FD32B46B68C0824
2BC9EC8FE199B6BEB193E43059A3BA7D67A038B7E7781ACA1052EFA88F5604C8
3C35F1BDD9423E39E1D709C514C5AFEF0777D31CA32A80326FFE32F3162E4A9F
665072ACD4C0C29392119E6B929876044566D8E3C85DD20B957D3977B4A4337C
DC34F098CB44547A0C84D3FDD0177B498B259BB4F1321C0BA9A922778230ABB7
FE3858C6FDB4DF7F92AF0A6D696D0F76119ED00B7B9F91A0B8DEF2D153BE6B7C
F8A2B7193F8A7D94056D90BF2E2CB71AEFA2618B9A2343B3D56975EE90C21D1E
9ECD3B2A64204A8A3C3DD56BE64026970413D5841048B32D96B3E5E7C448AAE2
59B359D5BA2ABA34AEFB8DDBBD6F621B686FFC631E990176739224636659CB8D
043A0D75167F840635D50D53F88A600F08CD2E6A4F9E481C1049A4F53BE65614
39D6493EF9749E6491777C48C51A0DE700A28D65E85D37A0F6ACD2A490F3B748
AD08085EEA300804062B007A246F40609010F596888D6139FD2651F4CBA2B22F
6023DFB4FA3CEFD31FAF7B5BF75E6AB6D6F927FAC027C2625C7A54D792036A57
93171DC83493128566CD80A37BF315954C9A0F16B9BE5BE6ABDF9B5DD6F8C55C
88DB9B73AD0EB1DCA567AB2D045403B109CBA7327991654EB623DC17CA673AE8
CB47D99859F95AC88EC7024D8A4B3C776BDC4A70B20A0E515E60C95679E9291A
5DFC9FA8011D6961B247F2A377C3F4501DD4C6B80934326501A8B5F2A7754E5E
60C774904B1D6052ED4F5AB9B5FF8AF92404BA0BBE3F0B4D80ADC902258BE97B
2ED22A5C8926038B9C083CE7CFCAF87C651064E6FBF429C1D603F458FA9F6DD6
1998520ABF1455575441EC4DC5B54A873832980F56A2733E623166BB2DDFD24F
62FE95B0C3D285A9A3ACA80F05AE79D9C9D285F3CAEC1D146BAEC8818DD7747F
528A78C95FB53EA67173A98FA0A0D2607DBD70309B43D2840E1F33054FDBC971
04445956AE34CEEEF012F0E91FEC73ED5EFCF98B0D963AFD8B6748C3F30F3AC2
3F2D64F223A652232D904F83C8815261C7451CF5299D8CF27F6BBFAB570DE49C
3BD306113DF53CB1AF9D3DB8F8B12E2DD8F0AE036B54A0460695BFDF1EB2421A
D3139674EE82310A1C646F53175AF251222F3E3D5F0C529A4BB5C4139A5992B2
D83E736F8F3DEEB7DF096A241F8F70902A1CBAF62EF3596B64018FC88C2BD0C2
E226035F8980FD7AED76AC12F777710A2A8AA31570ED04877AB2D46B57649D84
674FAE3C0A135596CACB7B6402E42CB32AB74F40A047DE6C519BFBDC5B44566B
190D0027199AC265E34497303D69C53C1D5EFBFA35EBF6C8BBF25613DF33DCF8
3C12DB2586DE2A4BCF0863241E743FFA13E3700876E60BC8F938F008F3F78AA1
CB482FDE7314F566FB4055306B6503BDC0E56A3E4873B910A1D86345B17366
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /UOZSKF+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 87 93 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
10 20 870 937.5 re
f
10 20 870 937.5 re
f
452.5 125 345 765 re
f
7.5 w
2 J
1 j
/DeviceGray {} CS
[0.1489] SC
452.5 125 m
797.5 125 l
S
556 125 m
556 117.352 l
S
694 125 m
694 117.352 l
S
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 42.475 3.58516] Tm
0 0 Td
/F8_0 6.99975 Tf
(baseline)
[3.891861
0
3.891861
0
3.499875
0
3.891861
0
1.553945
0
1.553945
0
3.891861
0
3.891861
0] Tj
2127.51 TJm
(MRS2500)
[5.830792
0
5.05382
0
4.668833
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0] Tj
Q
452.5 125 m
452.5 890 l
S
452.5 125 m
444.852 125 l
S
452.5 380 m
444.852 380 l
S
452.5 635 m
444.852 635 l
S
452.5 890 m
444.852 890 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 38.5852 9.875] Tm
0 0 Td
/F8_0 6.99975 Tf
(0)
[3.891861
0] Tj
0 25.5 Td
(2)
[3.891861
0] Tj
0 51 Td
(4)
[3.891861
0] Tj
-27 76.5 Td
(60000000)
[3.891861
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0] Tj
[0 1 -1 0 8.5 19.625] Tm
0 0 Td
/F8_0 7.70025 Tf
(Events per minute)
[5.136067
0
3.850125
0
4.281339
0
4.281339
0
2.14067
0
3.850125
0
2.14067
0
4.281339
0
4.281339
0
2.564183
0
2.14067
0
6.414308
0
1.709456
0
4.281339
0
4.281339
0
2.14067
0
4.281339
0] Tj
Q
5.0025 w
0 J
/DeviceGray {} CS
[0.7012] SC
556 329 m
694 137.75 l
S
556 354.5 m
694 150.5 l
S
556 826.25 m
694 125 l
S
556 533 m
694 125 l
S
556 494.75 m
694 137.75 l
S
556 494.75 m
694 150.5 l
S
9.9975 w
/DeviceGray {} CS
[0] SC
556 505.379 m
556 432.844 l
S
556 505.379 m
556 577.902 l
S
/DeviceGray {} cs
[0] sc
580.996 505.375 m
580.996 491.566 569.809 480.379 556 480.379 c
542.191 480.379 531.004 491.566 531.004 505.375 c
531.004 519.184 542.191 530.371 556 530.371 c
569.809 530.371 580.996 519.184 580.996 505.375 c
f
/DeviceRGB {} CS
[1 0 0] SC
694 137.75 m
694 133.094 l
S
694 137.75 m
694 142.406 l
S
/DeviceRGB {} cs
[1 0 0] sc
718.996 137.75 m
718.996 123.941 707.809 112.754 694 112.754 c
680.191 112.754 669.004 123.941 669.004 137.75 c
669.004 151.559 680.191 162.746 694 162.746 c
707.809 162.746 718.996 151.559 718.996 137.75 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font UOZSKF+Helvetica
%%EOF
