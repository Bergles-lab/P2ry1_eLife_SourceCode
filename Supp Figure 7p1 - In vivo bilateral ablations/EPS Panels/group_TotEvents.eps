%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.60.1 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.5.0.944444 \\(R2018b\\). Operating System: Windows 10)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 90 108
%%HiResBoundingBox: 0 0 90 108
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font QFLODU+Helvetica
%!FontType1-1.0: QFLODU+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /QFLODU+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 762 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 53 /five put
dup 55 /seven put
dup 69 /E put
dup 75 /K put
dup 79 /O put
dup 80 /P put
dup 97 /a put
dup 98 /b put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB966FC1848061C8C2792EA837CA2980815FE1B4759D42110B21023348
675B4A4C5BACC0A5FCF9882D40B72C58931ADA515092744BC84E4A0FA298B51C
28BDAC3577CA1159BC2EE6FEB2F7BAECDC5755E315C72798A3AAF95CB7810D8A
BAD78866D715F5EBE8C8BCBB25B37D6E898E6EE2FCE823D0D97A90DD4CDE72EE
E2C4379CBBC935B30EA31F1456C29215167890723A3209036069A11A1EC95308
D574B5B704134140092247F14D17D9B318ACF2477E866762C8E30DE5B7C844F3
4094A44865F1973576B124030A846677F5A65E23FAE02D6A32D7641358D3FC48
566EBB8B2A6A6FC24111911E480249C481569904FC7ABA83FA66756DA36F6CDD
85A491D023DEDDDA512274A8F930453E5EA9E4C18A77DFA695B5C827B324D9C8
0A2EBEC7F35825885AD8A8AC90578328B481F4E4C7680FC63BD47218C21F5857
2EE555F4070B7EE662D83BA98565C0E00B2C02B995A467AE44D91D956827D88E
0546400D5EC150E3BD84244A297528EAD39D24C69C27D84BE34B4B1D386C50AB
2A4657187D627C9DC123D1395D3B6A52457024E0B981D8EF7530AD1E60B1F27A
A89739A0947ECF221D0CE1523774FEE550F5C0376F3D1B850874BBA104261FE1
E868A0B53CDEAAE1F0473817F6368E0217CA9BAC53C0C011DDFF4355EF6D826F
60F4F68C11F13F742D9DA7753348C66667540F7DF256162C3C434BD0C1217C2F
67241EE05FAC487F7AF0EFAFDC989B769D13491E7ECF77DDAAA7533F1CF32E7D
04BA0BD22314FB92EBDD86A0785D61D93913E1ABA6F7782C47DF7355A1BDB243
4A873C51BD15A4AC197D0C22ADA576009E53B5C7C8DE4EB08FD749D14F2D795C
92E67C31989A7EDA984619337C86BA234A27AC83001A77644052F10E3155DF32
E01A8702E8CE25B54E9B9AA429E082B00E2978780EAF3B561BAB872F8F22A9D8
DC478832549DB4DF4583F9829D860E0ADEB253499B2B3463593B733C35F472C8
0EDAC3B0F9596886CAD8D663F1D7DAFE7DB8E05A65B691FCFEE4EAF982490B01
C42CE434ABCA39164B65E9168F34271816A42767E026EA9D0EB7B771BDC750FC
6337D90BF375CAC62FE673F5C776A34B31C806B976C8A6138EBB933F72F985FA
53F7907420D0621996A094B487853AF4DFFC26C96E26186CE0FED88C770A27D9
264E6AEA81EF6AE268BC779D272D6DBA93D491CB0D35EB93B5F16397512B8669
36F712A5F6ED330F0117A3E9B6BCCF31F96B7C521990401951EABCCF7FEDAE55
EC9DE0875CE33C4668A7341BAEBB8C4D56D393A7B45C38470B5DCA6C79E823C2
6B9EE9C3FB632911148AB93DF0E7D1D3F90BF37563A5CBC818BF6160A5BEE7FE
F14A1AD18CC954E51B1D720D7AA0947A6F2286EB5DD9EC88FB775BA12902BFFE
1FFF2C1A4112F62BB87AA277DF80F021EE893DD03EC72CD0A7DDA5C314D88A21
125F08539D3C7D7C9D11009A6BD43402C6B42EE2297FAB82BEDA3C9B56D7A233
DC172BDFD986EA2E1D83ADAD73D1A6B18420F101F634E01DEB523B58C41C58DC
92E47EEA63B2A9CCCBD9EEBC1DD112ADBDD9CF58EB6255E1930A1E7CED309FDF
1AB889D32504BE10C2CFAAAA5A23508B2170834FF4F124793C8A71903F686275
C568A0421ED9A034FF4D12B690516E19E7257660B9F11D8B381AA1AB082AE818
CEBB26CF7DF1D598C703BE9B56A7B739526225035F1FE865C2A7DC259EE30C95
3B086CDB3C8F01E4E7CBFAE8412EDDD06F6C6D6208728B71F060AAAA8121388E
5E8060255B670EFE677B93493FF362366AD0CDDFA843F362D32EF84EC2147180
46FE3A46F5FF9FA125F733B9E217B976407933490DD0E819E9F4C9518E4FB6F5
28CBD94BCE1E5F0DA4AC244545C859D4916E9AA6DFC638DEDDFF7AA7F8D428CD
54676440166AC227A9587256261236691EFF48B55E7067C8DADE5AEB1BC7DB65
69224234B352D9049BF748EF20334761941E62B01BA034C9BA0E4A34A025F216
88FA669F1E2A1856DB36387D710559456299EAE348B1B485C115D22D619AAA94
E168C5C097C58903ADB95F6D16E0D99D5603CA67D487131C435BB4BFA49D5080
BAE5DD1182A5D8D1F1572C5D675C9455445D95792DA6F65BDAE4B6270884E5F3
29016011B48F0895F5DFD25C118F66546291AC5722E8749C36C431AB987855D8
EAF55EDC18C7E2FFE26765879D731701E3ECD77CDA493B689C55A1B55D67715A
8C4EA97B022230E2426E5AD428CD52575A92F98C7CCB53A19A0F8998A036750B
D5524791AB214898AA35B6816806F579DC89BF643D1570249FB601BDB08D2D6A
C5D1323B23D0F3944E9751AA0B533957041D61B6F6959DF1F14F059275654551
41AA3364E13B6E3558051CF655B252702F7E0160EBE686F11A2695C2A7CB3578
3B04ACB8D3DE62C0765CBB9231ECBAABAD21D1CF3A537D7278DE528793A489D5
167B1B18D2CB9D356453B9099A75108965F5D15E2D879D8F1E1FCB37005962C4
231ABF45D131D02EC987D5A9232F36AE3DC52B70759EC0162F1858D2A2B40629
489382543480EEB6C0A9BA71F38890A951C901FEDE383433ACB2BEFE935FA553
4A475DA2C4479BD916A1A31FCA2FA3146C19B34211FCCD846A4CC2ABF78311FB
CDAFF6B61783E0188A16587F5939ABF87D3A6D22D681388B8C206060196A4303
F52B11BFC2E1F5878791FD003D827DFB42124D55ADDF6E43FD4F693D58E7B990
6FDB8676A8288F4E2A23F5F7ACCDDA0CE12A70968C327DB72C8AEC10714AEE01
3BAD8224DB8F9E0B4DCFFB349F24A1A945BBFC31586B450596A40AA0B4C817FF
8516BD2E3C036AD490898875BF64247EFB7D23E68D0B65D2C777C52C1516892F
D5AB7EE82CD5CE930D98AAB1988B239BF598DB04B83DD505BE1943FB3EA3CA2E
254A060BEEC5B856018D3602EA0C008159AF011987E560AEB98B23AA65C732D7
A6A1A0B1C22FA13319DF44B2ECB627CD4F9D24A7E2BFC4CC11BC7C4D0FBE72FB
48C0CD1DE0F3E40F9012C6B72A73ADF5511411C71C40B2805ABB85A368662E28
D0128E5C692B12C4EAB18CEC8219A4CBA9FF6B6F9F0CFB69A4F2446705D89AD1
CD67FE41278745EC21B6A71538875048109FCC2DBDD02C0880E023627C51DE63
51DC98C14F0B591F4DF755DC4AAEBA82EC955CFDE73C4E20468BD23C7FBCC895
6535676433E88E6CABEFFA7DFC1A4447B9CB17289824FF5E622346A31D94C2F2
E0D7FA0DC273D9D02947E0100F1497C7BB2EA83BAC4086425ACDC81AE9F0ACAD
D1887697E9F790EF70A9CB2A1C6DC33B00966269650475E901A3F790ADFD6E08
CF9E99EA3498DDE0BB6CFC79998A798E53C435441409DAEE2A99AC827B3AB1C0
8683A9FEEE4D02D92B519F69D60EF71DE32825848FCF97B7D1CB5D8F121EC717
5CCC937A0F9E49F8B27EEF8E1087FF370606241EC1977967D9988DE1196E1195
BEC8A5E1724C1F8C43F22DF8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /QFLODU+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 90 108 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
0 0 900 1080 re
f
0 0 900 1080 re
f
225 120 367.5 877.5 re
f
7.5 w
2 J
1 j
/DeviceGray {} CS
[0] SC
225 120 m
592.5 120 l
S
335.25 120 m
335.25 111.227 l
S
482.25 120 m
482.25 111.227 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 18.15 2.97266] Tm
0 0 Td
/F8_0 6.99975 Tf
(P2ry1 KO)
[4.668833
0
3.891861
0
2.330917
0
3.499875
0
3.891861
0
1.945931
0
4.668833
0
5.445806
0] Tj
-11.55 0 Td
(P2ry1 KO bilateral ablation)
[4.668833
0
3.891861
0
2.330917
0
3.499875
0
3.891861
0
1.945931
0
4.668833
0
5.445806
0
1.945931
0
3.891861
0
1.553945
0
1.553945
0
3.891861
0
1.945931
0
3.891861
0
2.330917
0
3.891861
0
1.553945
0
1.945931
0
3.891861
0
3.891861
0
1.553945
0
3.891861
0
1.945931
0
1.553945
0
3.891861
0
3.891861
0] Tj
Q
225 120 m
225 997.5 l
S
225 120 m
216.227 120 l
S
225 339.375 m
216.227 339.375 l
S
225 558.75 m
216.227 558.75 l
S
225 778.125 m
216.227 778.125 l
S
225 997.5 m
216.227 997.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 15.7227 9.375] Tm
0 0 Td
/F8_0 6.99975 Tf
(0)
[3.891861
0] Tj
-5.25 21.9375 Td
(2.5)
[3.891861
0
1.945931
0
3.891861
0] Tj
0 43.875 Td
(5)
[3.891861
0] Tj
-5.25 65.8125 Td
(7.5)
[3.891861
0
1.945931
0
3.891861
0] Tj
-3.75 87.75 Td
(10)
[3.891861
0
3.891861
0] Tj
[0 1 -1 0 7.5 23.625] Tm
0 0 Td
/F8_0 8.00025 Tf
(Events per minute)
[5.336167
0
4.000125
0
4.448139
0
4.448139
0
2.22407
0
4.000125
0
2.22407
0
4.448139
0
4.448139
0
2.664083
0
2.22407
0
6.664208
0
1.776055
0
4.448139
0
4.448139
0
2.22407
0
4.448139
0] Tj
Q
/DeviceGray {} cs
[0.7012] sc
346.434 826.387 m
346.434 832.559 341.422 837.57 335.25 837.57 c
329.078 837.57 324.066 832.559 324.066 826.387 c
324.066 820.215 329.078 815.203 335.25 815.203 c
341.422 815.203 346.434 820.215 346.434 826.387 c
f
346.434 541.199 m
346.434 547.371 341.422 552.383 335.25 552.383 c
329.078 552.383 324.066 547.371 324.066 541.199 c
324.066 535.027 329.078 530.016 335.25 530.016 c
341.422 530.016 346.434 535.027 346.434 541.199 c
f
346.434 795.676 m
346.434 801.848 341.422 806.859 335.25 806.859 c
329.078 806.859 324.066 801.848 324.066 795.676 c
324.066 789.504 329.078 784.492 335.25 784.492 c
341.422 784.492 346.434 789.504 346.434 795.676 c
f
346.434 655.273 m
346.434 661.449 341.422 666.457 335.25 666.457 c
329.078 666.457 324.066 661.449 324.066 655.273 c
324.066 649.102 329.078 644.094 335.25 644.094 c
341.422 644.094 346.434 649.102 346.434 655.273 c
f
346.434 637.727 m
346.434 643.898 341.422 648.906 335.25 648.906 c
329.078 648.906 324.066 643.898 324.066 637.727 c
324.066 631.551 329.078 626.543 335.25 626.543 c
341.422 626.543 346.434 631.551 346.434 637.727 c
f
346.434 852.711 m
346.434 858.887 341.422 863.895 335.25 863.895 c
329.078 863.895 324.066 858.887 324.066 852.711 c
324.066 846.539 329.078 841.531 335.25 841.531 c
341.422 841.531 346.434 846.539 346.434 852.711 c
f
346.434 615.789 m
346.434 621.961 341.422 626.969 335.25 626.969 c
329.078 626.969 324.066 621.961 324.066 615.789 c
324.066 609.613 329.078 604.605 335.25 604.605 c
341.422 604.605 346.434 609.613 346.434 615.789 c
f
493.434 120 m
493.434 126.172 488.422 131.184 482.25 131.184 c
476.078 131.184 471.066 126.172 471.066 120 c
471.066 113.828 476.078 108.816 482.25 108.816 c
488.422 108.816 493.434 113.828 493.434 120 c
f
493.434 273.563 m
493.434 279.734 488.422 284.746 482.25 284.746 c
476.078 284.746 471.066 279.734 471.066 273.563 c
471.066 267.391 476.078 262.379 482.25 262.379 c
488.422 262.379 493.434 267.391 493.434 273.563 c
f
493.434 155.102 m
493.434 161.273 488.422 166.281 482.25 166.281 c
476.078 166.281 471.066 161.273 471.066 155.102 c
471.066 148.926 476.078 143.918 482.25 143.918 c
488.422 143.918 493.434 148.926 493.434 155.102 c
f
493.434 198.977 m
493.434 205.148 488.422 210.156 482.25 210.156 c
476.078 210.156 471.066 205.148 471.066 198.977 c
471.066 192.801 476.078 187.793 482.25 187.793 c
488.422 187.793 493.434 192.801 493.434 198.977 c
f
493.434 141.938 m
493.434 148.109 488.422 153.121 482.25 153.121 c
476.078 153.121 471.066 148.109 471.066 141.938 c
471.066 135.766 476.078 130.754 482.25 130.754 c
488.422 130.754 493.434 135.766 493.434 141.938 c
f
493.434 190.199 m
493.434 196.371 488.422 201.383 482.25 201.383 c
476.078 201.383 471.066 196.371 471.066 190.199 c
471.066 184.027 476.078 179.016 482.25 179.016 c
488.422 179.016 493.434 184.027 493.434 190.199 c
f
9.9975 w
0 J
335.25 703.539 m
335.25 658.141 l
S
335.25 703.539 m
335.25 748.934 l
S
/DeviceGray {} cs
[0] sc
355.254 703.539 m
355.254 692.488 346.297 683.535 335.25 683.535 c
324.203 683.535 315.246 692.488 315.246 703.539 c
315.246 714.586 324.203 723.539 335.25 723.539 c
346.297 723.539 355.254 714.586 355.254 703.539 c
f
482.25 179.961 m
482.25 157.688 l
S
482.25 179.961 m
482.25 202.238 l
S
502.254 179.961 m
502.254 168.914 493.297 159.961 482.25 159.961 c
471.203 159.961 462.246 168.914 462.246 179.961 c
462.246 191.012 471.203 199.965 482.25 199.965 c
493.297 199.965 502.254 191.012 502.254 179.961 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font QFLODU+Helvetica
%%EOF
