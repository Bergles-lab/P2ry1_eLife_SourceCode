%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.60.1 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.5.0.944444 \\(R2018b\\). Operating System: Windows 7)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 115 130
%%HiResBoundingBox: 0 0 115 130
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font XCFQXI+Helvetica
%!FontType1-1.0: XCFQXI+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /XCFQXI+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -23 520 723] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB95BAE1CA9B6B96993A391820BD2FF2C74B8C625BB7EB417F38B75767
095B4D2958974F7FCFB420DB8E4A4EB1CB90EC0C932021547595851B5B5FA175
1C8EB3D617CD23B72F60CF28C3ABF35CD2B900446AFAD2F0FD2AE2D193CF5340
170ED1F278E7DF670014B3FA077EC7A582C60211821EAC1FC0AC8EEA2272993D
E56A5E85C2997D00510F9E123DBFC5E135536AA2219B7FDEACC9D88849298412
E9E57BFCE11469DD65642C5B89750CA0BC47252D14088969A7F41E810583458B
9B6DF96D2B543C66F87EB5F3FE3D3B4139FE495403B05BCAC0C5EEB1090EC562
29031255BE214FB5FC2CB6DAFAC6CFD0D5D1BEA50F01DE657B065EBC122558FA
54ABA15A4F10D8541F0DD790E023D64124A87C0E150B9F32BABBB9C0F01F89C7
918750384C07CBC714CD27F7044C6191C46127521874C097F3007DC4B562B8DB
B5B49F68246D2E61091EDB2279F713F47AD342CDD81F6AB8153C5319361FEFFB
952A304C0B6F71B4235E5794C638962044274D06B4D6EFD1531C3AD17EF10051
3AC75481A8A62296A29AFCB07F9CBC1A803DA664D6AD329DFD59E5D7A5360697
98ACF8CC2BCC62CAD7BF35601E15E9E8151C5E10EDD3F6A3EEFD869E506C9FD5
641FAC7440AEDFB07634C03FB2517066CD5ACCAEA31F935ACFCE139285EB777F
F18552DD811F582CEBDD69ED5C227AAD29CBEA717F5A0F4D8780144DF23B6821
FD6E527D87A226606FCDE49DC1BB0244D0AB7A5FD774D7B6D465CDA779A60BAE
3D39094EC27B7963D5201D97D83E841EDAD5BCA296D03AD98DCEB59F1E0D6FC8
4633D90DB7E4EAC5DB2691A09F5235DB8D19B40E952E4034B19AC9C913AF266F
ABA49828F6041819C73BE8143C6DFF4BCAC7D0DCE3B5C8EF0FDCECAF9566A6D3
F0414287470CDE030657E2FBD2EC980A9EF8BD3C1809668A9FF63674417F027A
AF204CDEDE06886DD548CBD7E93696E846D4DE5C21E0F5B21742E45AC91B146C
BC7664530AF16C671A33E8751F411E1FB78668ABDFF3C79DCCAC6A3AC36800A4
09F34B703BF29BC6A4736C9C3450CB1F6AE9C5BFEA564369F584583B16C27EEC
4B34021D5B8953C13FE965C4C9751A496375E5E8C31AC7317E7C63A9FA8F1242
DB812F250E8BFE8CE90B58EF851339280E498DF6F699EBEAA8E9CF55F3A7E3E0
9859B514151A45FC95F401E63014A5A91DC39D76383F6254A3721E6CCED7282B
72C344FD1D626699E5E9E582064DB09671F9DCFA96292CAAEDB0EC3E0BF91E6F
782023D89350FCF6F1FC4817145AB9A5285DCDC325BEF479E7E7A24F5B779CC6
F281A75C3F22B6E7AD75284399CAEBB12C4A8844C8E2F26C8920CD18089BE16D
20922DD4AF2EFCE40BCFFB79A001E1DFF89AC67B02FFB09FD38C7BFC93B0F70B
2DDE0DD220C46A5151247D32E48B21EC86105BD37C7A43A7CAD5D87BFA0C4852
1A03C6148F48862154B342CF66CF8594012EF347FA0D30
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /XCFQXI+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 115 130 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
0 0.003906 1152 1296 re
f
0 0.003906 1152 1296 re
f
201.973 112.375 905.141 1153.66 re
f
7.4859 w
2 J
1 j
/DeviceGray {} CS
[0] SC
q
[0.999279 0 0 -1.00072 0 0] cm
202.118 -112.294 m
1107.91 -112.294 l
S
Q
q
[0.999279 0 0 -1.00072 0 0] cm
202.118 -112.294 m
202.118 -100.767 l
S
Q
q
[0.999279 0 0 -1.00072 0 0] cm
428.567 -112.294 m
428.567 -100.767 l
S
Q
q
[0.999279 0 0 -1.00072 0 0] cm
655.015 -112.294 m
655.015 -100.767 l
S
Q
q
[0.999279 0 0 -1.00072 0 0] cm
881.464 -112.294 m
881.464 -100.767 l
S
Q
q
[0.999279 0 0 -1.00072 0 0] cm
1107.91 -112.294 m
1107.91 -100.767 l
S
Q
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0.998558 0 0 1 13.8391 1.94297] Tm
0 0 Td
/F8_0 6.99163 Tf
(-0.4)
[2.328213
0
3.887346
0
1.943673
0
3.887346
0] Tj
-1518.19 TJm
(-0.2)
[2.328213
0
3.887346
0
1.943673
0
3.887346
0] Tj
-2107.52 TJm
(0)
[3.887346
0] Tj
-2310.15 TJm
(0.2)
[3.887346
0
1.943673
0
3.887346
0] Tj
-1851.19 TJm
(0.4)
[3.887346
0
1.943673
0
3.887346
0] Tj
Q
q
[0.999279 0 0 -1.00072 0 0] cm
202.118 -112.294 m
202.118 -1265.12 l
S
Q
q
[0.999279 0 0 -1.00072 0 0] cm
202.118 -121.74 m
190.591 -121.74 l
S
Q
q
[0.999279 0 0 -1.00072 0 0] cm
202.118 -310.729 m
190.591 -310.729 l
S
Q
q
[0.999279 0 0 -1.00072 0 0] cm
202.118 -499.718 m
190.591 -499.718 l
S
Q
q
[0.999279 0 0 -1.00072 0 0] cm
202.118 -688.706 m
190.591 -688.706 l
S
Q
q
[0.999279 0 0 -1.00072 0 0] cm
202.118 -877.695 m
190.591 -877.695 l
S
Q
q
[0.999279 0 0 -1.00072 0 0] cm
202.118 -1066.69 m
190.591 -1066.69 l
S
Q
q
[0.999279 0 0 -1.00072 0 0] cm
202.118 -1255.68 m
190.591 -1255.68 l
S
Q
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0.998558 0 0 1 -0.304297 9.56055] Tm
0 0 Td
/F8_0 6.99163 Tf
(-6000)
[2.328213
0
3.887346
0
3.887346
0
3.887346
0
3.887346
0] Tj
0 18.9125 Td
(-5000)
[2.328213
0
3.887346
0
3.887346
0
3.887346
0
3.887346
0] Tj
0 37.825 Td
(-4000)
[2.328213
0
3.887346
0
3.887346
0
3.887346
0
3.887346
0] Tj
0 56.7379 Td
(-3000)
[2.328213
0
3.887346
0
3.887346
0
3.887346
0
3.887346
0] Tj
0 75.6504 Td
(-2000)
[2.328213
0
3.887346
0
3.887346
0
3.887346
0
3.887346
0] Tj
0 94.5629 Td
(-1000)
[2.328213
0
3.887346
0
3.887346
0
3.887346
0
3.887346
0] Tj
13.4843 113.4754 Td
(0)
[3.887346
0] Tj
Q
2.4928 w
0 J
/DeviceRGB {} CS
[1 0.6504 0.1489] SC
q
[0.999279 0 0 -1.00072 0 0] cm
615.237 -1100.89 m
655.015 -1100.89 l
S
Q
q
[0.999279 0 0 -1.00072 0 0] cm
581.49 -1018.3 m
655.015 -1018.3 l
S
Q
q
[0.999279 0 0 -1.00072 0 0] cm
546.973 -721.968 m
655.015 -721.968 l
S
Q
q
[0.999279 0 0 -1.00072 0 0] cm
617.117 -358.167 m
655.015 -358.167 l
S
Q
q
[0.999279 0 0 -1.00072 0 0] cm
614.306 -342.858 m
655.015 -342.858 l
S
Q
/DeviceRGB {} CS
[0.196 0.6855 0.9492] SC
q
[0.999279 0 0 -1.00072 0 0] cm
655.015 -1100.89 m
693.801 -1100.89 l
S
Q
q
[0.999279 0 0 -1.00072 0 0] cm
655.015 -1018.3 m
703.414 -1018.3 l
S
Q
q
[0.999279 0 0 -1.00072 0 0] cm
655.015 -721.968 m
741.965 -721.968 l
S
Q
q
[0.999279 0 0 -1.00072 0 0] cm
655.015 -358.167 m
706.564 -358.167 l
S
Q
q
[0.999279 0 0 -1.00072 0 0] cm
655.015 -342.858 m
695.537 -342.858 l
S
Q
7.4859 w
/DeviceGray {} CS
[0.5996] SC
q
[0.999279 0 0 -1.00072 0 0] cm
655.015 -112.294 m
655.015 -1265.12 l
S
Q
/DeviceRGB {} cs
[0 0.051 0.9492] sc
709.523 358.422 m
709.523 360.34 707.973 361.891 706.059 361.891 c
704.145 361.891 702.598 360.34 702.598 358.422 c
702.598 356.504 704.145 354.953 706.059 354.953 c
707.973 354.953 709.523 356.504 709.523 358.422 c
f
/DeviceRGB {} CS
[0 0.051 0.9492] SC
q
[0.999279 0 0 -1.00072 0 0] cm
710.036 -358.164 m
710.036 -360.08 708.484 -361.63 706.568 -361.63 c
704.653 -361.63 703.105 -360.08 703.105 -358.164 c
703.105 -356.247 704.653 -354.697 706.568 -354.697 c
708.484 -354.697 710.036 -356.247 710.036 -358.164 c
h
S
Q
/DeviceRGB {} cs
[1 0.4709 0] sc
615.727 1101.68 m
615.727 1102.2 615.309 1102.62 614.793 1102.62 c
614.277 1102.62 613.859 1102.2 613.859 1101.68 c
613.859 1101.17 614.277 1100.75 614.793 1100.75 c
615.309 1100.75 615.727 1101.17 615.727 1101.68 c
f
/DeviceRGB {} CS
[1 0.4709 0] SC
q
[0.999279 0 0 -1.00072 0 0] cm
616.171 -1100.89 m
616.171 -1101.41 615.753 -1101.83 615.237 -1101.83 c
614.721 -1101.83 614.303 -1101.41 614.303 -1100.89 c
614.303 -1100.37 614.721 -1099.96 615.237 -1099.96 c
615.753 -1099.96 616.171 -1100.37 616.171 -1100.89 c
h
S
Q
585.766 1019.04 m
585.766 1021.64 583.664 1023.74 581.066 1023.74 c
578.473 1023.74 576.371 1021.64 576.371 1019.04 c
576.371 1016.44 578.473 1014.33 581.066 1014.33 c
583.664 1014.33 585.766 1016.44 585.766 1019.04 c
f
q
[0.999279 0 0 -1.00072 0 0] cm
586.188 -1018.3 m
586.188 -1020.9 584.085 -1023 581.486 -1023 c
578.89 -1023 576.787 -1020.9 576.787 -1018.3 c
576.787 -1015.7 578.89 -1013.6 581.486 -1013.6 c
584.085 -1013.6 586.188 -1015.7 586.188 -1018.3 c
h
S
Q
550.887 722.488 m
550.887 724.871 548.957 726.805 546.578 726.805 c
544.199 726.805 542.27 724.871 542.27 722.488 c
542.27 720.105 544.199 718.172 546.578 718.172 c
548.957 718.172 550.887 720.105 550.887 722.488 c
f
q
[0.999279 0 0 -1.00072 0 0] cm
551.284 -721.968 m
551.284 -724.349 549.353 -726.281 546.973 -726.281 c
544.592 -726.281 542.661 -724.349 542.661 -721.968 c
542.661 -719.586 544.592 -717.654 546.973 -717.654 c
549.353 -717.654 551.284 -719.586 551.284 -721.968 c
h
S
Q
614.273 343.102 m
614.273 343.328 614.094 343.508 613.871 343.508 c
613.645 343.508 613.465 343.328 613.465 343.102 c
613.465 342.879 613.645 342.699 613.871 342.699 c
614.094 342.699 614.273 342.879 614.273 343.102 c
f
q
[0.999279 0 0 -1.00072 0 0] cm
614.717 -342.854 m
614.717 -343.081 614.537 -343.26 614.314 -343.26 c
614.088 -343.26 613.908 -343.081 613.908 -342.854 c
613.908 -342.632 614.088 -342.452 614.314 -342.452 c
614.537 -342.452 614.717 -342.632 614.717 -342.854 c
h
S
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font XCFQXI+Helvetica
%%EOF
