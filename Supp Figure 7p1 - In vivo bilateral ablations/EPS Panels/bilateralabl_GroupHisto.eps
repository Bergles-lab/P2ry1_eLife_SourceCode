%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.60.1 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.5.0.944444 \\(R2018b\\). Operating System: Windows 10)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 101 68
%%HiResBoundingBox: 0 0 101 68
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font XMVBIX+Helvetica
%!FontType1-1.0: XMVBIX+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /XMVBIX+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [-8 -212 859 732] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 35 /numbersign put
dup 37 /percent put
dup 40 /parenleft put
dup 41 /parenright put
dup 47 /slash put
dup 48 /zero put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 54 /six put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 97 /a put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 115 /s put
dup 116 /t put
dup 118 /v put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB966D6518B5A8694B2654089FE00D86C0A7AE42411274EE55A1E0BAFD
F224E724525A32C38BF7C3DE517DC596830294AF404BD5F17FCD5789C434999B
90F3BC7D353843D7CD5C9AB7FDD85F6CE4F559851FBD2AC5821DA8BF693FBF22
AD92F11D7536969FEA694958BFF6EBDCF8BC430DFA526F4ADB45A2E8BBCB6B39
FF3941C860E99A1C077794384CE270F6A84085BA20BD6810960CE8EDCED38A1F
29778F05B0ECDC5335C47C8129872BB140BF70F36870F9722A008B3F24F60E15
EC6F3BDB2143EEE32ECC87CCD33328283A7A9ED63865F0AC10AB28CFDC81E452
282517D3C9DF544A4CA03BDED9B49138A94B8C1195BFC1604F4634DF20B3C3FB
CC1412920984FD023E71635D21D08E4A083F2E3DF4AFD13390B671F35ED9E4CC
557B7754DE815FC5BFC357C59DEE188C42DFF88A86059AB22EDCA65C50EAD8E9
A6CF25582B0A85792433667CA0F8654143241D6A4D379EE7871EA3CB08ACABEB
84D79067DBFB32D4C14787941A632DE06648F42DB0736EB444B1C5256B10D6F0
73BE62D20E4A828C304C94376EA7869F78E7CA4BFF785B020B26D12969C06874
D5DC3E47AF0C4864B24C361A48FC6361C54C9CDA3762DD369EA4278BF57C831F
63794F28847E1962AE7A27EEA86789A93B19CCFB31DDB589748DEC559BD6E8A9
AB5F8B85E29BD86D7E83DA9E2721B8060C09A6027D0300D9B33977CAA0ACDA96
4C7C4C7A95DDAE6238C4F1998FCFA5DC47B07D33A34A05ACD9FB5D6BDF992335
5C04AA3BD949433E54898FD84FE1E3800E0B9C3337D40AE600B30E81162C77BC
D3AE65019F33A80682935B9F6461C20556CDE58A84EB43E601967054AB540AE6
43456B7AAAA5AFA0E5D393D0C82B542EFC4CE34CC7CC4F61BA242E3C2A5D0D00
E424502B95FCC5F8384883EF1CD569DF062A5140B80E03CDC8A64286F352D147
9F68B059FB2719A6DD5B93FD0A841512DE37A5A975881CB427E4436192155208
EE7F221ECA3F5AE63D4108799CD7B34D35C11E0D515D8B8EC5B7FA43E4380765
BD8924043E5DF6FCD081B4EDA92189F8C56F547ECC0EF63AA7A73F79CE07E1F0
AE78452125D8B2C4209321E20CAB43AB2B77C85C9C742B37AC62B4FDAD2924F8
D09B7812E9A7A29426F75BB1959587D4CE917E0BF0FF8AEC923D6E67D40B4D36
245A4C544AB7DFD41142AE4918F0951F98860058B193E520FEC92CFAA72BE885
08BA0BA43FB20604B4F1CB2BD8FD679C312A1BB114631B869783B818FAB3B369
F54406CC64713B4DDC8A75C06C326201B507B967BA69B7DE188FB6A40CB17CAA
D09FACF860A708B541FA1D1C60F27E39806CD90ED286B6E512F4CF5D6B4E757B
248190B9D747039A24C27486F5FD1A558F5D1E4A1BAFD1B94546B8F6B26FEBFA
E6DC42F8805EF004781A816DDE69B50F09BE3C50D338C5602882F4213B55C104
716B534C2B1A3200DCDABC30C33E28E801A9A4316B148529CF3FE6874DC2A661
099423AE9237765E5CB3BDCFB534878727943A9B038E7E862403BE776D615A3E
5FD76B96256A3C7812D7BF63F5155D56DD745717EF1D4C0C97B2A1670563C26A
3FCFC6E135F88D8C9E375B4CD58BD8C96C06D1001514D9D6A830EE458F71888C
AB3C1EFD8BBBAA3D78B9CEBDEEF8384EBE0BDDFF74FE40F01F557C88AB042AD4
811B49411DDFE5DF8F20CE280DBD694C6971BD89A4104BA36B11F0A63367E7E8
DD97A3736B85A89F84EBA2EE51B67E0FF4CC943494D70FDBE43E804E80EBC21C
2A60FF417B761864228A8A3BC68AA13A5340BFA15303C604F1A6B4563E529779
AB8201F579DA4983F3D29C54A981B98E9330BA1A10C3DCBD74608810D56DBB4E
3509688B703F24CDCDEDF701FD81225BB1005E7300B37788A25820A55D988DA0
A011B47FFEC5184C437F5BBE3DF85003011CB8720533394BC30C44421B091E87
D5C3A5D4CB6D7C20B5B26EAF84E7618EFACC2B244C67CCA91A177FEFB7FF6E34
9EE1725F3725F8487E6C2B9FC95ADEB46028A65F194FEB2EC79EFE65EB9E9602
AF6165D2FCFA0B2FBD0DDDF0F09B9D9A465FFB5A1D3BE5BBD539E547EC9A6C14
D8FBFBA65CCB21CF05C5E13BA6F0B5E8DC894C9843D8BF4FFDE472AB22A10157
E7F5105368F94DF487BFC78A6BEB59F79A425607881569EF38C5F06D342113CE
EB2AC0EB3A7C742067991967C993D3EABCBA48859D36BD33CE96A8FF6E300948
4F5EA4515544B8AF7A3634120C1EC8533795A74210E54A796680465857423DFC
2C28FC612A0D4E08D80B4ED84A6756F993283011EDBB2424CC9FA90E59C225BC
BADF3816A2D35DDC816A2D26ED143ACF171C944989E66408D5BC470CB6A67F83
7285BCBC5DEB39375C91DB842A93FD24FC152EEEF53B43B5EEB53D5B26D3D7E1
728B0C362974B313D3DDD6E3FB6F49A1D024A610D855090E21261D5CA8005E9E
FB1B979569CB5B313EAE18776BE60BC934CA189A5742BB40BF7808CF1DC99CC0
842D290C581FB079763D9546AE5E5F509E1DA137312ACCBB3D6DB123C4B8EFA6
C10D0DC810F23FFFB0E6D4AF2E78D771C64DB2D1E185B35E4CDD7B185BE6F9DA
07A0CAF4DC6391105E192A2B4A04A8777D46296E3D778FBF0E896103A23CCB3E
FA4B7950EB04C4A8CD7D58E789B24BDE8B3ED3BA2216309CBAC597667666BF9B
0BC1DE45CB69E7FD874746DED5594502C876AB8B4A402028C787D383B215E91C
401EC71F8DFD923FD72CB024F2EF4AC3E097FD5A7C702542959D036AE9E8D4E7
66CCF15C82D03C4EF5361DB81F50D6C83D18FC95AC2BE8DB0529C41F92B1FEEC
D67EF5863F3C9915B06E243E2544360B829FBAF19A5E5F4EF8EA671F56E6C63C
CC3963F435F12DE75BB4128AEFD4DD2CB5E889C2CD6CEB12C3A3CAC85D748964
DB5329FE886E5D9A05ED8A57D9668C1309427BC50C10A9B2FBA8C9C10DABBEBE
DAC3B855C4B38AF1E35A6ACA98345ECD71C8EF9D8838A0F0D1A4EE2CDA641243
CFACE9EC61FD498701340788BCD7C1EBDFC20E21DF356B5B7A3402B5E9476975
8E4D5A98D29A7A02239223CCF59513B72FE00171FD236D6AD10ECCA1A38CE622
4FB6FFA2E8CA349D465EF60380156D051A4D85044963D1836A2C2031CBC80974
07D3FA2DB3E8CE170661514939CAAECE4A6F06B09EE4B62A246047BD577A643B
1A685DEA4C4CA5DA467C65768B17FE869D59EFD1751A00D16BE2DA0F7D99B2B3
4E7509830C308FD1013206864FACF0DDA0A77F0DAF4CEE87AAE6DDF787DE8069
76AA04C78FFFC2508FC9321A2B0D57A24E2E94B71BCC649FB082404EB7C04993
43EC32A7BECE0EE3D2E15AD37B62963389A2FE89F440A55B6A06D92481B8D961
9787EF0671DC737D886BB87B959201A230F63F50A5F76CE52575955FD3E64133
406D258EB339C34288D0FC71E48401171EDABE3B4B8DC44B175A2050CF9B7E1A
47C95058A3F87F5CDB2B6671EA29BDE02F74D1E3EACBC71E8899A6F210AA1E68
129F29055F0C06007C890FE04A3A0F89219A8D185293643596844BEC0F3949CA
AB023C9AC9F6A9090BF1C3F25175C8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /XMVBIX+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 101 68 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
0 0 1008 684 re
f
0 0 1008 684 re
f
210.629 202.945 752.238 435.957 re
f
5.01547 w
1 j
/DeviceGray {} CS
[0] SC
q
[1.00039 0 0 -0.999608 0 0] cm
586.516 -203.025 m
586.516 -639.153 l
S
Q
/DeviceRGB {} cs
[0.196 0.6855 0.9492] sc
586.746 227.469 m
613.0741 227.469 l
613.0741 276.5159 l
586.746 276.5159 l
586.746 227.469 l
h
586.746 281.965 m
594.26944 281.965 l
594.26944 331.0041 l
586.746 331.0041 l
586.746 281.965 l
h
f
/DeviceGray {} CS
[1] SC
q
[1.00039 0 0 -0.999608 0 0] cm
586.516 -276.624 26.318 49.066 re
S
Q
q
[1.00039 0 0 -0.999608 0 0] cm
586.516 -331.134 7.52 49.058 re
S
Q
q
[1.00039 0 0 -0.999608 0 0] cm
586.516 -385.655 0 49.062 re
S
Q
q
[1.00039 0 0 -0.999608 0 0] cm
586.516 -440.165 0 49.058 re
S
Q
q
[1.00039 0 0 -0.999608 0 0] cm
586.516 -494.686 0 49.07 re
S
Q
q
[1.00039 0 0 -0.999608 0 0] cm
586.516 -549.196 0 49.054 re
S
Q
q
[1.00039 0 0 -0.999608 0 0] cm
586.516 -603.721 0 49.074 re
S
Q
/DeviceRGB {} cs
[1 0.6504 0.1489] sc
586.746 276.516 m
565.4374 276.516 l
565.4374 227.4691 l
586.746 227.4691 l
586.746 276.516 l
h
586.746 331.004 m
576.7187 331.004 l
576.7187 281.9649 l
586.746 281.9649 l
586.746 331.004 l
h
586.746 385.504 m
585.49209 385.504 l
585.49209 336.461 l
586.746 336.461 l
586.746 385.504 l
h
f
q
[1.00039 0 0 -0.999608 0 0] cm
565.216 -276.624 21.3 49.066 re
S
Q
q
[1.00039 0 0 -0.999608 0 0] cm
576.493 -331.134 10.023 49.058 re
S
Q
q
[1.00039 0 0 -0.999608 0 0] cm
585.263 -385.655 1.253 49.062 re
S
Q
q
[1.00039 0 0 -0.999608 0 0] cm
586.516 -440.165 0 49.058 re
S
Q
q
[1.00039 0 0 -0.999608 0 0] cm
586.516 -494.686 0 49.07 re
S
Q
q
[1.00039 0 0 -0.999608 0 0] cm
586.516 -549.196 0 49.054 re
S
Q
q
[1.00039 0 0 -0.999608 0 0] cm
586.516 -603.721 0 49.074 re
S
Q
10.0234 w
/DeviceRGB {} CS
[1 0.6504 0.1489] SC
q
[1.00039 0 0 -0.999608 0 0] cm
558.238 -252.087 m
572.193 -252.087 l
S
Q
q
[1.00039 0 0 -0.999608 0 0] cm
571.748 -306.605 m
581.237 -306.605 l
S
Q
q
[1.00039 0 0 -0.999608 0 0] cm
584.24 -361.118 m
586.286 -361.118 l
S
Q
q
[1.00039 0 0 -0.999608 0 0] cm
586.516 -415.636 m
586.516 -415.636 l
S
Q
q
[1.00039 0 0 -0.999608 0 0] cm
586.516 -470.153 m
586.516 -470.153 l
S
Q
q
[1.00039 0 0 -0.999608 0 0] cm
586.516 -524.667 m
586.516 -524.667 l
S
Q
q
[1.00039 0 0 -0.999608 0 0] cm
586.516 -579.184 m
586.516 -579.184 l
S
Q
/DeviceRGB {} CS
[0.196 0.6855 0.9492] SC
q
[1.00039 0 0 -0.999608 0 0] cm
601.014 -252.087 m
624.657 -252.087 l
S
Q
q
[1.00039 0 0 -0.999608 0 0] cm
589.944 -306.605 m
598.129 -306.605 l
S
Q
q
[1.00039 0 0 -0.999608 0 0] cm
586.516 -361.118 m
586.516 -361.118 l
S
Q
q
[1.00039 0 0 -0.999608 0 0] cm
586.516 -415.636 m
586.516 -415.636 l
S
Q
q
[1.00039 0 0 -0.999608 0 0] cm
586.516 -470.153 m
586.516 -470.153 l
S
Q
q
[1.00039 0 0 -0.999608 0 0] cm
586.516 -524.667 m
586.516 -524.667 l
S
Q
q
[1.00039 0 0 -0.999608 0 0] cm
586.516 -579.184 m
586.516 -579.184 l
S
Q
7.51945 w
/DeviceGray {} CS
[0.5996] SC
q
[1.00039 0 0 -0.999608 0 0] cm
586.516 -203.025 m
586.516 -639.153 l
S
Q
2 J
/DeviceGray {} CS
[0] SC
q
[1.00039 0 0 -0.999608 0 0] cm
210.546 -203.025 m
962.49 -203.025 l
S
Q
q
[1.00039 0 0 -0.999608 0 0] cm
210.546 -203.025 m
210.546 -195.502 l
S
Q
q
[1.00039 0 0 -0.999608 0 0] cm
398.531 -203.025 m
398.531 -195.502 l
S
Q
q
[1.00039 0 0 -0.999608 0 0] cm
586.516 -203.025 m
586.516 -195.502 l
S
Q
q
[1.00039 0 0 -0.999608 0 0] cm
774.505 -203.025 m
774.505 -195.502 l
S
Q
q
[1.00039 0 0 -0.999608 0 0] cm
962.49 -203.025 m
962.49 -195.502 l
S
Q
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1.00078 0 0 1 16.9254 11.375] Tm
0 0 Td
/F8_0 7.01515 Tf
(60)
[3.900423
0
3.900423
0] Tj
-1566.65 TJm
(30)
[3.900423
0
3.900423
0] Tj
-1834.55 TJm
(0)
[3.900423
0] Tj
-1854.8 TJm
(30)
[3.900423
0
3.900423
0] Tj
-1566.65 TJm
(60)
[3.900423
0
3.900423
0] Tj
[1.00079 0 0 1 20.3105 2.35508] Tm
0 0 Td
/F8_0 8.01785 Tf
(# of Dominant Events)
[4.457925
0
2.228962
0
4.457925
0
2.228962
0
2.228962
0
5.788888
0
4.457925
0
6.678869
0
1.779963
0
4.457925
0
4.457925
0
4.457925
0
2.228962
0
2.228962
0
5.347906
0
4.008925
0
4.457925
0
4.457925
0
2.228962
0
4.008925
0] Tj
Q
q
[1.00039 0 0 -0.999608 0 0] cm
210.546 -203.025 m
210.546 -639.153 l
S
Q
q
[1.00039 0 0 -0.999608 0 0] cm
210.546 -203.025 m
203.026 -203.025 l
S
Q
q
[1.00039 0 0 -0.999608 0 0] cm
210.546 -421.087 m
203.026 -421.087 l
S
Q
q
[1.00039 0 0 -0.999608 0 0] cm
210.546 -639.153 m
203.026 -639.153 l
S
Q
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1.00078 0 0 1 14.393 17.6637] Tm
0 0 Td
/F8_0 7.01515 Tf
(0)
[3.900423
0] Tj
-3.75838 21.798 Td
(20)
[3.900423
0
3.900423
0] Tj
-3.75838 43.5957 Td
(40)
[3.900423
0
3.900423
0] Tj
Q
75.2227 252.508 m
75.2227 252.039 74.9883 251.801 74.5156 251.801 c
74.5156 251.883 74.4961 251.922 74.457 251.922 c
74.4219 251.922 74.3633 251.922 74.2852 251.922 c
16.9258 280.344 l
16.2969 280.578 15.9844 281.086 15.9844 281.867 c
15.9844 283.039 l
15.9844 283.746 16.2969 284.219 16.9258 284.453 c
74.2852 312.992 l
74.3633 312.992 74.4219 312.992 74.457 312.992 c
74.4961 312.992 74.5156 312.992 74.5156 312.992 c
74.9883 312.992 75.2227 312.797 75.2227 312.406 c
75.2227 252.508 l
h
68.6406 258.027 m
68.6406 301.48 l
24.6797 279.758 l
68.6406 258.027 l
h
f
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 0.999216 -1 0 7.52227 31.5691] Tm
0 0 Td
/F8_0 8.02414 Tf
(F/F \(%\))
[4.90275
0
2.230711
0
4.90275
0
2.230711
0
2.672039
0
7.13346
0
2.672039
0] Tj
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font XMVBIX+Helvetica
%%EOF
