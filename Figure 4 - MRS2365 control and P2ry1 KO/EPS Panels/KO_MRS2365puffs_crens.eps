%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.60.1 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.5.0.944444 \\(R2018b\\). Operating System: Windows 7)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 188 105
%%HiResBoundingBox: 0 0 188 105
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font TDTJHF+Helvetica
%!FontType1-1.0: TDTJHF+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /TDTJHF+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -23 520 723] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 54 /six put
dup 56 /eight put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB9C0F73E9E6CC9EB61395656206F2DFEDDBCB2DD7AA9D39EA4C3FDF02
61A45E919EE91911996CCAAF9BAC24D321240A5011E420BF3F435E2337F6DFDE
BCA532754CC3F717AB65623F43BCB6A2B040D178A1EBB1F8A455CE8989616AB6
9775B17C3BC7206D594D62CF254CDA647550B2B6E338EB7202ACBAA9143B2969
E95D132B9F7392E14D994F62D4A24835B1992FB0B8BBC826F2F56E58E064A1ED
F621786D9DC0FA54CDA63CF38FF306D4C73EDF520FF2C795B394D8DA61EB4455
30FD3759DF38D7D583CEDB58EBE979162AEDEDD2626787101483CCD75CA94ACD
090618FE894EF645F0EF931EADC3DD211FD9D842D0121734E6AD221F62B45A8E
0FB8B113674D756B250A8F18BDD057D20AFE3D814DD9E5160FA742EC9B250A83
AD4D50E9917CACEDB75A2D2FEF3434C5E5E817B920417456DE5164DA23A3DD24
A32AB05A356E32F44803D171DBE370F6EB80B5A814DFE6072B8BC148888929E9
61B8BE057EC4502B4521832DE002A386CBD991BC92DEADDD514737FF289F4DE3
465FFB3E7A2FEC1DD9D9412487659D47F853513A45071CBB44D95F702E9AC19E
8AA7E69505CA0A600C5325004C7833A2E0E73E5596F8C04E66B4CD2C4C34621A
5E78AFE6BE127DE1EDF946918019B1585D0B8A0F5656CA4C33BEF897248BE6CD
BCCB8CA51F3A6E6EB36415771E75C25CCDA4061528EA7ABD76E732B8BD8E35DE
2AAA59F953B1D3EDFCA7BC66702D4332AF22460FFFD15DC67CEC46E4105FB00C
B1238A0AC883D613B55A43DBAB620DED5408D432243BF5DAAF79C4BF173B98A0
B591FACE587B31392AAC8126DC3716E02A25404FD89966A6658620A8CEA4F764
AC68DE679632E5D1A205EA2FCFB8D398C170EBB61CBF2F5F38404F3C712676CA
D21FF90C9249495BEA27EB792783637D36A130F849DC9D8B9EFB7D32096C2327
079DF07890D59F462031E2C149A17A4601513F0C534813B3A8AEB78711986C6F
7BB574523531A34F9302506BE123491A348AA52D61922A36EA56C616CA621A01
314EC0BAF3C854CE1FF43BD5B74928DD2BB01CA6EE10AECBFEC2E039977733FF
044AAAAB25B2B226E44CDB2A4DBB16DF37BED3DA5710CAFD7C594B7EED0F5B70
C41981918D2673E70B54B764A8DED708C2D8931938D2FB4EDCE6AF75266FFC24
12908CDC09DEEEC1569DB16BFA886761698E6EB1A64FB0FBE11BC53F6EAA7B40
589187F430F528C32393F9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /TDTJHF+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 188 105 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
-160 10 2160 1080 re
f
-160 10 2160 1080 re
f
117.5 130 1680 877.5 re
f
7.5 w
2 J
1 j
/DeviceGray {} CS
[0] SC
117.5 130 m
1797.5 130 l
S
117.5 130 m
117.5 113.199 l
S
397.496 130 m
397.496 113.199 l
S
677.504 130 m
677.504 113.199 l
S
957.5 130 m
957.5 113.199 l
S
1237.5 130 m
1237.5 113.199 l
S
1517.5 130 m
1517.5 113.199 l
S
1797.5 130 m
1797.5 113.199 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 9.5 3.16992] Tm
0 0 Td
/F8_0 6.99975 Tf
(0)
[3.891861
0] Tj
-3176.28 TJm
(20)
[3.891861
0
3.891861
0] Tj
-2888.14 TJm
(40)
[3.891861
0
3.891861
0] Tj
-2888.14 TJm
(60)
[3.891861
0
3.891861
0] Tj
-2888.14 TJm
(80)
[3.891861
0
3.891861
0] Tj
-2620.28 TJm
(100)
[3.891861
0
3.891861
0
3.891861
0] Tj
-2332.14 TJm
(120)
[3.891861
0
3.891861
0
3.891861
0] Tj
Q
117.5 130 m
117.5 1007.5 l
S
117.5 130 m
100.699 130 l
S
117.5 305.5 m
100.699 305.5 l
S
117.5 481 m
100.699 481 l
S
117.5 656.5 m
100.699 656.5 l
S
117.5 832 m
100.699 832 l
S
117.5 1007.5 m
100.699 1007.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 1.91992 10.375] Tm
0 0 Td
/F8_0 6.99975 Tf
(-2)
[2.330917
0
3.891861
0] Tj
2.25 17.55 Td
(0)
[3.891861
0] Tj
2.25 35.1 Td
(2)
[3.891861
0] Tj
2.25 52.65 Td
(4)
[3.891861
0] Tj
2.25 70.2 Td
(6)
[3.891861
0] Tj
2.25 87.75 Td
(8)
[3.891861
0] Tj
Q
5.0025 w
0 J
131.504 311.703 m
145.496 306.461 l
159.5 301.961 l
173.504 301.602 l
187.496 305.336 l
201.5 308.004 l
215.504 299.523 l
229.496 304.375 l
243.5 302.094 l
257.504 298.727 l
271.496 299.172 l
285.5 300.559 l
299.504 297.969 l
313.496 293.492 l
327.5 296.508 l
341.504 296.148 l
355.496 298.344 l
369.5 302.078 l
383.504 297.934 l
397.496 302.453 l
411.5 300.129 l
425.504 305.637 l
439.496 301.316 l
453.5 304.734 l
467.504 299.148 l
481.496 295.676 l
495.5 302.426 l
509.504 300.969 l
523.496 295.383 l
537.5 299.719 l
551.504 296.941 l
565.496 307.652 l
579.5 307.18 l
593.504 305.477 l
607.496 295.156 l
621.5 297.82 l
635.504 294.781 l
649.496 294.445 l
663.5 294.625 l
677.504 294.902 l
691.496 301.301 l
705.5 295.359 l
719.504 293.941 l
733.496 301.277 l
747.5 293.125 l
761.504 292.953 l
775.496 301.375 l
789.5 293.199 l
803.504 301.051 l
817.496 299.266 l
831.5 297.648 l
845.504 298 l
859.496 295.855 l
873.5 288.813 l
887.504 296.043 l
901.496 295.48 l
915.5 290.133 l
929.504 293.559 l
943.496 288.746 l
957.5 287.762 l
971.504 285.168 l
985.496 284.574 l
999.5 290.77 l
1013.5 284.094 l
1027.5 296.762 l
1041.5 292.75 l
1055.5 281.523 l
1069.5 285.039 l
1083.5 283.629 l
1097.5 288.453 l
1111.5 294.504 l
1125.5 285.211 l
1139.5 284.816 l
1153.5 281.695 l
1167.5 288.859 l
1181.5 280.504 l
1195.5 290.598 l
1209.5 278.641 l
1223.5 276.094 l
1237.5 280.668 l
1251.5 286.051 l
1265.5 279.859 l
1279.5 286.09 l
1293.5 271.051 l
1307.5 278.531 l
1321.5 274.398 l
1335.5 279.355 l
1349.5 281.809 l
1363.5 275.523 l
1377.5 287.02 l
1391.5 274.809 l
1405.5 273.766 l
1419.5 277.855 l
1433.5 274.719 l
1447.5 275.313 l
1461.5 275.934 l
1475.5 274.93 l
1489.5 281.461 l
1503.5 282.82 l
1517.5 280.039 l
1531.5 281.785 l
1545.5 281.844 l
1559.5 275.492 l
1573.5 275.641 l
1587.5 278.402 l
1601.5 280.188 l
1615.5 278.551 l
1629.5 283.051 l
1643.5 279.25 l
1657.5 284.605 l
1671.5 285.887 l
1685.5 286 l
1699.5 283.008 l
1713.5 284.176 l
1727.5 286.891 l
1741.5 287.59 l
1755.5 282.488 l
1769.5 290.559 l
1783.5 287.035 l
1797.5 286.016 l
S
/DeviceRGB {} CS
[0.251 0.1489 0.1489] SC
131.504 305.648 m
145.496 304.613 l
159.5 302.922 l
173.504 304.309 l
187.496 309.617 l
201.5 311.305 l
215.504 319.594 l
229.496 310.262 l
243.5 306.895 l
257.504 307.48 l
271.496 315.324 l
285.5 311.148 l
299.504 310.789 l
313.496 317.973 l
327.5 309.594 l
341.504 315.969 l
355.496 310.914 l
369.5 308.191 l
383.504 312.551 l
397.496 309.805 l
411.5 311.824 l
425.504 312.805 l
439.496 309.227 l
453.5 310.734 l
467.504 310.141 l
481.496 313.301 l
495.5 311.344 l
509.504 309.602 l
523.496 315.578 l
537.5 309.813 l
551.504 306.301 l
565.496 308.934 l
579.5 312.977 l
593.504 307.359 l
607.496 316.465 l
621.5 311.727 l
635.504 311.727 l
649.496 311.613 l
663.5 313.496 l
677.504 310.391 l
691.496 307.602 l
705.5 311.801 l
719.504 307.824 l
733.496 309.266 l
747.5 310.66 l
761.504 314.164 l
775.496 312.691 l
789.5 312.266 l
803.504 318.953 l
817.496 316.496 l
831.5 314.336 l
845.504 318.609 l
859.496 312.723 l
873.5 310.047 l
887.504 310.031 l
901.496 313.816 l
915.5 314.734 l
929.504 315.766 l
943.496 314.215 l
957.5 308.906 l
971.504 324.461 l
985.496 313.262 l
999.5 312.672 l
1013.5 315.699 l
1027.5 320.223 l
1041.5 314.262 l
1055.5 316.922 l
1069.5 315.859 l
1083.5 310.164 l
1097.5 308.184 l
1111.5 315.07 l
1125.5 311.043 l
1139.5 316.414 l
1153.5 316.547 l
1167.5 311.109 l
1181.5 313.324 l
1195.5 309.453 l
1209.5 307.324 l
1223.5 311.793 l
1237.5 311.418 l
1251.5 309.535 l
1265.5 311.23 l
1279.5 313.984 l
1293.5 310.863 l
1307.5 307.496 l
1321.5 318.543 l
1335.5 316.293 l
1349.5 310.516 l
1363.5 306.184 l
1377.5 312.004 l
1391.5 301.773 l
1405.5 305.492 l
1419.5 306.094 l
1433.5 301.129 l
1447.5 302.859 l
1461.5 301.262 l
1475.5 306.227 l
1489.5 306.281 l
1503.5 309.324 l
1517.5 300.738 l
1531.5 298.195 l
1545.5 304.031 l
1559.5 304.031 l
1573.5 302.641 l
1587.5 305.508 l
1601.5 303.566 l
1615.5 309.023 l
1629.5 301.945 l
1643.5 304.137 l
1657.5 302.035 l
1671.5 299.703 l
1685.5 306.422 l
1699.5 310.906 l
1713.5 306.535 l
1727.5 304.996 l
1741.5 303.199 l
1755.5 294.52 l
1769.5 297.004 l
1783.5 293.637 l
1797.5 294.504 l
S
/DeviceRGB {} CS
[0.5019 0.302 0.302] SC
131.504 310.285 m
145.496 302.492 l
159.5 308.809 l
173.504 305.004 l
187.496 300.445 l
201.5 300.258 l
215.504 307.809 l
229.496 304.945 l
243.5 310.141 l
257.504 304.488 l
271.496 312.926 l
285.5 308.695 l
299.504 304.719 l
313.496 309.766 l
327.5 314.898 l
341.504 303.926 l
355.496 309.586 l
369.5 301.789 l
383.504 305.598 l
397.496 304.488 l
411.5 299.176 l
425.504 295.051 l
439.496 306.184 l
453.5 310.586 l
467.504 306.129 l
481.496 301.137 l
495.5 306.063 l
509.504 298.434 l
523.496 302.035 l
537.5 299.672 l
551.504 302.336 l
565.496 306.797 l
579.5 301.328 l
593.504 309.191 l
607.496 299.262 l
621.5 304.023 l
635.504 305.809 l
649.496 295.586 l
663.5 299.785 l
677.504 301.555 l
691.496 297.422 l
705.5 297.961 l
719.504 297.152 l
733.496 295.855 l
747.5 302.051 l
761.504 301.367 l
775.496 297.25 l
789.5 295.855 l
803.504 300.949 l
817.496 294.746 l
831.5 304.488 l
845.504 306.887 l
859.496 304.137 l
873.5 306.004 l
887.504 303.398 l
901.496 301.891 l
915.5 309.324 l
929.504 311.793 l
943.496 298.359 l
957.5 299.914 l
971.504 302.824 l
985.496 300.004 l
999.5 297.902 l
1013.5 303.031 l
1027.5 304.637 l
1041.5 309.699 l
1055.5 302.141 l
1069.5 310.039 l
1083.5 309.754 l
1097.5 313.172 l
1111.5 312.145 l
1125.5 303.887 l
1139.5 300.797 l
1153.5 310.539 l
1167.5 311.828 l
1181.5 308.836 l
1195.5 316.059 l
1209.5 311.453 l
1223.5 316.414 l
1237.5 313.426 l
1251.5 315.73 l
1265.5 302.711 l
1279.5 313.742 l
1293.5 312.266 l
1307.5 309.348 l
1321.5 310.789 l
1335.5 314.547 l
1349.5 307.254 l
1363.5 314.941 l
1377.5 312.289 l
1391.5 316.008 l
1405.5 316.906 l
1419.5 321.766 l
1433.5 316.984 l
1447.5 317.809 l
1461.5 325.898 l
1475.5 315.316 l
1489.5 317.371 l
1503.5 322.465 l
1517.5 315.836 l
1531.5 315.844 l
1545.5 313.906 l
1559.5 318.527 l
1573.5 319.609 l
1587.5 319.563 l
1601.5 323.824 l
1615.5 319.691 l
1629.5 316.637 l
1643.5 318.91 l
1657.5 326.641 l
1671.5 321.199 l
1685.5 320.809 l
1699.5 318.484 l
1713.5 318.227 l
1727.5 316.039 l
1741.5 322.219 l
1755.5 308.141 l
1769.5 314.988 l
1783.5 323.012 l
1797.5 323.059 l
S
/DeviceRGB {} CS
[0.7539 0.4509 0.4509] SC
131.504 304.27 m
145.496 304.668 l
159.5 299.738 l
173.504 309.234 l
187.496 309.039 l
201.5 303.586 l
215.504 300.496 l
229.496 298.051 l
243.5 300.863 l
257.504 299.184 l
271.496 304.945 l
285.5 305.816 l
299.504 296.539 l
313.496 311.523 l
327.5 312.961 l
341.504 316.129 l
355.496 318.738 l
369.5 316.809 l
383.504 309.836 l
397.496 312.484 l
411.5 311.441 l
425.504 310.691 l
439.496 311.867 l
453.5 314.156 l
467.504 314.762 l
481.496 312.445 l
495.5 315.633 l
509.504 311.004 l
523.496 321.07 l
537.5 322.637 l
551.504 319.539 l
565.496 319.051 l
579.5 322.977 l
593.504 316.871 l
607.496 316.324 l
621.5 320.266 l
635.504 325.961 l
649.496 317.883 l
663.5 319.406 l
677.504 318.266 l
691.496 322.848 l
705.5 335.629 l
719.504 327.871 l
733.496 324.754 l
747.5 326.926 l
761.504 331.516 l
775.496 327.086 l
789.5 322.512 l
803.504 334.082 l
817.496 332.68 l
831.5 334.406 l
845.504 326.184 l
859.496 327.398 l
873.5 331.195 l
887.504 337.719 l
901.496 340.352 l
915.5 333.813 l
929.504 338.531 l
943.496 334.906 l
957.5 330.648 l
971.504 332.164 l
985.496 335.281 l
999.5 327.039 l
1013.5 338.426 l
1027.5 336.348 l
1041.5 337.375 l
1055.5 343.809 l
1069.5 343.711 l
1083.5 338.762 l
1097.5 340.953 l
1111.5 346.996 l
1125.5 336.324 l
1139.5 334.676 l
1153.5 345.34 l
1167.5 333.152 l
1181.5 336.34 l
1195.5 333.602 l
1209.5 343.324 l
1223.5 336.012 l
1237.5 348.273 l
1251.5 343.922 l
1265.5 337.375 l
1279.5 339.805 l
1293.5 334.141 l
1307.5 337.293 l
1321.5 333.805 l
1335.5 339.152 l
1349.5 335.516 l
1363.5 335.371 l
1377.5 347.934 l
1391.5 346.961 l
1405.5 346.637 l
1419.5 338.172 l
1433.5 336.309 l
1447.5 337.719 l
1461.5 339.961 l
1475.5 344.605 l
1489.5 338.344 l
1503.5 342.137 l
1517.5 344.246 l
1531.5 341.102 l
1545.5 350.891 l
1559.5 339.871 l
1573.5 350.176 l
1587.5 346.137 l
1601.5 343.891 l
1615.5 343.773 l
1629.5 337.441 l
1643.5 345.871 l
1657.5 337.211 l
1671.5 337.691 l
1685.5 340.629 l
1699.5 345.445 l
1713.5 343.637 l
1727.5 352.316 l
1741.5 345.504 l
1755.5 346.449 l
1769.5 345.52 l
1783.5 339.086 l
1797.5 334.984 l
S
/DeviceRGB {} CS
[1 0.5996 0.5996] SC
131.504 310.047 m
145.496 305.449 l
159.5 302.809 l
173.504 304.801 l
187.496 303.977 l
201.5 317.402 l
215.504 310.93 l
229.496 317.828 l
243.5 310.57 l
257.504 308.934 l
271.496 305.461 l
285.5 301.383 l
299.504 306.902 l
313.496 303.398 l
327.5 315.594 l
341.504 302.648 l
355.496 310.074 l
369.5 311.965 l
383.504 307.742 l
397.496 312.012 l
411.5 306.309 l
425.504 309.266 l
439.496 300.527 l
453.5 309.445 l
467.504 296.828 l
481.496 297.992 l
495.5 302.449 l
509.504 296.508 l
523.496 298.129 l
537.5 306.766 l
551.504 300.414 l
565.496 304.887 l
579.5 300.086 l
593.504 294.152 l
607.496 295.172 l
621.5 296.844 l
635.504 295.426 l
649.496 294.484 l
663.5 298.879 l
677.504 294.961 l
691.496 292.953 l
705.5 295.512 l
719.504 299.273 l
733.496 297.633 l
747.5 299.922 l
761.504 297.477 l
775.496 301.719 l
789.5 301.066 l
803.504 293.988 l
817.496 290.898 l
831.5 294.203 l
845.504 289.059 l
859.496 290.402 l
873.5 287.273 l
887.504 288.379 l
901.496 289.727 l
915.5 283.66 l
929.504 289.824 l
943.496 291.512 l
957.5 287.469 l
971.504 291.184 l
985.496 288.535 l
999.5 288.176 l
1013.5 287.516 l
1027.5 294.004 l
1041.5 284.363 l
1055.5 287.957 l
1069.5 287.965 l
1083.5 291.934 l
1097.5 291.391 l
1111.5 284.695 l
1125.5 289.488 l
1139.5 288.484 l
1153.5 299.598 l
1167.5 294.055 l
1181.5 296.395 l
1195.5 290.539 l
1209.5 288.648 l
1223.5 285.176 l
1237.5 282.871 l
1251.5 297.016 l
1265.5 296.574 l
1279.5 292.523 l
1293.5 299.598 l
1307.5 285.078 l
1321.5 283.691 l
1335.5 283.48 l
1349.5 282.551 l
1363.5 286.383 l
1377.5 287.844 l
1391.5 289.375 l
1405.5 283.953 l
1419.5 288.453 l
1433.5 289.383 l
1447.5 284.59 l
1461.5 287.305 l
1475.5 284.313 l
1489.5 283.496 l
1503.5 277.676 l
1517.5 283.578 l
1531.5 286 l
1545.5 283.195 l
1559.5 285.535 l
1573.5 284.125 l
1587.5 287.875 l
1601.5 292.129 l
1615.5 288.055 l
1629.5 291.406 l
1643.5 288.406 l
1657.5 288.551 l
1671.5 284.246 l
1685.5 283.059 l
1699.5 279.078 l
1713.5 284.891 l
1727.5 285.211 l
1741.5 282.863 l
1755.5 293.027 l
1769.5 286.441 l
1783.5 297.219 l
1797.5 286.449 l
S
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font TDTJHF+Helvetica
%%EOF
