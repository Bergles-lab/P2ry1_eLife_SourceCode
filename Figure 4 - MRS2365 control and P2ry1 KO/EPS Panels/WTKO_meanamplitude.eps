%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.60.1 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.5.0.944444 \\(R2018b\\). Operating System: Windows 10)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 128 107
%%HiResBoundingBox: 0 0 128 107
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font GZPNLR+Helvetica
%!FontType1-1.0: GZPNLR+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /GZPNLR+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 929 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 54 /six put
dup 65 /A put
dup 75 /K put
dup 77 /M put
dup 79 /O put
dup 80 /P put
dup 87 /W put
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 112 /p put
dup 114 /r put
dup 116 /t put
dup 117 /u put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB9660E97140986C460AAFC0F27F41C0F31EA98BAC1D6EC92F1EA1F495
8778B4E03D6924C79C969F94D95DEC2827E55458D207FFC332A04067538FE2E9
6250617DE832E7033C5032F71638CF38F9376DD36CC781EF54DCA3376B8920EF
7A905FA9A8824D8A1243079C234350DA17A18AD3076F810A43753DC0D64413C3
0AD920D2D3EA73F3A6D583059FB68469DB9CB90A7753846BA5AD9D706C3D885A
2C879028E09E4BB770609866B09F889E28C0B5BFC6E07A7043CFDF1A55DBFAC5
A36BBDE481CC9D8098FF973C107E3762864DE299964DE1FA39F193F4DA8B6A3D
96F6583A258366401EDDD663660CA1427C590CCFD1A38AF60E55CFF209CC85A1
41BE1389B8B76E95663BFFA917375888E4BBD19C5F35BB02706147A97F18F263
B9CECAA0E89A4D20FE60B7152F133F336312DA31B18400F997EFFD854F8CE901
EB508758CD453FDCE07ECC2CC5E28C11E6458EEA064EABB2F435A33B88C11734
556FE565A75E277D599C9D9F310D716352EAA61D212FEF8CB404B9BC53AF0F3B
35A5E14C554FB545C850C8D2B95142A206E0CDB151E1E55CC9D96215B377388D
A601340F5438B8F8CB1A0E61B31B9A41686A17ACCD8BADAF28E6B22E0082045B
04FFA5B0299855514DD7D9806E3866BA607B0E20CB76227A55F513D1BE08A4A7
2CFC411649CFCD1AB892A324AA91E26DAD25E102B5858D68A1CE4A3CCE802AF6
AC52D6C752105923A6876BD18E0B6925959E2523538C852BC423C52B65C9B87B
2B374BBF4E20C41B881813BCAE549922BAB695940C2C6B45680BCB6FF8CCBF8B
5489124CF5EAFF17F3B600445897ED3186E22D560171BFA16E472161DD2BD9EC
7B00CF77F3BBC7BA5F1F9538F80E602752D3455577275B345788C6417EB8E6D4
4BC2AE2138EE3F6B8E69BFF66AA0F04C53DC2544183DE8AFABF6CCCC85203DFF
4B36015484240DB60BB7389B3A887788C5AEF9A5E5B906FF9B0586BD152CDC57
8726C397FD6E4712AE2E2FCBC23BD7F816D41BDC4B9E59E0279B74912C68B624
ACF9CE842DC7C550F9CBC497F8ECFC237521C4106B39BB021205852F25FEB4A5
C50906D88D085FAA2FBD6447516ACBBBA6733A535DCCD93AAAE871633EF23A09
80036DCFB23A10578765805DE46060AB826A802B905E3F004C1BE1998F5DDEF5
8A9536B2D671123CBF94D0AE785C7E3F55024DF162421E9E206708FBAB0E6746
FE2A6F5D3160F28010F3B65F64224D3E309D7993903F03870242FB9D47780F78
6FFD1DFE18F51C7F45841F0420BD2F11FA4235A1CF06566BBDB383EF35FD086B
57754A13C08D2298EFF17B2E9F114B7C7B8B5A0B5A2C1C62736FD746DC6EA2F2
B1B2BDA842C5418FB8373A53538BA4A168CBB900D62A1EA212EF5DEA243B2A51
FDE029E8CEEF24DC0657CCD4E8CAAB08DB8EC64414E7EB55B4A7ECCBE5415813
14A6E5F326BA4D900DD02D65C6F561AA0A16CA4A2F4AB30A51FE28CD0C4C53A6
93ACB9AF778677FB34FF472903CAAE8DE09F62642BF6F43C5F4C3F6BE66ED546
AECCBBE790A63251B9209E8C1979642332FBEADDB41D30C1C511DD7A2D9AB860
A03A47C9080C928E64DE4F34C23FE95D5A0A45DB7824CFC3148D012B35727225
6C17E8DDB9876AF741A8ABCD62FC8EBA3C1E4082AB1A8E402D37E9ECCE9F7673
E4BF2675A3E357EFB56B842B4EA66EAA3350C43F17BC74EFCB6EC567EA37D134
DA4F32D1B01FDB527FA789F071976D8A46651917CEB131B3F314F49EC7F33046
52C4AD32C3E2A93AF5C33E1E11A552708C4BA41E4093EB9EC19179A08E39F3E0
706FB4F0D5F76D3EF012E67409627668F754D0377C3F71780EE3305FE370CE17
E2ED21C20F00BDD62B2E16AB5A60EE906FD176B45CE7F4B109FBD23ABACB435C
3E1639FF4305F3963B105AA7C39C64AC48523AD18CA90DE2292208C94DB8C51F
8CE8A8DD6B2D80E7E36364EAAAAA0BE6335CD135A772C55C64FC9127CB828632
671319CDE295E612BFB9D65388C7E8F92B75FED3126847622F20D2B99394C778
745855AC6023A00704FCF1903E9F548DB3B94400673EEA8391DE642C87640399
7607741C4967C9003268A815DA2AC2652A30C4045D3BD8042C507A593FF0F7B7
5AEE0181917A07C0E5B31902A3F3CDAE291DD3C917B4E6717315DDED106E1D7A
F72345D8AB44E22F2545A3DE3A404BA6B11F753C89DF12AB5EB1BCDA250AA1AE
6B18A3A7CC515D57DF628D910E043AEBC8B3021D19F4DD7064F379C5088EF24B
54254CFBD2F82EA2995D9F7CA2CDAA93C07E2DC6B8D73269E76C510E23ECE6FD
CBA02CD83C1771E6D5502669518AC3A2E7450D3DE5B9ECF77AEF085A83DCFBF2
70BFA71DC50AF9DCE42ED48362BB2B3A1A9DD0C9E6ACBE54A2B638623A654CE8
D9F8CD5F748AEAB4CC0D2E0C0EBEAC6A40CAE8F8383D634859E37B8E0888AF26
B7C488C7D826B926D9D953864E7804B54BFBE25E5F17A52B9CF6D88AA6E41BBC
A910D10F46AB94830944601B1DDDD18B6F3F5EDEA90FA4F5A779F5E91FE49BD5
32D61983F8C68DA451F65D79AC2A79FE2F9CA7992F4A63DDFE93C8B8DB0D4681
7FA4DFCC66277E5072DB8B2BC3CFE2932BE56FD18E171F04BFA3A86D0B02E64E
CD53E081FB30411E163A4EB9BEA8794D289CAE55D696837BEF709AB74BA8EC45
5CA03624D86877F87B92AE4A14A5DD9C3E3EE6FF19566A7CD779B2FF35E31F69
156C001005E8C4F911FA9FA2193A92393D42014C939BB305E3D51007CBE468D9
0B541B688B401500B66CF63417E714A3849550A15EE3EB7C0D63FC14FD286541
73DDFC9F146DA11B77A74774DD0D38B883E2A79348F7C3057DCFE6EA361A68E6
BA315F9C4EAF0DF02375B4378BFDBFC8C7FB22344963D0A24823608939AF7CB5
F3A789235ABC8A8B9D21DA9333EAF4B3045BE9D1A92B6009D3E213A6A65915DB
7C6B6DE655BBD2C555C6309749C0682B1C57C376E9364E7E055B6F79C028CCF0
B5EC2F72F4DA71A370DEC90FD6F231EB59259AD7044EE9BA5FE3E2E62FAE1B9E
69E846C88928EE9372C99EF859EC7D874316D02F555D660CB389A567A66EC654
34595D2EDE9965D2374215CE696CA910D6F9F7C6F3A266DFE1A0D1ADB1B2B0C7
3B4849C56172E3EC2B85DDD34164AB950EE556313572BEF3679787554F601CE1
3BED282F8C7C0525B4A71F9FA07387EFC7DE4EEBF8FEB0FC4F74724DFE7C52C0
5E4660A5BADC09B205C17AED3BCFB61C2CEF35D178AE382882CA2E05BB717C79
3998182E02AD092E4879BDE326D03AA6CA22CA7E06EC41697632EE87D24E6DE0
DFDDA3235975EF3C3D6D400249C97F33A245730CED59C208156789BB8664C22D
08ABE7136D2FAB27A425781CE71D33AFADC09381906CFECF0CBDDA83A0440E46
A10CD6E3348E0B02EED19D154F6F6D4469E1AC212C1B17DB9454296022A32FD5
B7258F41A80C770AAA7AE01A413A693D2A24EC67F4A120B2D4CAE01179A428F6
0EF38EA41826EE9752C2E343B2B649C35C6DD0C9E48C092C73A9900DB51084D9
ABCD67532E90B05550E80F7215C44AD7F352E055C6BC9CD579A1A2A1B6D8F7EE
99A2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /GZPNLR+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 128 107 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
-60 10 1440 1080 re
f
-60 10 1440 1080 re
f
172.5 310 435 697.5 re
f
7.5 w
2 J
1 j
/DeviceGray {} CS
[0] SC
172.5 310 m
607.5 310 l
S
303 310 m
303 303.023 l
S
477 310 m
477 303.023 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0.707107 0.707107 -0.707107 0.707107 15.9813 5.0375] Tm
0 0 Td
/F8_0 6.99975 Tf
(Wildtype)
[6.607764
0
1.553945
0
1.553945
0
3.891861
0
1.945931
0
3.499875
0
3.891861
0
3.891861
0] Tj
8.55351 -12.3034 Td
(P2ry1 KO)
[4.668833
0
3.891861
0
2.330917
0
3.499875
0
3.891861
0
1.945931
0
4.668833
0
5.445806
0] Tj
Q
172.5 310 m
172.5 1007.5 l
S
172.5 310 m
165.523 310 l
S
172.5 542.5 m
165.523 542.5 l
S
172.5 775 m
165.523 775 l
S
172.5 1007.5 m
165.523 1007.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 10.6523 28.375] Tm
0 0 Td
/F8_0 6.99975 Tf
(0)
[3.891861
0] Tj
0 23.25 Td
(2)
[3.891861
0] Tj
0 46.5 Td
(4)
[3.891861
0] Tj
0 69.75 Td
(6)
[3.891861
0] Tj
[0 1 -1 0 7.40234 27.25] Tm
0 0 Td
/F8_0 8.00025 Tf
(Mean amplitude \(-nA\))
[6.664208
0
4.448139
0
4.448139
0
4.448139
0
2.22407
0
4.448139
0
6.664208
0
4.448139
0
1.776055
0
1.776055
0
2.22407
0
4.448139
0
4.448139
0
4.448139
0
2.22407
0
2.664083
0
2.664083
0
4.448139
0
5.336167
0
2.664083
0] Tj
Q
/DeviceGray {} cs
[0.7012] sc
318.809 469.125 m
318.809 477.852 311.73 484.934 303 484.934 c
294.27 484.934 287.191 477.852 287.191 469.125 c
287.191 460.395 294.27 453.313 303 453.313 c
311.73 453.313 318.809 460.395 318.809 469.125 c
f
318.809 690.316 m
318.809 699.047 311.73 706.125 303 706.125 c
294.27 706.125 287.191 699.047 287.191 690.316 c
287.191 681.586 294.27 674.504 303 674.504 c
311.73 674.504 318.809 681.586 318.809 690.316 c
f
318.809 410.82 m
318.809 419.551 311.73 426.633 303 426.633 c
294.27 426.633 287.191 419.551 287.191 410.82 c
287.191 402.09 294.27 395.012 303 395.012 c
311.73 395.012 318.809 402.09 318.809 410.82 c
f
318.809 505.254 m
318.809 513.984 311.73 521.063 303 521.063 c
294.27 521.063 287.191 513.984 287.191 505.254 c
287.191 496.523 294.27 489.441 303 489.441 c
311.73 489.441 318.809 496.523 318.809 505.254 c
f
318.809 957.359 m
318.809 966.09 311.73 973.168 303 973.168 c
294.27 973.168 287.191 966.09 287.191 957.359 c
287.191 948.629 294.27 941.551 303 941.551 c
311.73 941.551 318.809 948.629 318.809 957.359 c
f
318.809 749.891 m
318.809 758.621 311.73 765.703 303 765.703 c
294.27 765.703 287.191 758.621 287.191 749.891 c
287.191 741.164 294.27 734.082 303 734.082 c
311.73 734.082 318.809 741.164 318.809 749.891 c
f
318.809 449.668 m
318.809 458.395 311.73 465.477 303 465.477 c
294.27 465.477 287.191 458.395 287.191 449.668 c
287.191 440.938 294.27 433.855 303 433.855 c
311.73 433.855 318.809 440.938 318.809 449.668 c
f
318.809 403.844 m
318.809 412.574 311.73 419.656 303 419.656 c
294.27 419.656 287.191 412.574 287.191 403.844 c
287.191 395.117 294.27 388.035 303 388.035 c
311.73 388.035 318.809 395.117 318.809 403.844 c
f
492.809 320.23 m
492.809 328.961 485.73 336.043 477 336.043 c
468.27 336.043 461.191 328.961 461.191 320.23 c
461.191 311.5 468.27 304.422 477 304.422 c
485.73 304.422 492.809 311.5 492.809 320.23 c
f
492.809 324.848 m
492.809 333.578 485.73 340.656 477 340.656 c
468.27 340.656 461.191 333.578 461.191 324.848 c
461.191 316.117 468.27 309.035 477 309.035 c
485.73 309.035 492.809 316.117 492.809 324.848 c
f
492.809 311.566 m
492.809 320.293 485.73 327.375 477 327.375 c
468.27 327.375 461.191 320.293 461.191 311.566 c
461.191 302.836 468.27 295.754 477 295.754 c
485.73 295.754 492.809 302.836 492.809 311.566 c
f
492.809 312.887 m
492.809 321.617 485.73 328.699 477 328.699 c
468.27 328.699 461.191 321.617 461.191 312.887 c
461.191 304.156 468.27 297.078 477 297.078 c
485.73 297.078 492.809 304.156 492.809 312.887 c
f
492.809 318.195 m
492.809 326.926 485.73 334.004 477 334.004 c
468.27 334.004 461.191 326.926 461.191 318.195 c
461.191 309.465 468.27 302.387 477 302.387 c
485.73 302.387 492.809 309.465 492.809 318.195 c
f
492.809 324.066 m
492.809 332.797 485.73 339.875 477 339.875 c
468.27 339.875 461.191 332.797 461.191 324.066 c
461.191 315.336 468.27 308.254 477 308.254 c
485.73 308.254 492.809 315.336 492.809 324.066 c
f
492.809 333.781 m
492.809 342.512 485.73 349.59 477 349.59 c
468.27 349.59 461.191 342.512 461.191 333.781 c
461.191 325.051 468.27 317.973 477 317.973 c
485.73 317.973 492.809 325.051 492.809 333.781 c
f
9.9975 w
0 J
303 579.535 m
303 509.078 l
S
303 579.535 m
303 649.984 l
S
/DeviceGray {} cs
[0] sc
327.996 579.535 m
327.996 565.727 316.809 554.535 303 554.535 c
289.191 554.535 278.004 565.727 278.004 579.535 c
278.004 593.344 289.191 604.531 303 604.531 c
316.809 604.531 327.996 593.344 327.996 579.535 c
f
/DeviceRGB {} CS
[1 0 0] SC
477 320.793 m
477 317.906 l
S
477 320.793 m
477 323.688 l
S
/DeviceRGB {} cs
[1 0 0] sc
501.996 320.797 m
501.996 306.988 490.809 295.797 477 295.797 c
463.191 295.797 452.004 306.988 452.004 320.797 c
452.004 334.602 463.191 345.793 477 345.793 c
490.809 345.793 501.996 334.602 501.996 320.797 c
f
/DeviceGray {} cs
[1] sc
810 310 435 697.5 re
f
7.5 w
2 J
/DeviceGray {} CS
[0] SC
810 310 m
1245 310 l
S
940.5 310 m
940.5 303.023 l
S
1114.5 310 m
1114.5 303.023 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0.707107 0.707107 -0.707107 0.707107 79.7313 5.0375] Tm
0 0 Td
/F8_0 6.99975 Tf
(Wildtype)
[6.607764
0
1.553945
0
1.553945
0
3.891861
0
1.945931
0
3.499875
0
3.891861
0
3.891861
0] Tj
8.55351 -12.3034 Td
(P2ry1 KO)
[4.668833
0
3.891861
0
2.330917
0
3.499875
0
3.891861
0
1.945931
0
4.668833
0
5.445806
0] Tj
Q
810 310 m
810 1007.5 l
S
810 310 m
803.023 310 l
S
810 542.5 m
803.023 542.5 l
S
810 775 m
803.023 775 l
S
810 1007.5 m
803.023 1007.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 74.4023 28.375] Tm
0 0 Td
/F8_0 6.99975 Tf
(0)
[3.891861
0] Tj
0 23.25 Td
(2)
[3.891861
0] Tj
0 46.5 Td
(4)
[3.891861
0] Tj
0 69.75 Td
(6)
[3.891861
0] Tj
[0 1 -1 0 71.1523 27.25] Tm
0 0 Td
/F8_0 8.00025 Tf
(Mean amplitude \(-nA\))
[6.664208
0
4.448139
0
4.448139
0
4.448139
0
2.22407
0
4.448139
0
6.664208
0
4.448139
0
1.776055
0
1.776055
0
2.22407
0
4.448139
0
4.448139
0
4.448139
0
2.22407
0
2.664083
0
2.664083
0
4.448139
0
5.336167
0
2.664083
0] Tj
Q
/DeviceGray {} cs
[0.7012] sc
956.309 469.125 m
956.309 477.852 949.23 484.934 940.5 484.934 c
931.77 484.934 924.691 477.852 924.691 469.125 c
924.691 460.395 931.77 453.313 940.5 453.313 c
949.23 453.313 956.309 460.395 956.309 469.125 c
f
956.309 690.316 m
956.309 699.047 949.23 706.125 940.5 706.125 c
931.77 706.125 924.691 699.047 924.691 690.316 c
924.691 681.586 931.77 674.504 940.5 674.504 c
949.23 674.504 956.309 681.586 956.309 690.316 c
f
956.309 410.82 m
956.309 419.551 949.23 426.633 940.5 426.633 c
931.77 426.633 924.691 419.551 924.691 410.82 c
924.691 402.09 931.77 395.012 940.5 395.012 c
949.23 395.012 956.309 402.09 956.309 410.82 c
f
956.309 505.254 m
956.309 513.984 949.23 521.063 940.5 521.063 c
931.77 521.063 924.691 513.984 924.691 505.254 c
924.691 496.523 931.77 489.441 940.5 489.441 c
949.23 489.441 956.309 496.523 956.309 505.254 c
f
956.309 957.359 m
956.309 966.09 949.23 973.168 940.5 973.168 c
931.77 973.168 924.691 966.09 924.691 957.359 c
924.691 948.629 931.77 941.551 940.5 941.551 c
949.23 941.551 956.309 948.629 956.309 957.359 c
f
956.309 749.891 m
956.309 758.621 949.23 765.703 940.5 765.703 c
931.77 765.703 924.691 758.621 924.691 749.891 c
924.691 741.164 931.77 734.082 940.5 734.082 c
949.23 734.082 956.309 741.164 956.309 749.891 c
f
956.309 449.668 m
956.309 458.395 949.23 465.477 940.5 465.477 c
931.77 465.477 924.691 458.395 924.691 449.668 c
924.691 440.938 931.77 433.855 940.5 433.855 c
949.23 433.855 956.309 440.938 956.309 449.668 c
f
956.309 403.844 m
956.309 412.574 949.23 419.656 940.5 419.656 c
931.77 419.656 924.691 412.574 924.691 403.844 c
924.691 395.117 931.77 388.035 940.5 388.035 c
949.23 388.035 956.309 395.117 956.309 403.844 c
f
1130.31 320.23 m
1130.31 328.961 1123.23 336.043 1114.5 336.043 c
1105.77 336.043 1098.69 328.961 1098.69 320.23 c
1098.69 311.5 1105.77 304.422 1114.5 304.422 c
1123.23 304.422 1130.31 311.5 1130.31 320.23 c
f
1130.31 324.848 m
1130.31 333.578 1123.23 340.656 1114.5 340.656 c
1105.77 340.656 1098.69 333.578 1098.69 324.848 c
1098.69 316.117 1105.77 309.035 1114.5 309.035 c
1123.23 309.035 1130.31 316.117 1130.31 324.848 c
f
1130.31 311.566 m
1130.31 320.293 1123.23 327.375 1114.5 327.375 c
1105.77 327.375 1098.69 320.293 1098.69 311.566 c
1098.69 302.836 1105.77 295.754 1114.5 295.754 c
1123.23 295.754 1130.31 302.836 1130.31 311.566 c
f
1130.31 312.887 m
1130.31 321.617 1123.23 328.699 1114.5 328.699 c
1105.77 328.699 1098.69 321.617 1098.69 312.887 c
1098.69 304.156 1105.77 297.078 1114.5 297.078 c
1123.23 297.078 1130.31 304.156 1130.31 312.887 c
f
1130.31 318.195 m
1130.31 326.926 1123.23 334.004 1114.5 334.004 c
1105.77 334.004 1098.69 326.926 1098.69 318.195 c
1098.69 309.465 1105.77 302.387 1114.5 302.387 c
1123.23 302.387 1130.31 309.465 1130.31 318.195 c
f
1130.31 324.066 m
1130.31 332.797 1123.23 339.875 1114.5 339.875 c
1105.77 339.875 1098.69 332.797 1098.69 324.066 c
1098.69 315.336 1105.77 308.254 1114.5 308.254 c
1123.23 308.254 1130.31 315.336 1130.31 324.066 c
f
1130.31 333.781 m
1130.31 342.512 1123.23 349.59 1114.5 349.59 c
1105.77 349.59 1098.69 342.512 1098.69 333.781 c
1098.69 325.051 1105.77 317.973 1114.5 317.973 c
1123.23 317.973 1130.31 325.051 1130.31 333.781 c
f
9.9975 w
0 J
940.5 579.535 m
940.5 509.078 l
S
940.5 579.535 m
940.5 649.984 l
S
/DeviceGray {} cs
[0] sc
965.496 579.535 m
965.496 565.727 954.309 554.535 940.5 554.535 c
926.691 554.535 915.504 565.727 915.504 579.535 c
915.504 593.344 926.691 604.531 940.5 604.531 c
954.309 604.531 965.496 593.344 965.496 579.535 c
f
/DeviceRGB {} CS
[1 0 0] SC
1114.5 320.793 m
1114.5 317.906 l
S
1114.5 320.793 m
1114.5 323.688 l
S
/DeviceRGB {} cs
[1 0 0] sc
1139.5 320.797 m
1139.5 306.988 1128.31 295.797 1114.5 295.797 c
1100.69 295.797 1089.5 306.988 1089.5 320.797 c
1089.5 334.602 1100.69 345.793 1114.5 345.793 c
1128.31 345.793 1139.5 334.602 1139.5 320.797 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font GZPNLR+Helvetica
%%EOF
