%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.60.1 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.4.0.813654 \\(R2018a\\). Operating System: Windows 7)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 87 102
%%HiResBoundingBox: 0 0 87 102
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font QNPLDS+Helvetica
%!FontType1-1.0: QNPLDS+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /QNPLDS+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 762 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 55 /seven put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 77 /M put
dup 79 /O put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB9710C1B4FCF03523AA26E8126E5855856BF5CB4D72E0D9C91BD43AAC
0AB1C52807E42E1C6559D91AF84BABF65C2BA7D3BC120A4A4A3568E6CCA9CB62
0D560F7055A33FAF6DB63C33BB8F9BF692D8F66566384D96949AF8B17CAF4BA1
383B49B97680BFC349079B6A8A637A21A0EF417BB64A6BBDF5E1900AD5102EC3
4D9B7352E1C1D2A70364064062796359FB28C9A790BB61A00B9F68595EEC71F7
CB93A032F50CA2FFFF623FE27E76FECD977F5D657EF0D7CEC5F5D72074877CA5
9088DC94FEA690DA7DCA8FC4CB6E4D94975EBA8D5DEEC505FC38C2CB22DD251F
A7C32C0C89E1744738A328AD135868BD4D81C688ED33752D25EB5492DA0FD2AC
9DA060AFB094A8917AE9791D113F672541DA354AFB2B7058A43341D32C744C27
0FF7DF1A229FBDAF887DD2E2C8E33E604471045A5BC1E0898AFB8FFC5DF6D4EF
C2E09EC9EB0F5A118DDE64EEADE3DDC4FBC6F484E9C08A365B6B61F9484C6315
997582D9DA1DB86262A6EED8636C5B6140C16444D6402CC236DA83CD061EC01A
95661331B59333D453624E0DFE660B751A13D2251A4532F27C84D845EDBF3DC4
B3746D43E54CE5EC905C962C77CBCF7E390CE12CD8D7E1D072A2A9513066638C
95FFAEEA8D66A16E543AFC56FF0A13DA8F9A20F99493F9F8E812F4D0FE36B1D0
8C8C516FE4822CE2B2E91204DC654B444978E9316C3A0475D7F2C1D86A846F75
901CC6EC4E104B4DE7D4EC8D12D08D687125FE0D9B6F1FC46C4758F7F8522F6F
951080FDE7DC58BD003525448B6147A255C08D0263B0659DDE4F3E9BA8A1EBED
F31C6CB7E9842347CA19BB44AB6674180EFB07F42315764B288966F0EE712F0B
483F6F085F85B45D60DC10B946CABC14A3BE6F2F44E54EA170FFFFAA0CAF1095
CBDF2CBBE594DD8907204578484281AE76301677B03D7B3819E9426EFE5C0633
8CD7A3DD95D41640770350A2C8E5A96C70DCC76BD29F09E3549F7666E5383FE4
D8FD831BD008E0A166B7EE6904497B79538532599F1B38924EB03A696C4A871D
D743976ED9D353D3D7E82D330EEFE13AB0A6117936456C0FC698BF1970616690
DF64935DE6D0C624A033237A0CA1B31877B64356AEDCA77B0DF65B7C6AF944FD
539E487D5DD79A8F8B56E7DE5228C9B007627B2B9543A585732B587077BC3985
F08B42372AE6D3AB0CACDE01E88F155A43522B77CEB0B7B57EF0FC40A9EB7867
D6D8A2D714A969EE5EADCE716418D81358AC717AFD0977F4F39FE9EE88AC1C78
A6EA9518AD592CD4A56DA2C09912E9FA296ABEB317C9659DBD3B11E0C7DCE401
D487F402F7791C4C78485103E090BD31E31AFF787493DD611F75E9F5E5961CD6
6AD78B8C98F6A0015F27EE2279D1CF6E9C37F6D914F7BE2DD21DEB291C2BD8BB
9576B6A84788A6B70E0DA1EA8F7E567CCB95859743EEFC7E96AF6FEA1CD88324
40D06B1DC42B08EAD7E33CF3B1102FEF098B2FF3DFDDF04417F7AF8E15A9779D
B58433A496B7B4BA205B1138F024B3DE27579D995BFFEA1D513E5F4D2A9831E2
9ADB444608047BD34988A6FFC83B5C32B62C19D3EF7A77332B29B6F7ABF741C1
4A83981855203511CA876646F9D563710CA9D5AD09B423424C2E723AA097383C
1B9220AC4ACE35F314D7962924B81EBF34B6144F00AF2FC1E596F659F0F260CF
85160E86EE5CED39DC1DF5519677CEB7877C47A1278AA5C5A03E5F2499688392
D61DFDD4B77EC5FD9C19006D85504ADD4C513A20CF2CC116A96E8986AB9DF1D3
A312DBE610D4BD5FBC42B289AC8B1BABAA9FE7142CBD88DBFD7472A25AA9A0AA
118F2E42E16E1E2AB5225BE5707D08846DBBF885A8A598639D625D9B23951763
6A4134274E14BD56B46449BBEC329C5CF814BB78F101DBD3C9403F6EEABFF849
90A604A1A7F8EC229A638B7CE6B9552CD9D12F447D2D7887B3280633CA9579E9
8EE189BD7AD29CFB00668E707390B1D0229F7DD1ECDF4DCFB4AB7970105CF241
5455C7D16057DF0E9F1FB0BE42B16D080EE5E9225F0CA781266ED07EF9E551A9
FDA1771A18B3D7F9DF687D0BA861678B5E90D31A0AF697C37DC020C15C6A857B
137FB272C2413593BB8A801BFD7C8B621743CEB73EF6717375F43BBB64593465
6FE8F296919FD9E52FDC631B1002D4A3A16E98423E78CAB67FDEA3A53FB2A965
877FAEA88D50F60F30CE7063B570F557479DD6081E8A36155F665D5A1CEB08DB
ED6C0A16E273059AF5402888A677D9F6D994542433A650062C43A33FD8C125BF
465F9F97B53E08A0539967334D5F19B1E86A7804493995F46082A0CD5A13E631
0562ED84E6BB2A54F516004ACDC90575349B6F59FCC6FB05B72CD7D29324911F
D79B466D7914012BBE64ED34E97247A9B8E810180C5C12ABD7340DC08D1545C2
6BC68AB916381A96BEA5AEF356AA1B06B5A001A6AF40302F5D7F8E97E82AF948
769EA43709695A1803E6448B23C503E5D2F7BE1ADF66CB36E5857EBE05EB4D56
58916A9197B6B20AAA0F6B2CA3011B10BB34EE1481F4AD357760C3D04DD889E6
A59C3731D0A36F50DAA186947050554EB7F2ED7F61DD6048DC52E44C01B21288
D196CABF1225B5FE6C9AEF607A1297A6CEB9012404670BE6EA275EF0CA0B694D
E834350B2144C4215CAE4C82C09E5C6CC18C52631BAFE6B1E5D20FF7C0757038
858BE7A87386C7099CFAE3F4B8FEAF26D4E730C213703BC58403E78A20035E36
590D33474BFAA57FEE9BA7A62A4073ED14FE9E1C7855DFDD938ADA3FC54F6318
9348609D871D97BCE023EB9E7134C83B12D5A82D585408543154BDDF605135E8
D966C009F90B3F1AA843B3EAA882D8253391D87E091746559F1DCADFC8C81B25
E3368D729BB495E4AD6C12C85C22352B884669AE450E332758CFE2E274EB5347
F12E3F01BCA8CD984E55683D43B09E1B587058C26A0C63F1F23CD1E8055BC4B2
F686E43B1F2955ECD2167A6BE1591D09521DF7A659B520C61BE147547D9354F4
5855A89795F665E7BA3CEC634EB26C43FE58BD5108CD95A159B44785AD8BF7FF
0E0919B73E5A860AAAB4669FF6393E78F3301338EADE71A251E0AD950E7AB900
54CBF66FF92516B3836EEA640DFD884ECB4CA4CD47CE632198929A9DA43C98B2
5ACAA32637B7F4B71912B90AF085C76D01CBFE36CF3EE2B9FD8E737E03A4DC99
B25A2D76E4156B5F619BF92849EFA9C8161BBBA01BC7459260A6C75EF03F4EF0
7BF4D6978D279964A7AB4E7FE98235B3AE012DADB29C4EE55CC703E3B4408A8F
8251EB8D9DEA3C44FB42B02D0ECA69F5894BC14905C41C1E93FB5801FE7FD9EA
725355D57E611363CD776A1398E5B8DB72805488E8F1566A74BFC77B07E0F269
29EC269A1A8C834C21302E0F7C1499854CB9EDCBA5B7B7B93714EB1F7EDCED53
2F888355C7CAC4C397D6987DAB0DA2C2188E9F3CC681CFFF66E8194C897EE3FF
4C1029171DFD494ED060D7703A5EA43885CE6753AFBA24079F7539FF978C1042
303F29606A857819F8FD61F636D652966D799C709E623950A15A47B7369FCFF4
1BFFD60C610CD507C093BAE5739504B08A953964FC6F83734B6BC8040A55DF44
70BD709A63029BED6D804FCDF31E743F93D3B05E791B36726AD4521BDE565136
C999C08E764EE849E0F5B1CB16F50D7187D69FE364F7A7D5041D20AADD78824C
6A8915B9D67363DE8B2B1D7946201212E06B9EB6CA2AF2E9ABA7B22AB7456BCC
66F5A1E46248E78AFC69134CDE1033BA40E1E12A86F2BF70C903F1791BF702E6
40C404D2361793A52D47E96B977E24388FF22FFDB7A7B9D628362C1EFF02A491
68C7C44C5223F80E4B08551A87B3148DD7F372E0FB878E142F1015348E5CEB79
98989F0F7720EFF7241A4A5DA9D8687C926A38F2E156EADBF8046A7EE83A2361
1184407DA398D49C2A75BC89A0C4ED6235A174129E320A62899270045234DF96
1607CB8B07AEFD8597F9895BC6BA1395B835C16D7E28D8C43F2FBB3C718A07D2
985599BE36C1D40150FFDBB3313D4624F89489E2B6DD73BDB26BEF91DCD3D476
FC43448C3CDC8C083A8A77FBA43A996445AEB670E927D4CF44CC360E22FD55C4
74EAA95F886E06A381A3B06B1DF007F52781F5A3B004E82FF6A8096C8F60A269
C38946CD0EF250D5F81010B3009A963423D575DF069D7703391B46E2AFB8C364
67A306CE5FA226150A3D34032F8798AF0FB4A3CF26ED4345B405813AC7DACAE1
10FD00B9658D37DC6119747D06E250376E1F4F95C68C6D979923D142BA68E15B
7DCAC618D97FCE7C007F832E8121D42659B176C1F72DD030F8D24DFFC3B0D211
55147154C36A2FA01DB77E301B3393E95DAAC0A50A4D59B4A6FC5F9980613976
B5329798E20F202CDE4CD8C458889D60B4F5048FB2AEB756DD7D075769DB525C
9D58D4DDDE002E74F3142BE82BCE0CAD4E1FA02DA87E11191CFEF6428BDEA0F0
07E3FF421935733AE54C2DD4E49D11E4470A5E304C8D7DB0BF543BDEF2428638
269ADD4B746310CC5390F51998FEEED108C15E0D53EFCD4E8C49E9DD94A2A815
091D1032A8712C5E01ACDC563F6A850432D845DA7597509144ADBAC8C64F1259
768E24D43630716ED9429E452D0FAEA002F27C2CEEB62EDBC97E9A7C2F70FEBC
B4542C9DB9F677218872C0A5E2E03E8214E6B65CDEDFBC4D06C2029E06D8966A
7B6940A9AC5B452850E61FF1F3EC1D7B743E5FC96589F1814140C2D3B7550081
9BF00AB8A6B37E663D791641E56D50C94861ED08CD428F73549BAE0AECFA3F7C
067AFE26B4DC29DA75EA87D631A053423EB09A27B04486D84CD2FF938A2AFE33
40FAF4F557893366701360FF74A7668064C87957D885A30FD683576207EBED41
25C3838E54E62272A00FE5AFC08AA44A395E0AF5A6E75B07A28D97144E36618B
88009E69BA8407B51CC1A7E8B79B0639736D2A3D0BA8AEC39E4F11775813444F
A7456394AC06907240F24E0362A2FD63B1190738507CD02225D556371677DBAC
5D24AB54B8F8C83F63AA1525049AB4309C5E6878A0DDC4B19B9AD0B61C8D51B1
2A4DACA8DD5751844AA3B0FD6DA54176DBB559E3E76E7735F9DE74878E9D3A56
3933743D767121FB356761426F5303D224E8DC9AED55DBD1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /QNPLDS+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 87 102 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
-10 10 870 1005 re
f
-10 10 870 1005 re
f
290 130 495 840 re
f
7.5 w
2 J
1 j
/DeviceGray {} CS
[0.1489] SC
290 130 m
785 130 l
S
357.5 130 m
357.5 121.602 l
S
447.5 130 m
447.5 121.602 l
S
537.5 130 m
537.5 121.602 l
S
627.5 130 m
627.5 121.602 l
S
717.5 130 m
717.5 121.602 l
S
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 12.875 4.01016] Tm
0 0 Td
/F8_0 6.99975 Tf
(DMSO Control)
[5.05382
0
5.830792
0
4.668833
0
5.445806
0
1.945931
0
5.05382
0
3.891861
0
3.891861
0
1.945931
0
2.330917
0
3.891861
0
1.553945
0] Tj
13.875 0 Td
(BAPTA-AM)
[4.668833
0
4.668833
0
4.668833
0
4.276847
0
4.668833
0
2.330917
0
4.668833
0
5.830792
0] Tj
20.625 0 Td
(Thapsigargin)
[4.276847
0
3.891861
0
3.891861
0
3.891861
0
3.499875
0
1.553945
0
3.891861
0
3.891861
0
2.330917
0
3.891861
0
1.553945
0
3.891861
0] Tj
37.5 0 Td
(U73122)
[5.05382
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0] Tj
2216.24 TJm
(U73343)
[5.05382
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0] Tj
Q
290 130 m
290 970 l
S
290 130 m
281.602 130 l
S
290 340 m
281.602 340 l
S
290 550 m
281.602 550 l
S
290 760 m
281.602 760 l
S
290 970 m
281.602 970 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 22.2602 10.375] Tm
0 0 Td
/F8_0 6.99975 Tf
(0)
[3.891861
0] Tj
-7.5 21 Td
(250)
[3.891861
0
3.891861
0
3.891861
0] Tj
-7.5 42 Td
(500)
[3.891861
0
3.891861
0
3.891861
0] Tj
-7.5 63 Td
(750)
[3.891861
0
3.891861
0
3.891861
0] Tj
-11.25 84 Td
(1000)
[3.891861
0
3.891861
0
3.891861
0
3.891861
0] Tj
[0 1 -1 0 7.76016 17.5] Tm
0 0 Td
/F8_0 7.70025 Tf
(Mean Amplitude \(-pA\))
[6.414308
0
4.281339
0
4.281339
0
4.281339
0
2.14067
0
5.136067
0
6.414308
0
4.281339
0
1.709456
0
1.709456
0
2.14067
0
4.281339
0
4.281339
0
4.281339
0
2.14067
0
2.564183
0
2.564183
0
4.281339
0
5.136067
0
2.564183
0] Tj
Q
/DeviceGray {} cs
[0.7012] sc
368.684 703.379 m
368.684 709.551 363.672 714.563 357.5 714.563 c
351.328 714.563 346.316 709.551 346.316 703.379 c
346.316 697.207 351.328 692.195 357.5 692.195 c
363.672 692.195 368.684 697.207 368.684 703.379 c
f
368.684 641.273 m
368.684 647.445 363.672 652.457 357.5 652.457 c
351.328 652.457 346.316 647.445 346.316 641.273 c
346.316 635.102 351.328 630.09 357.5 630.09 c
363.672 630.09 368.684 635.102 368.684 641.273 c
f
368.684 503.473 m
368.684 509.645 363.672 514.656 357.5 514.656 c
351.328 514.656 346.316 509.645 346.316 503.473 c
346.316 497.301 351.328 492.289 357.5 492.289 c
363.672 492.289 368.684 497.301 368.684 503.473 c
f
368.684 846.539 m
368.684 852.711 363.672 857.723 357.5 857.723 c
351.328 857.723 346.316 852.711 346.316 846.539 c
346.316 840.367 351.328 835.355 357.5 835.355 c
363.672 835.355 368.684 840.367 368.684 846.539 c
f
368.684 737.816 m
368.684 743.988 363.672 748.996 357.5 748.996 c
351.328 748.996 346.316 743.988 346.316 737.816 c
346.316 731.641 351.328 726.633 357.5 726.633 c
363.672 726.633 368.684 731.641 368.684 737.816 c
f
368.684 325.457 m
368.684 331.629 363.672 336.641 357.5 336.641 c
351.328 336.641 346.316 331.629 346.316 325.457 c
346.316 319.285 351.328 314.273 357.5 314.273 c
363.672 314.273 368.684 319.285 368.684 325.457 c
f
368.684 348.52 m
368.684 354.691 363.672 359.699 357.5 359.699 c
351.328 359.699 346.316 354.691 346.316 348.52 c
346.316 342.344 351.328 337.336 357.5 337.336 c
363.672 337.336 368.684 342.344 368.684 348.52 c
f
368.684 432.559 m
368.684 438.73 363.672 443.738 357.5 443.738 c
351.328 443.738 346.316 438.73 346.316 432.559 c
346.316 426.387 351.328 421.375 357.5 421.375 c
363.672 421.375 368.684 426.387 368.684 432.559 c
f
368.684 390.445 m
368.684 396.617 363.672 401.629 357.5 401.629 c
351.328 401.629 346.316 396.617 346.316 390.445 c
346.316 384.273 351.328 379.262 357.5 379.262 c
363.672 379.262 368.684 384.273 368.684 390.445 c
f
368.684 389.977 m
368.684 396.148 363.672 401.16 357.5 401.16 c
351.328 401.16 346.316 396.148 346.316 389.977 c
346.316 383.805 351.328 378.793 357.5 378.793 c
363.672 378.793 368.684 383.805 368.684 389.977 c
f
368.684 413.621 m
368.684 419.793 363.672 424.805 357.5 424.805 c
351.328 424.805 346.316 419.793 346.316 413.621 c
346.316 407.449 351.328 402.438 357.5 402.438 c
363.672 402.438 368.684 407.449 368.684 413.621 c
f
368.684 371.512 m
368.684 377.684 363.672 382.695 357.5 382.695 c
351.328 382.695 346.316 377.684 346.316 371.512 c
346.316 365.34 351.328 360.332 357.5 360.332 c
363.672 360.332 368.684 365.34 368.684 371.512 c
f
368.684 245.223 m
368.684 251.395 363.672 256.406 357.5 256.406 c
351.328 256.406 346.316 251.395 346.316 245.223 c
346.316 239.051 351.328 234.039 357.5 234.039 c
363.672 234.039 368.684 239.051 368.684 245.223 c
f
368.684 543.465 m
368.684 549.641 363.672 554.648 357.5 554.648 c
351.328 554.648 346.316 549.641 346.316 543.465 c
346.316 537.293 351.328 532.285 357.5 532.285 c
363.672 532.285 368.684 537.293 368.684 543.465 c
f
368.684 429.957 m
368.684 436.129 363.672 441.141 357.5 441.141 c
351.328 441.141 346.316 436.129 346.316 429.957 c
346.316 423.785 351.328 418.773 357.5 418.773 c
363.672 418.773 368.684 423.785 368.684 429.957 c
f
368.684 622.258 m
368.684 628.43 363.672 633.441 357.5 633.441 c
351.328 633.441 346.316 628.43 346.316 622.258 c
346.316 616.086 351.328 611.074 357.5 611.074 c
363.672 611.074 368.684 616.086 368.684 622.258 c
f
458.684 182.051 m
458.684 188.223 453.672 193.234 447.5 193.234 c
441.328 193.234 436.316 188.223 436.316 182.051 c
436.316 175.879 441.328 170.867 447.5 170.867 c
453.672 170.867 458.684 175.879 458.684 182.051 c
f
458.684 185.477 m
458.684 191.648 453.672 196.66 447.5 196.66 c
441.328 196.66 436.316 191.648 436.316 185.477 c
436.316 179.305 441.328 174.293 447.5 174.293 c
453.672 174.293 458.684 179.305 458.684 185.477 c
f
458.684 181.629 m
458.684 187.801 453.672 192.809 447.5 192.809 c
441.328 192.809 436.316 187.801 436.316 181.629 c
436.316 175.453 441.328 170.445 447.5 170.445 c
453.672 170.445 458.684 175.453 458.684 181.629 c
f
458.684 252.629 m
458.684 258.801 453.672 263.809 447.5 263.809 c
441.328 263.809 436.316 258.801 436.316 252.629 c
436.316 246.457 441.328 241.445 447.5 241.445 c
453.672 241.445 458.684 246.457 458.684 252.629 c
f
458.684 179.195 m
458.684 185.367 453.672 190.375 447.5 190.375 c
441.328 190.375 436.316 185.367 436.316 179.195 c
436.316 173.02 441.328 168.012 447.5 168.012 c
453.672 168.012 458.684 173.02 458.684 179.195 c
f
458.684 215.266 m
458.684 221.438 453.672 226.449 447.5 226.449 c
441.328 226.449 436.316 221.438 436.316 215.266 c
436.316 209.094 441.328 204.082 447.5 204.082 c
453.672 204.082 458.684 209.094 458.684 215.266 c
f
458.684 178.043 m
458.684 184.215 453.672 189.223 447.5 189.223 c
441.328 189.223 436.316 184.215 436.316 178.043 c
436.316 171.867 441.328 166.859 447.5 166.859 c
453.672 166.859 458.684 171.867 458.684 178.043 c
f
458.684 240.371 m
458.684 246.543 453.672 251.555 447.5 251.555 c
441.328 251.555 436.316 246.543 436.316 240.371 c
436.316 234.199 441.328 229.188 447.5 229.188 c
453.672 229.188 458.684 234.199 458.684 240.371 c
f
458.684 180.324 m
458.684 186.496 453.672 191.508 447.5 191.508 c
441.328 191.508 436.316 186.496 436.316 180.324 c
436.316 174.152 441.328 169.141 447.5 169.141 c
453.672 169.141 458.684 174.152 458.684 180.324 c
f
458.684 179.168 m
458.684 185.34 453.672 190.348 447.5 190.348 c
441.328 190.348 436.316 185.34 436.316 179.168 c
436.316 172.996 441.328 167.984 447.5 167.984 c
453.672 167.984 458.684 172.996 458.684 179.168 c
f
458.684 168.094 m
458.684 174.266 453.672 179.277 447.5 179.277 c
441.328 179.277 436.316 174.266 436.316 168.094 c
436.316 161.922 441.328 156.91 447.5 156.91 c
453.672 156.91 458.684 161.922 458.684 168.094 c
f
458.684 260.18 m
458.684 266.352 453.672 271.363 447.5 271.363 c
441.328 271.363 436.316 266.352 436.316 260.18 c
436.316 254.008 441.328 248.996 447.5 248.996 c
453.672 248.996 458.684 254.008 458.684 260.18 c
f
458.684 156.574 m
458.684 162.746 453.672 167.758 447.5 167.758 c
441.328 167.758 436.316 162.746 436.316 156.574 c
436.316 150.402 441.328 145.391 447.5 145.391 c
453.672 145.391 458.684 150.402 458.684 156.574 c
f
458.684 198.793 m
458.684 204.965 453.672 209.977 447.5 209.977 c
441.328 209.977 436.316 204.965 436.316 198.793 c
436.316 192.621 441.328 187.609 447.5 187.609 c
453.672 187.609 458.684 192.621 458.684 198.793 c
f
458.684 210.668 m
458.684 216.844 453.672 221.852 447.5 221.852 c
441.328 221.852 436.316 216.844 436.316 210.668 c
436.316 204.496 441.328 199.488 447.5 199.488 c
453.672 199.488 458.684 204.496 458.684 210.668 c
f
458.684 322.648 m
458.684 328.82 453.672 333.832 447.5 333.832 c
441.328 333.832 436.316 328.82 436.316 322.648 c
436.316 316.477 441.328 311.465 447.5 311.465 c
453.672 311.465 458.684 316.477 458.684 322.648 c
f
548.684 175.555 m
548.684 181.727 543.672 186.738 537.5 186.738 c
531.328 186.738 526.316 181.727 526.316 175.555 c
526.316 169.383 531.328 164.371 537.5 164.371 c
543.672 164.371 548.684 169.383 548.684 175.555 c
f
548.684 155.867 m
548.684 162.039 543.672 167.051 537.5 167.051 c
531.328 167.051 526.316 162.039 526.316 155.867 c
526.316 149.695 531.328 144.684 537.5 144.684 c
543.672 144.684 548.684 149.695 548.684 155.867 c
f
548.684 169.313 m
548.684 175.484 543.672 180.496 537.5 180.496 c
531.328 180.496 526.316 175.484 526.316 169.313 c
526.316 163.141 531.328 158.129 537.5 158.129 c
543.672 158.129 548.684 163.141 548.684 169.313 c
f
548.684 174.516 m
548.684 180.688 543.672 185.699 537.5 185.699 c
531.328 185.699 526.316 180.688 526.316 174.516 c
526.316 168.344 531.328 163.332 537.5 163.332 c
543.672 163.332 548.684 168.344 548.684 174.516 c
f
548.684 163.789 m
548.684 169.961 543.672 174.973 537.5 174.973 c
531.328 174.973 526.316 169.961 526.316 163.789 c
526.316 157.617 531.328 152.605 537.5 152.605 c
543.672 152.605 548.684 157.617 548.684 163.789 c
f
548.684 167.727 m
548.684 173.898 543.672 178.906 537.5 178.906 c
531.328 178.906 526.316 173.898 526.316 167.727 c
526.316 161.551 531.328 156.543 537.5 156.543 c
543.672 156.543 548.684 161.551 548.684 167.727 c
f
548.684 182.469 m
548.684 188.645 543.672 193.652 537.5 193.652 c
531.328 193.652 526.316 188.645 526.316 182.469 c
526.316 176.297 531.328 171.289 537.5 171.289 c
543.672 171.289 548.684 176.297 548.684 182.469 c
f
548.684 173.379 m
548.684 179.551 543.672 184.563 537.5 184.563 c
531.328 184.563 526.316 179.551 526.316 173.379 c
526.316 167.207 531.328 162.195 537.5 162.195 c
543.672 162.195 548.684 167.207 548.684 173.379 c
f
548.684 182.461 m
548.684 188.633 543.672 193.641 537.5 193.641 c
531.328 193.641 526.316 188.633 526.316 182.461 c
526.316 176.285 531.328 171.277 537.5 171.277 c
543.672 171.277 548.684 176.285 548.684 182.461 c
f
548.684 165.867 m
548.684 172.039 543.672 177.051 537.5 177.051 c
531.328 177.051 526.316 172.039 526.316 165.867 c
526.316 159.695 531.328 154.684 537.5 154.684 c
543.672 154.684 548.684 159.695 548.684 165.867 c
f
548.684 155.707 m
548.684 161.879 543.672 166.891 537.5 166.891 c
531.328 166.891 526.316 161.879 526.316 155.707 c
526.316 149.535 531.328 144.523 537.5 144.523 c
543.672 144.523 548.684 149.535 548.684 155.707 c
f
548.684 183.441 m
548.684 189.613 543.672 194.625 537.5 194.625 c
531.328 194.625 526.316 189.613 526.316 183.441 c
526.316 177.27 531.328 172.258 537.5 172.258 c
543.672 172.258 548.684 177.27 548.684 183.441 c
f
548.684 167.352 m
548.684 173.527 543.672 178.535 537.5 178.535 c
531.328 178.535 526.316 173.527 526.316 167.352 c
526.316 161.18 531.328 156.172 537.5 156.172 c
543.672 156.172 548.684 161.18 548.684 167.352 c
f
548.684 166.469 m
548.684 172.641 543.672 177.652 537.5 177.652 c
531.328 177.652 526.316 172.641 526.316 166.469 c
526.316 160.297 531.328 155.285 537.5 155.285 c
543.672 155.285 548.684 160.297 548.684 166.469 c
f
548.684 217.004 m
548.684 223.176 543.672 228.184 537.5 228.184 c
531.328 228.184 526.316 223.176 526.316 217.004 c
526.316 210.828 531.328 205.82 537.5 205.82 c
543.672 205.82 548.684 210.828 548.684 217.004 c
f
548.684 183.398 m
548.684 189.57 543.672 194.582 537.5 194.582 c
531.328 194.582 526.316 189.57 526.316 183.398 c
526.316 177.227 531.328 172.215 537.5 172.215 c
543.672 172.215 548.684 177.227 548.684 183.398 c
f
548.684 153.777 m
548.684 159.953 543.672 164.961 537.5 164.961 c
531.328 164.961 526.316 159.953 526.316 153.777 c
526.316 147.605 531.328 142.598 537.5 142.598 c
543.672 142.598 548.684 147.605 548.684 153.777 c
f
548.684 164.453 m
548.684 170.625 543.672 175.637 537.5 175.637 c
531.328 175.637 526.316 170.625 526.316 164.453 c
526.316 158.281 531.328 153.27 537.5 153.27 c
543.672 153.27 548.684 158.281 548.684 164.453 c
f
548.684 229.996 m
548.684 236.168 543.672 241.18 537.5 241.18 c
531.328 241.18 526.316 236.168 526.316 229.996 c
526.316 223.824 531.328 218.813 537.5 218.813 c
543.672 218.813 548.684 223.824 548.684 229.996 c
f
548.684 174.078 m
548.684 180.25 543.672 185.262 537.5 185.262 c
531.328 185.262 526.316 180.25 526.316 174.078 c
526.316 167.906 531.328 162.895 537.5 162.895 c
543.672 162.895 548.684 167.906 548.684 174.078 c
f
638.684 168.848 m
638.684 175.02 633.672 180.031 627.5 180.031 c
621.328 180.031 616.316 175.02 616.316 168.848 c
616.316 162.676 621.328 157.664 627.5 157.664 c
633.672 157.664 638.684 162.676 638.684 168.848 c
f
638.684 217.52 m
638.684 223.691 633.672 228.703 627.5 228.703 c
621.328 228.703 616.316 223.691 616.316 217.52 c
616.316 211.348 621.328 206.336 627.5 206.336 c
633.672 206.336 638.684 211.348 638.684 217.52 c
f
638.684 311.336 m
638.684 317.508 633.672 322.52 627.5 322.52 c
621.328 322.52 616.316 317.508 616.316 311.336 c
616.316 305.164 621.328 300.152 627.5 300.152 c
633.672 300.152 638.684 305.164 638.684 311.336 c
f
638.684 296.621 m
638.684 302.797 633.672 307.805 627.5 307.805 c
621.328 307.805 616.316 302.797 616.316 296.621 c
616.316 290.449 621.328 285.441 627.5 285.441 c
633.672 285.441 638.684 290.449 638.684 296.621 c
f
638.684 215.043 m
638.684 221.215 633.672 226.223 627.5 226.223 c
621.328 226.223 616.316 221.215 616.316 215.043 c
616.316 208.867 621.328 203.859 627.5 203.859 c
633.672 203.859 638.684 208.867 638.684 215.043 c
f
638.684 216.164 m
638.684 222.336 633.672 227.348 627.5 227.348 c
621.328 227.348 616.316 222.336 616.316 216.164 c
616.316 209.992 621.328 204.98 627.5 204.98 c
633.672 204.98 638.684 209.992 638.684 216.164 c
f
638.684 268.109 m
638.684 274.281 633.672 279.293 627.5 279.293 c
621.328 279.293 616.316 274.281 616.316 268.109 c
616.316 261.938 621.328 256.926 627.5 256.926 c
633.672 256.926 638.684 261.938 638.684 268.109 c
f
638.684 285.5 m
638.684 291.672 633.672 296.684 627.5 296.684 c
621.328 296.684 616.316 291.672 616.316 285.5 c
616.316 279.328 621.328 274.316 627.5 274.316 c
633.672 274.316 638.684 279.328 638.684 285.5 c
f
638.684 248.539 m
638.684 254.715 633.672 259.723 627.5 259.723 c
621.328 259.723 616.316 254.715 616.316 248.539 c
616.316 242.367 621.328 237.359 627.5 237.359 c
633.672 237.359 638.684 242.367 638.684 248.539 c
f
638.684 282.824 m
638.684 288.996 633.672 294.004 627.5 294.004 c
621.328 294.004 616.316 288.996 616.316 282.824 c
616.316 276.652 621.328 271.641 627.5 271.641 c
633.672 271.641 638.684 276.652 638.684 282.824 c
f
638.684 666.027 m
638.684 672.203 633.672 677.211 627.5 677.211 c
621.328 677.211 616.316 672.203 616.316 666.027 c
616.316 659.855 621.328 654.848 627.5 654.848 c
633.672 654.848 638.684 659.855 638.684 666.027 c
f
638.684 440.469 m
638.684 446.641 633.672 451.652 627.5 451.652 c
621.328 451.652 616.316 446.641 616.316 440.469 c
616.316 434.297 621.328 429.285 627.5 429.285 c
633.672 429.285 638.684 434.297 638.684 440.469 c
f
638.684 334.223 m
638.684 340.395 633.672 345.406 627.5 345.406 c
621.328 345.406 616.316 340.395 616.316 334.223 c
616.316 328.051 621.328 323.039 627.5 323.039 c
633.672 323.039 638.684 328.051 638.684 334.223 c
f
638.684 748.414 m
638.684 754.586 633.672 759.598 627.5 759.598 c
621.328 759.598 616.316 754.586 616.316 748.414 c
616.316 742.242 621.328 737.23 627.5 737.23 c
633.672 737.23 638.684 742.242 638.684 748.414 c
f
728.684 252.605 m
728.684 258.777 723.672 263.789 717.5 263.789 c
711.328 263.789 706.316 258.777 706.316 252.605 c
706.316 246.434 711.328 241.422 717.5 241.422 c
723.672 241.422 728.684 246.434 728.684 252.605 c
f
728.684 490.84 m
728.684 497.012 723.672 502.023 717.5 502.023 c
711.328 502.023 706.316 497.012 706.316 490.84 c
706.316 484.668 711.328 479.656 717.5 479.656 c
723.672 479.656 728.684 484.668 728.684 490.84 c
f
728.684 397.84 m
728.684 404.016 723.672 409.023 717.5 409.023 c
711.328 409.023 706.316 404.016 706.316 397.84 c
706.316 391.668 711.328 386.66 717.5 386.66 c
723.672 386.66 728.684 391.668 728.684 397.84 c
f
728.684 394.871 m
728.684 401.047 723.672 406.055 717.5 406.055 c
711.328 406.055 706.316 401.047 706.316 394.871 c
706.316 388.699 711.328 383.691 717.5 383.691 c
723.672 383.691 728.684 388.699 728.684 394.871 c
f
728.684 437.648 m
728.684 443.82 723.672 448.832 717.5 448.832 c
711.328 448.832 706.316 443.82 706.316 437.648 c
706.316 431.477 711.328 426.465 717.5 426.465 c
723.672 426.465 728.684 431.477 728.684 437.648 c
f
728.684 424.391 m
728.684 430.563 723.672 435.574 717.5 435.574 c
711.328 435.574 706.316 430.563 706.316 424.391 c
706.316 418.219 711.328 413.207 717.5 413.207 c
723.672 413.207 728.684 418.219 728.684 424.391 c
f
728.684 438.887 m
728.684 445.063 723.672 450.07 717.5 450.07 c
711.328 450.07 706.316 445.063 706.316 438.887 c
706.316 432.715 711.328 427.707 717.5 427.707 c
723.672 427.707 728.684 432.715 728.684 438.887 c
f
728.684 359.32 m
728.684 365.492 723.672 370.504 717.5 370.504 c
711.328 370.504 706.316 365.492 706.316 359.32 c
706.316 353.148 711.328 348.137 717.5 348.137 c
723.672 348.137 728.684 353.148 728.684 359.32 c
f
728.684 351.668 m
728.684 357.84 723.672 362.848 717.5 362.848 c
711.328 362.848 706.316 357.84 706.316 351.668 c
706.316 345.492 711.328 340.484 717.5 340.484 c
723.672 340.484 728.684 345.492 728.684 351.668 c
f
728.684 621.313 m
728.684 627.484 723.672 632.496 717.5 632.496 c
711.328 632.496 706.316 627.484 706.316 621.313 c
706.316 615.141 711.328 610.129 717.5 610.129 c
723.672 610.129 728.684 615.141 728.684 621.313 c
f
728.684 358.66 m
728.684 364.832 723.672 369.844 717.5 369.844 c
711.328 369.844 706.316 364.832 706.316 358.66 c
706.316 352.488 711.328 347.477 717.5 347.477 c
723.672 347.477 728.684 352.488 728.684 358.66 c
f
728.684 291.203 m
728.684 297.375 723.672 302.387 717.5 302.387 c
711.328 302.387 706.316 297.375 706.316 291.203 c
706.316 285.031 711.328 280.02 717.5 280.02 c
723.672 280.02 728.684 285.031 728.684 291.203 c
f
728.684 421.012 m
728.684 427.184 723.672 432.195 717.5 432.195 c
711.328 432.195 706.316 427.184 706.316 421.012 c
706.316 414.84 711.328 409.828 717.5 409.828 c
723.672 409.828 728.684 414.84 728.684 421.012 c
f
728.684 521.164 m
728.684 527.336 723.672 532.348 717.5 532.348 c
711.328 532.348 706.316 527.336 706.316 521.164 c
706.316 514.992 711.328 509.98 717.5 509.98 c
723.672 509.98 728.684 514.992 728.684 521.164 c
f
728.684 658.383 m
728.684 664.559 723.672 669.566 717.5 669.566 c
711.328 669.566 706.316 664.559 706.316 658.383 c
706.316 652.211 711.328 647.203 717.5 647.203 c
723.672 647.203 728.684 652.211 728.684 658.383 c
f
728.684 348.004 m
728.684 354.176 723.672 359.184 717.5 359.184 c
711.328 359.184 706.316 354.176 706.316 348.004 c
706.316 341.828 711.328 336.82 717.5 336.82 c
723.672 336.82 728.684 341.828 728.684 348.004 c
f
9.9975 w
0 J
/DeviceGray {} CS
[0] SC
357.5 496.594 m
357.5 454.238 l
S
357.5 496.594 m
357.5 538.945 l
S
/DeviceGray {} cs
[0] sc
377.504 496.594 m
377.504 485.543 368.547 476.59 357.5 476.59 c
346.453 476.59 337.496 485.543 337.496 496.594 c
337.496 507.641 346.453 516.594 357.5 516.594 c
368.547 516.594 377.504 507.641 377.504 496.594 c
f
447.5 205.699 m
447.5 194.816 l
S
447.5 205.699 m
447.5 216.574 l
S
467.504 205.695 m
467.504 194.645 458.547 185.691 447.5 185.691 c
436.453 185.691 427.496 194.645 427.496 205.695 c
427.496 216.742 436.453 225.695 447.5 225.695 c
458.547 225.695 467.504 216.742 467.504 205.695 c
f
537.5 175.328 m
537.5 171.109 l
S
537.5 175.328 m
537.5 179.551 l
S
557.504 175.332 m
557.504 164.285 548.547 155.328 537.5 155.328 c
526.453 155.328 517.496 164.285 517.496 175.332 c
517.496 186.379 526.453 195.332 537.5 195.332 c
548.547 195.332 557.504 186.379 557.504 175.332 c
f
627.5 335.688 m
627.5 289.953 l
S
627.5 335.688 m
627.5 381.422 l
S
647.504 335.688 m
647.504 324.641 638.547 315.688 627.5 315.688 c
616.453 315.688 607.496 324.641 607.496 335.688 c
607.496 346.734 616.453 355.691 627.5 355.691 c
638.547 355.691 647.504 346.734 647.504 335.688 c
f
717.5 422.988 m
717.5 395.898 l
S
717.5 422.988 m
717.5 450.086 l
S
737.504 422.988 m
737.504 411.941 728.547 402.984 717.5 402.984 c
706.453 402.984 697.496 411.941 697.496 422.988 c
697.496 434.035 706.453 442.992 717.5 442.992 c
728.547 442.992 737.504 434.035 737.504 422.988 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font QNPLDS+Helvetica
%%EOF
