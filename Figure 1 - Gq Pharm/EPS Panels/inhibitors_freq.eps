%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.60.1 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.4.0.813654 \\(R2018a\\). Operating System: Windows 7)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 79 102
%%HiResBoundingBox: 0 0 79 102
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font TAHNNA+Helvetica
%!FontType1-1.0: TAHNNA+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /TAHNNA+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 762 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 55 /seven put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 77 /M put
dup 79 /O put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 97 /a put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB9711908C6AFA4FACEB7F0C52170F6E7D98FB1099872C199438098C7F
F3E526DCA037CF7C8499EFCE5CEC4787D7C432E0BFB65C4DB38FE3E100E6D1AD
17B71D88E7465CA5AE3C8E84FE009A5958E94A26B87DE8DFDE434400D94E3E0D
6E42CB861975884A31C9190FADB15095022144D112775CF8CF6E676C5826C82F
D2A0F8F15A33364408754EDE3B5E83F79A3C26B5CCB855875D1915F535EA20D7
1E758B6B640B459ACE5586BED29119ABBB6FCF64820FA096DBBDC429A0A15AAD
074C263F67CC7FBE9242FB2CD060D41F6DCB3A9F9A9CAF32A14D77EBF76E8443
7AA6CD5CEB74441151278732F42509E7401D6B8B15C0E4DD6EA2A24DDC963D21
0F014AE6FC770219565571D471F5EF4700EB8BC628A4BFEEB08F3F5767FB38AF
D880B710E2A21B36D576B56867151467F44A4C79DAAFA5A54B658E8F5271498E
43B781F8162F8FC1C4087C1C0A1E996245F6E1A601A70981BD3928DFFFB9DAA6
F8BD9A51736C6AD4B6778E4818405FD7D214FE016EC2993769E2F357A2995D8A
0C32A693C16CDA3463669945F0B6414E5AEE58FB2B1EA46B3526DCB3016E3C25
1F67B6423CF000C52054E360658D8B96833EADEFD0354E7636177A9D2CF7B6C8
3C2D6FB4B09AFCF5E00AC0C5236185EC9396EE209064434703923408CF6C24D6
BE528A8335364945ABD5727D77F16D775D749A04BCF7914D2C6D29F111765635
1FE9B505DD068324305FCA41FA89B4A383E12E556D96BFD104804938FB699643
BD8934F515EF36F9BE4F3983F146EAF015FF9A5DF1C4FCA06EA45BA3233E9684
372E94D60EE1C3504D31C879B856067DF983ABFF0F5F1E0EC7257368F246D756
1151C7A6AA36ABF365C6B2EF8FDDAB64AABD398424CC2E6EEDA162C7F80B35CA
967C3C6A666B4204553C4A45DB597704E32D12D9BBD9397B73EAA6FD74DC13B5
EB1CDE301F1B6E84370F77F42782A8F28563E1F21677CCCF16E7655BDEAC070E
816ACD32700124C8954A554E32381116A8A880BAF71F18ECBEF52F4AB6206CC9
C419F1B9F832868D40533DE5C64B7A70BF315FF13C4CFCCD2E43AFE161EB898B
C65DA5AC94ABD279E78D97193FD9A1BC152F6EBFA005C595DE28088F429DAF61
E600B59AE9C7A8AE46C74825F38502DB87181BE5CBA23C829D5F29F83D2F2DE9
4AD73B18CF2B6C748A06DEA95F3BC6AD30D89246612C78FACF1310D2F4FEF85E
EC692595648F2A7F10A97BAAF08A3BFD9D94A7DB4E6BFFD8E81910193F492204
A343D488ABB75BBEF6095FE2A8191B42F36E06F8D522FB0833AAED12113C7073
0A67F3E1D2B71204BE183C715E63AB2F174CC4FF7603A0AAE10405AC730C727D
2C312D088FE8F86FCBB1C7B5752035AF55BD375694A5603F06047C35F8AB93B1
01DDA60DE3BC4F0DD869CB278990E52D6E73A3B73B5D710FC65371A87A523385
3C70F8CFD269B7587B0DD9944FA635D26CB85075572C5B923379C997B2DB09C9
3493BEB8916EE4CC7AAFA41C621323D8F507289F013D033356D655914E8A70AF
06686E4EA1C6D34908E79E5376D11F9D37FC07D3E69392546ADEB9E92182D4A7
0389AAF066622648F690CC8F08DF889EC97B65C7F3DDC7F30179E444DAB80FE4
BCB2A1D29B23C46445DE67211294FD7AA8FA58E0ABADCCBDB3F7E1484CF0D3E8
1F5AF891CD54BEDBCC992C214EC6F4F3E7D01A0D1DC065CC6063AA72A10EB52A
37CE9743AAE2D2C51B1949D12AFE4E19F4FABDDB6C19A16823E8C749D65C4735
954827A77E3023456E0559C60CBCAD982A263529D4ED2A24E47FF8E0C35C91E1
C892E1127A30D138981BF22BCE6509AD742DBD98A8742149586AD60F8BCAAE4D
677D515579179CB37DB2A7906A09D53131DA4DC458AB744AA27E58F5E022C286
5DA3614A0D0084F8AD347423FF9E9A92DA05B2C733794C6D91A090D4FDEFB09C
B9FC34B4F6386407B23BB0C6F733CDEAAEF5EF7622FC60B33A7D740BFCD1E820
3A4A78436E978CB8A1577D6C88E9E73596ADD02AA8DA0B3DAEE565EFF9DDD741
D7B534CB294B66862CE87B95148050F60C7DB80EBA94FE70A2C66B42EA00F438
23E0030B86AC7879171F797C601C35B32961B61558EF582246AA9ECAA6CC1CF7
D4CCA31297220BF5CA756985BD8273D492FE097321814D7171EAB7414C8755C1
B99524E2C924EBFFB140F57F648E7B123B1B2AFAA7A73DB4B0A7FBD7C670D290
EE11D54ECF169DE7DD55142343A7EF39683123DF49D8A4CFAABAD621ED49F291
ED2C29C27886B27AED2C0A447A18708A08BF959AC0931748F935654D2A3F133A
00B141C24765D79A1F3EE89E7E17A5944F5BDAF0C5CA15B82EB9D332A2E059CE
C999527B997F60EF9799D217C406362778A50B3707C4C4363003387C4B315079
A70950BD826B0A4567945D734A5B780E77044069BBCEFA9B903152A1C4591378
025C362062ED1D363CB45948A5374EC8ABBB38953121728B23F043FC65BE2A23
B8B979C36FC8B7E1CF9BA931905751F4375CCAA1B4024FFE3FB4FF780359EF76
5AAC3F905DDA1D02B70834579FEEFE9D5D7ECE5A4B8C207F6DBCBB044500FB14
DDF4D9ED920F0DDB2999F227B461D3BD448D2AE22986033BC9B26191EEE39F04
E66A7DF38C6F8D632CEA14F2EE2BBEF8A879EEAFC9C68051729C2290FD892DDC
38C0D0935F9E442FE39E5BB3A619CA79922A78200883592BDD503CE6433EE135
B50AE7F22B37C0614A022D8F7912FF076977B7B64D6E275F3E6EFAB25152E870
99009514BA674C0199DDE703112ADB1F8FCC991B61E55982B20BCD288D497CB1
F1B07D798C984C3FCD55F1EADED42854EB2F2E7B2707B423A7B184A8534D5A47
72740133F890EBC88D6171D2886C9F876468AC8202520E5AFBD4B4A8AC6AB701
F5C9A3B2FA39B225462201356B0A82DB230AD073FA498B7AA6DA53B56564FA27
7B9F74A96AB1015378EB137967DD55BDDD298909EF95317498DBEF2B00DACF82
E56055D64E2C03C1860CB911F48C80F1922F02AA9E57B0238767591F54CC3BE3
E16924B641AA165E83BF8BDBC3BB38CB406233261786BD01D4637792A1F3C935
7088C184A899403CFF8780EE09BDA3BAA67F7D46C95A7149B3D7684B9AEFB0FF
326C0B59C30EA3E75799B796D72584E207C9B74B81320A6A0FAF2CE42020F83E
359E9796D725282D1F2386384B2BF0143626F8E5B2B4091BECA12666BAE68D2F
69DEF36F0C304EA4201694A16C53414073403A65490F94817DC67E07B551D540
13E3199286E5EF7761E952A564FC53B96A740BFE1AAA7394802A546F0AA7DF16
7DEF6E1A4A2D5AB92E30F360094EF8C0D35B1689A3126B50F81EDF6A26AAB884
D11B69416802747AB7065B685FE8F9D711FD60B8C37B892713E2746612AF0B15
2D24B60130BC1A5E776685F76A8C2834A12B06BF211CE298731715FF9ED09D48
7A67A3C76EF168FD982FF51483FC1014E92BBE9FC9761B8FFB0107B21F79D7D8
0DB321F163DF55C8C9194699B3FCC5E6E44C38DE9DDEB20B0553AE9957AE3AFD
EC7E8B38C41E4F1587083D91625844E10B2128CC71CC32DB78227B229B3C9282
E8A932C9992A9AEF5760D6A03DD6BE7C7ADD890BC9088CE2B1AA4B81113A0699
4D50EC36E85408973640F27946462EE299511AB757CDEF99353D49DCDBA69A36
FEF38DC63121A0239AFCE4975036545981098E86C99EB28341264BBF3EA583DD
F133A57E9B16E8A65792281870E9E70C2B13BCF14CD9CF77AB7FAA0E64E28744
53C98AD4964461091268F5EA8FE572149154C3806B8AC92652E921721A225F01
07DB067BEC6800FE8223729552B602DFCDC64C3C8C18C5E469FA683F54819E05
25E49E6162E8E3D58246CF589185D19168773DD0B994630D06147AC87D3901C8
1D5EE4266756589605A4DD58A5C83C2D6924BD46D27E0CD85984DE2B7DFADB64
6D4B612D19C17A703E983A5C9C5ED571840112FB72B63BF75C4C73F6919A5103
82FCEDCEAA4FE6ACA8ABA7A251B4BE9793751F74C4D40F136F27321E1195945E
73E78626713621D39018CA047F7580388249AC357ECC206474654D819A734E55
1B348C8A02D2F5725FE9531D1C2AB4031EEDC038C9BD81708B57DB593ED7F9F5
5C68F9978473A9BE0F6B43E06AC04B06CA3A967ED4AE7E61D393D7CD636B05F4
19748156A5FE443C18B6CA0BF754B2A4EBB3F6C069F9A870865F7912A87CA85E
62F41C95B27D48AFC58B3E289D1AE33894AE7FC286738D5FE455047E191A5378
A9D4805259A62187FF651DBFAAFB1FCA2F783A1AA0B713BF6B4DA854FC78919A
0F480E4539F2F47A9F6DC5C14F5FE70C4097094DDB33FB83A24E677404FCBDBB
2E7644969FE21F8C96DD7E8D7E93EB6B54570D61A9D2EAD3C2F0C96ED78F1C99
BFCE2132B29DFFAC6FCF28DE953F7DAE7B1F5085AD1149C7CAB2B935FFA30BE3
843457903F9101D56BE4C94B4C0C32F6FCC09891D2718A3F898FD9D745DB870F
4798444BA79622087D960B78A0AD42E23DEF4CA333786B4E1C67E21FEC02CF45
319AD17DEE3D923E64D54616866BA7ED0F52D3EF5751AA43A91F2A83A255E147
F15553E821022DBDE8B26477D83848C40A17A78F9C91EDEFC25112A0D645ED00
1900B6F42E48D3D025BBD5FF819BA1E6E7496A1516E6B02AE4057CD29D6DF719
DB69B1D898854545B8E531CB2C1A5FB32414747CE8E2F5A78A1E3CDEA62D1E61
D457AE00E42FDD015B21E0F4047C4D36D2EE717411D73E12FA6B163530431F74
473C528C526B947BB58D3C39C7C64CE0D9BCDD834641CE1727E4472F3407D290
7DCEEEECB29A3FE308384FC86EA3DE3D1712FB6F359E9D9486E4A4B3583C2193
6C04D3763A3D3556EA115CF35D110163BBC4E68A47A8FB69A3DCF2936A368C77
6BCC09B0C03B6C207D758C7F41
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /TAHNNA+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 79 102 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
-90 10 870 1005 re
f
-90 10 870 1005 re
f
210 130 495 847.5 re
f
7.5 w
2 J
1 j
/DeviceGray {} CS
[0.1489] SC
210 130 m
705 130 l
S
277.5 130 m
277.5 121.563 l
S
367.5 130 m
367.5 121.563 l
S
457.5 130 m
457.5 121.563 l
S
547.5 130 m
547.5 121.563 l
S
637.5 130 m
637.5 121.563 l
S
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 4.875 4.00625] Tm
0 0 Td
/F8_0 6.99975 Tf
(DMSO Control)
[5.05382
0
5.830792
0
4.668833
0
5.445806
0
1.945931
0
5.05382
0
3.891861
0
3.891861
0
1.945931
0
2.330917
0
3.891861
0
1.553945
0] Tj
13.875 0 Td
(BAPTA-AM)
[4.668833
0
4.668833
0
4.668833
0
4.276847
0
4.668833
0
2.330917
0
4.668833
0
5.830792
0] Tj
20.625 0 Td
(Thapsigargin)
[4.276847
0
3.891861
0
3.891861
0
3.891861
0
3.499875
0
1.553945
0
3.891861
0
3.891861
0
2.330917
0
3.891861
0
1.553945
0
3.891861
0] Tj
37.5 0 Td
(U73122)
[5.05382
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0] Tj
2216.24 TJm
(U73343)
[5.05382
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0] Tj
Q
210 130 m
210 977.5 l
S
210 130 m
201.563 130 l
S
210 341.875 m
201.563 341.875 l
S
210 553.75 m
201.563 553.75 l
S
210 765.625 m
201.563 765.625 l
S
210 977.5 m
201.563 977.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 14.2563 10.375] Tm
0 0 Td
/F8_0 6.99975 Tf
(0)
[3.891861
0] Tj
0 21.1875 Td
(5)
[3.891861
0] Tj
-3.75 42.375 Td
(10)
[3.891861
0
3.891861
0] Tj
-3.75 63.5625 Td
(15)
[3.891861
0
3.891861
0] Tj
-3.75 84.75 Td
(20)
[3.891861
0
3.891861
0] Tj
[0 1 -1 0 7.25625 24.25] Tm
0 0 Td
/F8_0 7.70025 Tf
(Events per minute)
[5.136067
0
3.850125
0
4.281339
0
4.281339
0
2.14067
0
3.850125
0
2.14067
0
4.281339
0
4.281339
0
2.564183
0
2.14067
0
6.414308
0
1.709456
0
4.281339
0
4.281339
0
2.14067
0
4.281339
0] Tj
Q
/DeviceGray {} cs
[0.7012] sc
288.684 553.75 m
288.684 559.922 283.672 564.934 277.5 564.934 c
271.328 564.934 266.316 559.922 266.316 553.75 c
266.316 547.578 271.328 542.566 277.5 542.566 c
283.672 542.566 288.684 547.578 288.684 553.75 c
f
288.684 562.227 m
288.684 568.398 283.672 573.406 277.5 573.406 c
271.328 573.406 266.316 568.398 266.316 562.227 c
266.316 556.051 271.328 551.043 277.5 551.043 c
283.672 551.043 288.684 556.051 288.684 562.227 c
f
288.684 680.875 m
288.684 687.047 283.672 692.059 277.5 692.059 c
271.328 692.059 266.316 687.047 266.316 680.875 c
266.316 674.703 271.328 669.691 277.5 669.691 c
283.672 669.691 288.684 674.703 288.684 680.875 c
f
288.684 880.039 m
288.684 886.211 283.672 891.219 277.5 891.219 c
271.328 891.219 266.316 886.211 266.316 880.039 c
266.316 873.863 271.328 868.855 277.5 868.855 c
283.672 868.855 288.684 873.863 288.684 880.039 c
f
288.684 774.102 m
288.684 780.273 283.672 785.281 277.5 785.281 c
271.328 785.281 266.316 780.273 266.316 774.102 c
266.316 767.926 271.328 762.918 277.5 762.918 c
283.672 762.918 288.684 767.926 288.684 774.102 c
f
288.684 583.414 m
288.684 589.586 283.672 594.594 277.5 594.594 c
271.328 594.594 266.316 589.586 266.316 583.414 c
266.316 577.238 271.328 572.23 277.5 572.23 c
283.672 572.23 288.684 577.238 288.684 583.414 c
f
288.684 871.563 m
288.684 877.734 283.672 882.746 277.5 882.746 c
271.328 882.746 266.316 877.734 266.316 871.563 c
266.316 865.391 271.328 860.379 277.5 860.379 c
283.672 860.379 288.684 865.391 288.684 871.563 c
f
288.684 676.637 m
288.684 682.809 283.672 687.82 277.5 687.82 c
271.328 687.82 266.316 682.809 266.316 676.637 c
266.316 670.465 271.328 665.453 277.5 665.453 c
283.672 665.453 288.684 670.465 288.684 676.637 c
f
288.684 596.125 m
288.684 602.297 283.672 607.309 277.5 607.309 c
271.328 607.309 266.316 602.297 266.316 596.125 c
266.316 589.953 271.328 584.941 277.5 584.941 c
283.672 584.941 288.684 589.953 288.684 596.125 c
f
288.684 617.313 m
288.684 623.484 283.672 628.496 277.5 628.496 c
271.328 628.496 266.316 623.484 266.316 617.313 c
266.316 611.141 271.328 606.129 277.5 606.129 c
283.672 606.129 288.684 611.141 288.684 617.313 c
f
288.684 663.926 m
288.684 670.098 283.672 675.109 277.5 675.109 c
271.328 675.109 266.316 670.098 266.316 663.926 c
266.316 657.754 271.328 652.742 277.5 652.742 c
283.672 652.742 288.684 657.754 288.684 663.926 c
f
288.684 956.313 m
288.684 962.484 283.672 967.496 277.5 967.496 c
271.328 967.496 266.316 962.484 266.316 956.313 c
266.316 950.141 271.328 945.129 277.5 945.129 c
283.672 945.129 288.684 950.141 288.684 956.313 c
f
288.684 625.789 m
288.684 631.961 283.672 636.969 277.5 636.969 c
271.328 636.969 266.316 631.961 266.316 625.789 c
266.316 619.613 271.328 614.605 277.5 614.605 c
283.672 614.605 288.684 619.613 288.684 625.789 c
f
288.684 693.586 m
288.684 699.762 283.672 704.77 277.5 704.77 c
271.328 704.77 266.316 699.762 266.316 693.586 c
266.316 687.414 271.328 682.406 277.5 682.406 c
283.672 682.406 288.684 687.414 288.684 693.586 c
f
288.684 549.512 m
288.684 555.684 283.672 560.695 277.5 560.695 c
271.328 560.695 266.316 555.684 266.316 549.512 c
266.316 543.34 271.328 538.328 277.5 538.328 c
283.672 538.328 288.684 543.34 288.684 549.512 c
f
288.684 579.176 m
288.684 585.348 283.672 590.359 277.5 590.359 c
271.328 590.359 266.316 585.348 266.316 579.176 c
266.316 573.004 271.328 567.992 277.5 567.992 c
283.672 567.992 288.684 573.004 288.684 579.176 c
f
378.684 206.273 m
378.684 212.449 373.672 217.457 367.5 217.457 c
361.328 217.457 356.316 212.449 356.316 206.273 c
356.316 200.102 361.328 195.094 367.5 195.094 c
373.672 195.094 378.684 200.102 378.684 206.273 c
f
378.684 210.512 m
378.684 216.684 373.672 221.695 367.5 221.695 c
361.328 221.695 356.316 216.684 356.316 210.512 c
356.316 204.34 361.328 199.328 367.5 199.328 c
373.672 199.328 378.684 204.34 378.684 210.512 c
f
378.684 214.75 m
378.684 220.922 373.672 225.934 367.5 225.934 c
361.328 225.934 356.316 220.922 356.316 214.75 c
356.316 208.578 361.328 203.566 367.5 203.566 c
373.672 203.566 378.684 208.578 378.684 214.75 c
f
378.684 218.988 m
378.684 225.16 373.672 230.172 367.5 230.172 c
361.328 230.172 356.316 225.16 356.316 218.988 c
356.316 212.816 361.328 207.805 367.5 207.805 c
373.672 207.805 378.684 212.816 378.684 218.988 c
f
378.684 193.563 m
378.684 199.734 373.672 204.746 367.5 204.746 c
361.328 204.746 356.316 199.734 356.316 193.563 c
356.316 187.391 361.328 182.379 367.5 182.379 c
373.672 182.379 378.684 187.391 378.684 193.563 c
f
378.684 227.461 m
378.684 233.637 373.672 238.645 367.5 238.645 c
361.328 238.645 356.316 233.637 356.316 227.461 c
356.316 221.289 361.328 216.281 367.5 216.281 c
373.672 216.281 378.684 221.289 378.684 227.461 c
f
378.684 176.613 m
378.684 182.785 373.672 187.797 367.5 187.797 c
361.328 187.797 356.316 182.785 356.316 176.613 c
356.316 170.441 361.328 165.43 367.5 165.43 c
373.672 165.43 378.684 170.441 378.684 176.613 c
f
378.684 295.262 m
378.684 301.434 373.672 306.445 367.5 306.445 c
361.328 306.445 356.316 301.434 356.316 295.262 c
356.316 289.09 361.328 284.078 367.5 284.078 c
373.672 284.078 378.684 289.09 378.684 295.262 c
f
378.684 172.375 m
378.684 178.547 373.672 183.559 367.5 183.559 c
361.328 183.559 356.316 178.547 356.316 172.375 c
356.316 166.203 361.328 161.191 367.5 161.191 c
373.672 161.191 378.684 166.203 378.684 172.375 c
f
378.684 146.949 m
378.684 153.121 373.672 158.133 367.5 158.133 c
361.328 158.133 356.316 153.121 356.316 146.949 c
356.316 140.777 361.328 135.766 367.5 135.766 c
373.672 135.766 378.684 140.777 378.684 146.949 c
f
378.684 202.039 m
378.684 208.211 373.672 213.219 367.5 213.219 c
361.328 213.219 356.316 208.211 356.316 202.039 c
356.316 195.863 361.328 190.855 367.5 190.855 c
373.672 190.855 378.684 195.863 378.684 202.039 c
f
378.684 223.227 m
378.684 229.398 373.672 234.406 367.5 234.406 c
361.328 234.406 356.316 229.398 356.316 223.227 c
356.316 217.051 361.328 212.043 367.5 212.043 c
373.672 212.043 378.684 217.051 378.684 223.227 c
f
378.684 163.898 m
378.684 170.074 373.672 175.082 367.5 175.082 c
361.328 175.082 356.316 170.074 356.316 163.898 c
356.316 157.727 361.328 152.719 367.5 152.719 c
373.672 152.719 378.684 157.727 378.684 163.898 c
f
378.684 189.324 m
378.684 195.496 373.672 200.508 367.5 200.508 c
361.328 200.508 356.316 195.496 356.316 189.324 c
356.316 183.152 361.328 178.141 367.5 178.141 c
373.672 178.141 378.684 183.152 378.684 189.324 c
f
378.684 244.414 m
378.684 250.586 373.672 255.594 367.5 255.594 c
361.328 255.594 356.316 250.586 356.316 244.414 c
356.316 238.238 361.328 233.23 367.5 233.23 c
373.672 233.23 378.684 238.238 378.684 244.414 c
f
378.684 299.5 m
378.684 305.672 373.672 310.684 367.5 310.684 c
361.328 310.684 356.316 305.672 356.316 299.5 c
356.316 293.328 361.328 288.316 367.5 288.316 c
373.672 288.316 378.684 293.328 378.684 299.5 c
f
468.684 155.426 m
468.684 161.598 463.672 166.609 457.5 166.609 c
451.328 166.609 446.316 161.598 446.316 155.426 c
446.316 149.254 451.328 144.242 457.5 144.242 c
463.672 144.242 468.684 149.254 468.684 155.426 c
f
468.684 151.188 m
468.684 157.359 463.672 162.371 457.5 162.371 c
451.328 162.371 446.316 157.359 446.316 151.188 c
446.316 145.016 451.328 140.004 457.5 140.004 c
463.672 140.004 468.684 145.016 468.684 151.188 c
f
468.684 151.188 m
468.684 157.359 463.672 162.371 457.5 162.371 c
451.328 162.371 446.316 157.359 446.316 151.188 c
446.316 145.016 451.328 140.004 457.5 140.004 c
463.672 140.004 468.684 145.016 468.684 151.188 c
f
468.684 240.176 m
468.684 246.348 463.672 251.359 457.5 251.359 c
451.328 251.359 446.316 246.348 446.316 240.176 c
446.316 234.004 451.328 228.992 457.5 228.992 c
463.672 228.992 468.684 234.004 468.684 240.176 c
f
468.684 138.477 m
468.684 144.648 463.672 149.656 457.5 149.656 c
451.328 149.656 446.316 144.648 446.316 138.477 c
446.316 132.301 451.328 127.293 457.5 127.293 c
463.672 127.293 468.684 132.301 468.684 138.477 c
f
468.684 168.137 m
468.684 174.309 463.672 179.32 457.5 179.32 c
451.328 179.32 446.316 174.309 446.316 168.137 c
446.316 161.965 451.328 156.953 457.5 156.953 c
463.672 156.953 468.684 161.965 468.684 168.137 c
f
468.684 151.188 m
468.684 157.359 463.672 162.371 457.5 162.371 c
451.328 162.371 446.316 157.359 446.316 151.188 c
446.316 145.016 451.328 140.004 457.5 140.004 c
463.672 140.004 468.684 145.016 468.684 151.188 c
f
468.684 176.613 m
468.684 182.785 463.672 187.797 457.5 187.797 c
451.328 187.797 446.316 182.785 446.316 176.613 c
446.316 170.441 451.328 165.43 457.5 165.43 c
463.672 165.43 468.684 170.441 468.684 176.613 c
f
468.684 210.512 m
468.684 216.684 463.672 221.695 457.5 221.695 c
451.328 221.695 446.316 216.684 446.316 210.512 c
446.316 204.34 451.328 199.328 457.5 199.328 c
463.672 199.328 468.684 204.34 468.684 210.512 c
f
468.684 142.711 m
468.684 148.887 463.672 153.895 457.5 153.895 c
451.328 153.895 446.316 148.887 446.316 142.711 c
446.316 136.539 451.328 131.531 457.5 131.531 c
463.672 131.531 468.684 136.539 468.684 142.711 c
f
468.684 159.664 m
468.684 165.836 463.672 170.844 457.5 170.844 c
451.328 170.844 446.316 165.836 446.316 159.664 c
446.316 153.488 451.328 148.48 457.5 148.48 c
463.672 148.48 468.684 153.488 468.684 159.664 c
f
468.684 138.477 m
468.684 144.648 463.672 149.656 457.5 149.656 c
451.328 149.656 446.316 144.648 446.316 138.477 c
446.316 132.301 451.328 127.293 457.5 127.293 c
463.672 127.293 468.684 132.301 468.684 138.477 c
f
468.684 189.324 m
468.684 195.496 463.672 200.508 457.5 200.508 c
451.328 200.508 446.316 195.496 446.316 189.324 c
446.316 183.152 451.328 178.141 457.5 178.141 c
463.672 178.141 468.684 183.152 468.684 189.324 c
f
468.684 176.613 m
468.684 182.785 463.672 187.797 457.5 187.797 c
451.328 187.797 446.316 182.785 446.316 176.613 c
446.316 170.441 451.328 165.43 457.5 165.43 c
463.672 165.43 468.684 170.441 468.684 176.613 c
f
468.684 210.512 m
468.684 216.684 463.672 221.695 457.5 221.695 c
451.328 221.695 446.316 216.684 446.316 210.512 c
446.316 204.34 451.328 199.328 457.5 199.328 c
463.672 199.328 468.684 204.34 468.684 210.512 c
f
468.684 214.75 m
468.684 220.922 463.672 225.934 457.5 225.934 c
451.328 225.934 446.316 220.922 446.316 214.75 c
446.316 208.578 451.328 203.566 457.5 203.566 c
463.672 203.566 468.684 208.578 468.684 214.75 c
f
468.684 163.898 m
468.684 170.074 463.672 175.082 457.5 175.082 c
451.328 175.082 446.316 170.074 446.316 163.898 c
446.316 157.727 451.328 152.719 457.5 152.719 c
463.672 152.719 468.684 157.727 468.684 163.898 c
f
468.684 197.801 m
468.684 203.973 463.672 208.984 457.5 208.984 c
451.328 208.984 446.316 203.973 446.316 197.801 c
446.316 191.629 451.328 186.617 457.5 186.617 c
463.672 186.617 468.684 191.629 468.684 197.801 c
f
468.684 155.426 m
468.684 161.598 463.672 166.609 457.5 166.609 c
451.328 166.609 446.316 161.598 446.316 155.426 c
446.316 149.254 451.328 144.242 457.5 144.242 c
463.672 144.242 468.684 149.254 468.684 155.426 c
f
468.684 202.039 m
468.684 208.211 463.672 213.219 457.5 213.219 c
451.328 213.219 446.316 208.211 446.316 202.039 c
446.316 195.863 451.328 190.855 457.5 190.855 c
463.672 190.855 468.684 195.863 468.684 202.039 c
f
558.684 197.801 m
558.684 203.973 553.672 208.984 547.5 208.984 c
541.328 208.984 536.316 203.973 536.316 197.801 c
536.316 191.629 541.328 186.617 547.5 186.617 c
553.672 186.617 558.684 191.629 558.684 197.801 c
f
558.684 303.738 m
558.684 309.91 553.672 314.922 547.5 314.922 c
541.328 314.922 536.316 309.91 536.316 303.738 c
536.316 297.566 541.328 292.555 547.5 292.555 c
553.672 292.555 558.684 297.566 558.684 303.738 c
f
558.684 655.449 m
558.684 661.621 553.672 666.633 547.5 666.633 c
541.328 666.633 536.316 661.621 536.316 655.449 c
536.316 649.277 541.328 644.266 547.5 644.266 c
553.672 644.266 558.684 649.277 558.684 655.449 c
f
558.684 350.352 m
558.684 356.523 553.672 361.531 547.5 361.531 c
541.328 361.531 536.316 356.523 536.316 350.352 c
536.316 344.176 541.328 339.168 547.5 339.168 c
553.672 339.168 558.684 344.176 558.684 350.352 c
f
558.684 257.125 m
558.684 263.297 553.672 268.309 547.5 268.309 c
541.328 268.309 536.316 263.297 536.316 257.125 c
536.316 250.953 541.328 245.941 547.5 245.941 c
553.672 245.941 558.684 250.953 558.684 257.125 c
f
558.684 320.688 m
558.684 326.859 553.672 331.871 547.5 331.871 c
541.328 331.871 536.316 326.859 536.316 320.688 c
536.316 314.516 541.328 309.504 547.5 309.504 c
553.672 309.504 558.684 314.516 558.684 320.688 c
f
558.684 371.539 m
558.684 377.711 553.672 382.719 547.5 382.719 c
541.328 382.719 536.316 377.711 536.316 371.539 c
536.316 365.363 541.328 360.355 547.5 360.355 c
553.672 360.355 558.684 365.363 558.684 371.539 c
f
558.684 278.313 m
558.684 284.484 553.672 289.496 547.5 289.496 c
541.328 289.496 536.316 284.484 536.316 278.313 c
536.316 272.141 541.328 267.129 547.5 267.129 c
553.672 267.129 558.684 272.141 558.684 278.313 c
f
558.684 375.773 m
558.684 381.949 553.672 386.957 547.5 386.957 c
541.328 386.957 536.316 381.949 536.316 375.773 c
536.316 369.602 541.328 364.594 547.5 364.594 c
553.672 364.594 558.684 369.602 558.684 375.773 c
f
558.684 426.625 m
558.684 432.797 553.672 437.809 547.5 437.809 c
541.328 437.809 536.316 432.797 536.316 426.625 c
536.316 420.453 541.328 415.441 547.5 415.441 c
553.672 415.441 558.684 420.453 558.684 426.625 c
f
558.684 392.727 m
558.684 398.898 553.672 403.906 547.5 403.906 c
541.328 403.906 536.316 398.898 536.316 392.727 c
536.316 386.551 541.328 381.543 547.5 381.543 c
553.672 381.543 558.684 386.551 558.684 392.727 c
f
558.684 367.301 m
558.684 373.473 553.672 378.484 547.5 378.484 c
541.328 378.484 536.316 373.473 536.316 367.301 c
536.316 361.129 541.328 356.117 547.5 356.117 c
553.672 356.117 558.684 361.129 558.684 367.301 c
f
558.684 303.738 m
558.684 309.91 553.672 314.922 547.5 314.922 c
541.328 314.922 536.316 309.91 536.316 303.738 c
536.316 297.566 541.328 292.555 547.5 292.555 c
553.672 292.555 558.684 297.566 558.684 303.738 c
f
558.684 545.273 m
558.684 551.449 553.672 556.457 547.5 556.457 c
541.328 556.457 536.316 551.449 536.316 545.273 c
536.316 539.102 541.328 534.094 547.5 534.094 c
553.672 534.094 558.684 539.102 558.684 545.273 c
f
648.684 430.863 m
648.684 437.035 643.672 442.047 637.5 442.047 c
631.328 442.047 626.316 437.035 626.316 430.863 c
626.316 424.691 631.328 419.68 637.5 419.68 c
643.672 419.68 648.684 424.691 648.684 430.863 c
f
648.684 536.801 m
648.684 542.973 643.672 547.984 637.5 547.984 c
631.328 547.984 626.316 542.973 626.316 536.801 c
626.316 530.629 631.328 525.617 637.5 525.617 c
643.672 525.617 648.684 530.629 648.684 536.801 c
f
648.684 583.414 m
648.684 589.586 643.672 594.594 637.5 594.594 c
631.328 594.594 626.316 589.586 626.316 583.414 c
626.316 577.238 631.328 572.23 637.5 572.23 c
643.672 572.23 648.684 577.238 648.684 583.414 c
f
648.684 591.887 m
648.684 598.059 643.672 603.07 637.5 603.07 c
631.328 603.07 626.316 598.059 626.316 591.887 c
626.316 585.715 631.328 580.703 637.5 580.703 c
643.672 580.703 648.684 585.715 648.684 591.887 c
f
648.684 757.148 m
648.684 763.324 643.672 768.332 637.5 768.332 c
631.328 768.332 626.316 763.324 626.316 757.148 c
626.316 750.977 631.328 745.969 637.5 745.969 c
643.672 745.969 648.684 750.977 648.684 757.148 c
f
648.684 744.438 m
648.684 750.609 643.672 755.621 637.5 755.621 c
631.328 755.621 626.316 750.609 626.316 744.438 c
626.316 738.266 631.328 733.254 637.5 733.254 c
643.672 733.254 648.684 738.266 648.684 744.438 c
f
648.684 447.813 m
648.684 453.984 643.672 458.996 637.5 458.996 c
631.328 458.996 626.316 453.984 626.316 447.813 c
626.316 441.641 631.328 436.629 637.5 436.629 c
643.672 436.629 648.684 441.641 648.684 447.813 c
f
648.684 418.148 m
648.684 424.324 643.672 429.332 637.5 429.332 c
631.328 429.332 626.316 424.324 626.316 418.148 c
626.316 411.977 631.328 406.969 637.5 406.969 c
643.672 406.969 648.684 411.977 648.684 418.148 c
f
648.684 541.039 m
648.684 547.211 643.672 552.219 637.5 552.219 c
631.328 552.219 626.316 547.211 626.316 541.039 c
626.316 534.863 631.328 529.855 637.5 529.855 c
643.672 529.855 648.684 534.863 648.684 541.039 c
f
648.684 837.664 m
648.684 843.836 643.672 848.844 637.5 848.844 c
631.328 848.844 626.316 843.836 626.316 837.664 c
626.316 831.488 631.328 826.48 637.5 826.48 c
643.672 826.48 648.684 831.488 648.684 837.664 c
f
648.684 608.836 m
648.684 615.012 643.672 620.02 637.5 620.02 c
631.328 620.02 626.316 615.012 626.316 608.836 c
626.316 602.664 631.328 597.656 637.5 597.656 c
643.672 597.656 648.684 602.664 648.684 608.836 c
f
648.684 494.426 m
648.684 500.598 643.672 505.609 637.5 505.609 c
631.328 505.609 626.316 500.598 626.316 494.426 c
626.316 488.254 631.328 483.242 637.5 483.242 c
643.672 483.242 648.684 488.254 648.684 494.426 c
f
648.684 714.773 m
648.684 720.949 643.672 725.957 637.5 725.957 c
631.328 725.957 626.316 720.949 626.316 714.773 c
626.316 708.602 631.328 703.594 637.5 703.594 c
643.672 703.594 648.684 708.602 648.684 714.773 c
f
648.684 570.699 m
648.684 576.871 643.672 581.883 637.5 581.883 c
631.328 581.883 626.316 576.871 626.316 570.699 c
626.316 564.527 631.328 559.516 637.5 559.516 c
643.672 559.516 648.684 564.527 648.684 570.699 c
f
648.684 507.137 m
648.684 513.309 643.672 518.32 637.5 518.32 c
631.328 518.32 626.316 513.309 626.316 507.137 c
626.316 500.965 631.328 495.953 637.5 495.953 c
643.672 495.953 648.684 500.965 648.684 507.137 c
f
648.684 532.563 m
648.684 538.734 643.672 543.746 637.5 543.746 c
631.328 543.746 626.316 538.734 626.316 532.563 c
626.316 526.391 631.328 521.379 637.5 521.379 c
643.672 521.379 648.684 526.391 648.684 532.563 c
f
9.9975 w
0 J
/DeviceGray {} CS
[0] SC
277.5 679.023 m
277.5 647.23 l
S
277.5 679.023 m
277.5 710.816 l
S
/DeviceGray {} cs
[0] sc
297.504 679.02 m
297.504 667.973 288.547 659.02 277.5 659.02 c
266.453 659.02 257.496 667.973 257.496 679.02 c
257.496 690.07 266.453 699.023 277.5 699.023 c
288.547 699.023 297.504 690.07 297.504 679.02 c
f
367.5 211.57 m
367.5 201.078 l
S
367.5 211.57 m
367.5 222.063 l
S
387.504 211.57 m
387.504 200.523 378.547 191.57 367.5 191.57 c
356.453 191.57 347.496 200.523 347.496 211.57 c
347.496 222.621 356.453 231.574 367.5 231.574 c
378.547 231.574 387.504 222.621 387.504 211.57 c
f
457.5 174.707 m
457.5 168.137 l
S
457.5 174.707 m
457.5 181.277 l
S
477.504 174.707 m
477.504 163.656 468.547 154.703 457.5 154.703 c
446.453 154.703 437.496 163.656 437.496 174.707 c
437.496 185.754 446.453 194.707 457.5 194.707 c
468.547 194.707 477.504 185.754 477.504 174.707 c
f
547.5 367.602 m
547.5 336.301 l
S
547.5 367.602 m
547.5 398.906 l
S
567.504 367.602 m
567.504 356.555 558.547 347.602 547.5 347.602 c
536.453 347.602 527.496 356.555 527.496 367.602 c
527.496 378.648 536.453 387.605 547.5 387.605 c
558.547 387.605 567.504 378.648 567.504 367.602 c
f
637.5 582.355 m
637.5 551.523 l
S
637.5 582.355 m
637.5 613.188 l
S
657.504 582.352 m
657.504 571.305 648.547 562.352 637.5 562.352 c
626.453 562.352 617.496 571.305 617.496 582.352 c
617.496 593.402 626.453 602.355 637.5 602.355 c
648.547 602.355 657.504 593.402 657.504 582.352 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font TAHNNA+Helvetica
%%EOF
