%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.46.0 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.4.0.813654 \\(R2018a\\). Operating System: Windows 7)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 165 124
%%HiResBoundingBox: 0 0 165 124
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font BHAWUV+Helvetica
%!FontType1-1.0: BHAWUV+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /BHAWUV+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 617 729] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 80 /P put
dup 114 /r put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB95BBAF93C4ECFAF3B5207C1B0A3EB057CD4465C3346D40BF43A7E9DC
85E30DEBA8499D8FAABC2CFE9FDD8D12B911B9D4AB7ED5B1373A70F9EAD42A45
7E8D8D78E6F1115BEBD09AB300C4B628677416866DCCB8C91CC552421FC49F83
577FD1E2C7ECB4DB1ACEF374BC74E1C6ABBC589945D68F5EE49FAAF75A1A2181
C016C9D5B411431826A343A18A3F90AAA3F95F0961E131B97B4938C56DC7ECF6
0FFE7C16C4698EB1328D187916312F767819F6D4884F1C3A9B3D91BA3EA5CE34
B0D6D649336DA71051D1EFC49F838E388CEBA653301D38D992F13E8B3F1CBBA4
B00DBB46ADF62806C175780B579D45BEE496F5545E181F5EB33AA19323310ADA
9FFDF1A12F8060DB08D5F2F998E640A7587BAB5120214D00D8E9AA0A4CEC16A1
9D9DA6945029674728FD33CE13CC443E573D113AF87EA0BC82066C7680AC4C31
6541FE60C318A772F89584E91A186BC2274FC28B77CF6DF89C6244C36C886710
808B95E94038390DCC8AB67E9C6849A0F0123677B02B33E7D94BC77764C7CB7B
6AE84C399F0F3247BF9116C04452914A3D9D4AFFBD363FF47A0276B30E4871F9
44CA3B72A2AB7F822435D18DAFC5A772EC4713B575F4DB7D011E8C5ADC1FA0EA
0DFD2C27F4528F53074340AD0AD82D25C7F2B44F3F944B7B9C33774219585FF8
A7887C3E6908D5FFD987F2550F442E8632898A433653562D112417EE7E81832F
C9515625A21146C149C09724451DCE734C50B0118DCC14094BC15DF33B660EE8
77A0613EB3213E63DD310960B4729EA2D048BA016AF3070642F7040E60FE8135
B0C0D61B11C647683222D6A2A70BF57CFE00EA68030559F113430F3C0107103F
E9745855BD64CA507E701B4739EB4CDB1032A01D9CFAE0A39C6EC17EEF905C28
043539CA36BFCCAF247C1A392DBD1FB4E612094CF005579A20042D899190B72B
A40B280261937CE78BC35523F00D8DC80E048413922F9F98CD332DFE78AAB5BE
66E8A97CD25069A294FA16C2FD7238F73CF23A8CE5B388A3E98ADF3FEEF847CE
C8FB6D710478ECB22DF710F3B6F6472337FE7B9DDDF320EFBED4A3CE77BE8921
919CB54C5A8738ED748DE87818E01C7663BB56F77680A4F9ED4691FDFEE717FC
71B5D3303824C6B3C9A39AFABB3A86D68CAA060433D90529B970C152F47C5023
E7EB07FC39EB5948FAA3499D60BE573C38A38641930334B5BAE24F6B26282C72
EFA3B15D2B4D072CDA828F82FD5641B028B3DEE350AB2A01B9CD6434E64DCAC2
919970913E9F698068D904105BDFED4F885D01E71737994900624C62CF807255
F6F79BC9F15B7AA63AABC1BF04B73825ADF1774AC9D2AD7035367FDC97D50CD0
63A227868D5B0450341B8B4014516F74BC1688B717E748ADA79842F1B619D109
52AA53EF36002F0A2E01ECD4F8D399A101B7D34734975C9395AA5C46B048F407
B95E9A0DB4C8B448F2CB413E30F50FAFB51DD1A9F67A16DA52B2314607A6D238
88CF1D41EB3E06EEA5644DF610654A9136ABC48A0568267F14E92A39CF733929
58513DF7AC8A6F647DE38FCE98165A87BED353F6AE10483952A840D46073819E
EED2C9B5BC0C663416587BF2A784A4A2B5ED1746AA30DEB71D46E3F99243D217
B4D8F05BFE29A8AA127E9210B3659C1EF858A4B29C57398F872025EAAB362F66
CE7BEBB3FD73C12B5878DD9359FB8767853BA73E97B635A8A402E15D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /BHAWUV+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 165 124 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
-30 0.003906 1800 1296 re
f
-30 0.003906 1800 1296 re
f
202.5 142.34 1395 1056.27 re
f
4.9996 w
1 j
/DeviceGray {} CS
[0.1489] SC
q
[1.00058 0 0 -0.99942 0 0] cm
202.383 -142.422 m
1596.57 -142.422 l
S
Q
/DeviceGray {} cs
[0] sc
282.504 231.598 m
242.4962 231.598 l
242.4962 142.3402 l
282.504 142.3402 l
282.504 231.598 l
h
457.5 150.258 m
417.5039 150.258 l
417.5039 142.34003 l
457.5 142.34003 l
457.5 150.258 l
h
632.496 150.258 m
592.4999 150.258 l
592.4999 142.34003 l
632.496 142.34003 l
632.496 150.258 l
h
982.5 142.863 m
942.5039 142.863 l
942.5039 142.339562 l
982.5 142.339562 l
982.5 142.863 l
h
1157.5 142.863 m
1117.5039 142.863 l
1117.5039 142.339562 l
1157.5 142.339562 l
1157.5 142.863 l
h
1332.5 155.016 m
1292.4922 155.016 l
1292.4922 142.3402 l
1332.5 142.3402 l
1332.5 155.016 l
h
1507.5 152.902 m
1467.5039 152.902 l
1467.5039 142.3395 l
1507.5 142.3395 l
1507.5 152.902 l
h
f
/DeviceGray {} CS
[0] SC
q
[1.00058 0 0 -0.99942 0 0] cm
242.355 -231.732 39.985 89.31 re
S
Q
q
[1.00058 0 0 -0.99942 0 0] cm
417.262 -150.345 39.973 7.923 re
S
Q
q
[1.00058 0 0 -0.99942 0 0] cm
592.156 -150.345 39.973 7.923 re
S
Q
q
[1.00058 0 0 -0.99942 0 0] cm
767.051 -142.422 39.985 0 re
S
Q
q
[1.00058 0 0 -0.99942 0 0] cm
941.957 -142.946 39.973 0.524 re
S
Q
q
[1.00058 0 0 -0.99942 0 0] cm
1116.85 -142.946 39.97 0.524 re
S
Q
q
[1.00058 0 0 -0.99942 0 0] cm
1291.75 -155.106 39.98 12.684 re
S
Q
q
[1.00058 0 0 -0.99942 0 0] cm
1466.65 -152.991 39.98 10.569 re
S
Q
/DeviceRGB {} cs
[0 0 1] sc
332.496 1062.36 m
292.4999 1062.36 l
292.4999 142.344 l
332.496 142.344 l
332.496 1062.36 l
h
507.504 159.238 m
467.4962 159.238 l
467.4962 142.3396 l
507.504 142.3396 l
507.504 159.238 l
h
682.5 147.621 m
642.5039 147.621 l
642.5039 142.33975 l
682.5 142.33975 l
682.5 147.621 l
h
857.496 142.863 m
817.4999 142.863 l
817.4999 142.339562 l
857.496 142.339562 l
857.496 142.863 l
h
1032.5 145.508 m
992.4922 145.508 l
992.4922 142.34003 l
1032.5 142.34003 l
1032.5 145.508 l
h
1207.5 194.098 m
1167.5039 194.098 l
1167.5039 142.3402 l
1207.5 142.3402 l
1207.5 194.098 l
h
1382.5 176.672 m
1342.5039 176.672 l
1342.5039 142.34 l
1382.5 142.34 l
1382.5 176.672 l
h
1557.5 144.977 m
1517.4922 144.977 l
1517.4922 142.34028 l
1557.5 142.34028 l
1557.5 144.977 l
h
f
q
[1.00058 0 0 -0.99942 0 0] cm
292.33 -1062.97 39.973 920.548 re
S
Q
q
[1.00058 0 0 -0.99942 0 0] cm
467.225 -159.331 39.985 16.909 re
S
Q
q
[1.00058 0 0 -0.99942 0 0] cm
642.131 -147.707 39.973 5.285 re
S
Q
q
[1.00058 0 0 -0.99942 0 0] cm
817.026 -142.946 39.973 0.524 re
S
Q
q
[1.00058 0 0 -0.99942 0 0] cm
991.92 -145.592 39.99 3.17 re
S
Q
q
[1.00058 0 0 -0.99942 0 0] cm
1166.83 -194.21 39.97 51.788 re
S
Q
q
[1.00058 0 0 -0.99942 0 0] cm
1341.72 -176.774 39.97 34.352 re
S
Q
q
[1.00058 0 0 -0.99942 0 0] cm
1516.62 -145.061 39.98 2.639 re
S
Q
7.49565 w
2 J
/DeviceGray {} CS
[0.1489] SC
q
[1.00058 0 0 -0.99942 0 0] cm
202.383 -142.422 m
1596.57 -142.422 l
S
Q
q
[1.00058 0 0 -0.99942 0 0] cm
287.329 -142.422 m
287.329 -128.481 l
S
Q
q
[1.00058 0 0 -0.99942 0 0] cm
462.236 -142.422 m
462.236 -128.481 l
S
Q
q
[1.00058 0 0 -0.99942 0 0] cm
637.13 -142.422 m
637.13 -128.481 l
S
Q
q
[1.00058 0 0 -0.99942 0 0] cm
812.025 -142.422 m
812.025 -128.481 l
S
Q
q
[1.00058 0 0 -0.99942 0 0] cm
986.931 -142.422 m
986.931 -128.481 l
S
Q
q
[1.00058 0 0 -0.99942 0 0] cm
1161.83 -142.422 m
1161.83 -128.481 l
S
Q
q
[1.00058 0 0 -0.99942 0 0] cm
1336.72 -142.422 m
1336.72 -128.481 l
S
Q
q
[1.00058 0 0 -0.99942 0 0] cm
1511.63 -142.422 m
1511.63 -128.481 l
S
Q
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1.00116 0 0 1 19.375 4.69961] Tm
0 0 Td
/F8_0 6.99163 Tf
(P2ry1)
[4.663417
0
3.887346
0
2.328213
0
3.495815
0
3.887346
0] Tj
111.911 TJm
(P2ry2)
[4.663417
0
3.887346
0
2.328213
0
3.495815
0
3.887346
0] Tj
111.911 TJm
(P2ry4)
[4.663417
0
3.887346
0
2.328213
0
3.495815
0
3.887346
0] Tj
111.911 TJm
(P2ry6)
[4.663417
0
3.887346
0
2.328213
0
3.495815
0
3.887346
0] Tj
379.778 TJm
(P2ry10)
[4.663417
0
3.887346
0
2.328213
0
3.495815
0
3.887346
0
3.887346
0] Tj
667.911 TJm
(P2ry12)
[4.663417
0
3.887346
0
2.328213
0
3.495815
0
3.887346
0
3.887346
0] Tj
667.911 TJm
(P2ry13)
[4.663417
0
3.887346
0
2.328213
0
3.495815
0
3.887346
0
3.887346
0] Tj
667.911 TJm
(P2ry14)
[4.663417
0
3.887346
0
2.328213
0
3.495815
0
3.887346
0
3.887346
0] Tj
Q
q
[1.00058 0 0 -0.99942 0 0] cm
202.383 -142.422 m
202.383 -1199.31 l
S
Q
q
[1.00058 0 0 -0.99942 0 0] cm
202.383 -142.422 m
188.441 -142.422 l
S
Q
q
[1.00058 0 0 -0.99942 0 0] cm
202.383 -406.642 m
188.441 -406.642 l
S
Q
q
[1.00058 0 0 -0.99942 0 0] cm
202.383 -670.866 m
188.441 -670.866 l
S
Q
q
[1.00058 0 0 -0.99942 0 0] cm
202.383 -935.086 m
188.441 -935.086 l
S
Q
q
[1.00058 0 0 -0.99942 0 0] cm
202.383 -1199.31 m
188.441 -1199.31 l
S
Q
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1.00116 0 0 1 12.9551 11.6117] Tm
0 0 Td
/F8_0 6.99163 Tf
(0)
[3.887346
0] Tj
-7.4913 26.4066 Td
(500)
[3.887346
0
3.887346
0
3.887346
0] Tj
-11.23695 52.8136 Td
(1000)
[3.887346
0
3.887346
0
3.887346
0
3.887346
0] Tj
-11.23695 79.2206 Td
(1500)
[3.887346
0
3.887346
0
3.887346
0
3.887346
0] Tj
-11.23695 105.6276 Td
(2000)
[3.887346
0
3.887346
0
3.887346
0
3.887346
0] Tj
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font BHAWUV+Helvetica
%%EOF
