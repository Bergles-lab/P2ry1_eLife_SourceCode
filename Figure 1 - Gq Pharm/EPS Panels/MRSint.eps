%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.60.1 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.5.0.944444 \\(R2018b\\). Operating System: Windows 10)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 108 113
%%HiResBoundingBox: 0 0 108 113
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font NCXYOQ+Helvetica
%!FontType1-1.0: NCXYOQ+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /NCXYOQ+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 761 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 77 /M put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 97 /a put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 112 /p put
dup 114 /r put
dup 115 /s put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB9715CA72928BEE0164393313D2AF0707AE312143602591604078B3A1
7EEB1D3A78BDD38354EF4461106548CCC60CC8C59B11E2A5047375FC80FFA1CA
A9E26060BAB8A79A8A838C75CD1913A4BF8DA23A8C7ED8BF70C9E6A8027E4F7B
4C103CFAAD6DCA4C0AAE7BE95F8A80B326C26487DA148BD1B9B1DCB95B173DA2
81D838685716F6EF704AC0B178D750A16CE0CE98B766AD3F4253C8C9193D9522
56B762F582D69F8188C2F26015B145C49C768DE3A7631CF49234517CA2C45729
C835AA7024D58238431CE2E04E33B046E05310A0032E3F5AF434F001C7DABC87
EEA5E6AA459E45BA26828C51B841FE8F036BAF78517E863941B9ABC3976E7FB5
FBB757AA3B64B1396EA670D55482E2BC49E33BBDD5E878B6F946472934D9A643
255DAEA78EE7181D4C53427652975F25DD5D9E551E4AC70206ADC4BA551D6054
A3592DD21327EF14573645F4FED7BDD088083409AA72EFFF84B54EB424CE2E34
64CA065FE479DF3B9C57039ABDB37961510F55A6CC66DD2A4A3893130B866BBB
BF0FE5FF314746AB9F402D7F108A86E6B118F9270D87A052A348C7AECE4027BC
F7C964A912DC2E18BFE8369831D8173131E297B1CBE27E15440D767A2D8847F0
669570646DE9FA3D9EBD92033FECC05B2E95630923CD29EEB1BDEA45D8519901
7F20F1933045E990EF555F2B862411979D61567BAAA3D2E2DCBA57310C1ADC4C
36A60D960A1ED1A9F088E7004BA7513BD26A5FFFFBA3F44A75B08F0F4E4E6AC5
45CBD4F73EAA9E3C6DFBF406A7E14E5E416E44403B219F3DBBBF5A4C37811C50
B9CB0066AAA3DE5853D45BA0D75B6E4AC1A91836728E5F1B053819213763BE58
B47C42F04DF4C7341CDE71C15C0D22456F9A40CF011AE9F52181891413DB4780
BF8DA11CDD2C2DB5BCFA6181712492A658E013418E4E70812C46982E9C5D9C1F
122611233BB7ED3BF544E06170A9D25FA32ECC348D888E001D40F631E1FAD485
A93658DD0C12E303C74D81D8F2AD65CDB37435E14990D316A7BE81FBD641D9C4
1F613C5837D578F425211386286A81D3813FE42E3993465BDF53C82110000D67
03636B35903B4F19B0DC443B6C1A432D91980433D8609E474F172DFB63194244
D01C0C521D35EF389CE32F74D98B4BDEB9CB7FD01E8DE3CEA548F08870CA6A6C
6095E001AF36BF8B76ADA4D2439A51E5CC8FFFC71C2EA8777BE4BF7AA8E81603
EF9290BA80904937F9A853B0F43733F05B32869DF8AB01EB72F558D953DE701F
207B6F4385E251557106A3064B855F7F6E5196611A44670C6CDD11101322F896
8DCA16DF64445F7023A9B9B2B14DBAAC6F7551E31733615B42ACDCC72415FF3F
AE50195A2593B86A803662B5FF9C8E8032DFC7E60DFA56DC69846FE71DFCC605
66B7C01B705A435DDB5C9D3069D456C344ADE4747D2672A81C6B501A00EF63C8
223926B5FD7966640F93FA1E5D0886F6072E461B9BB4462736FF759F5111E35F
281F9582A33D77DCC7E5CA69050D11050150CE96134D7BD665D27AA18C4FCC3E
F8DF088695A044316C12F00100CCAF1F93E684111FA07385DC37E30FBAE745C0
492FD134A75D005F8528B5A1D9B1D54B7CA249232FD53AF3EEF996C7BC6A3A83
C6C76C30D842A2FE16BB53676C3D8128FDCF3FDB385B7CCBF010761C4A21B33D
2CDF7A4230905A37E20C721DE0EB1BD8D4D2A0173E19FA256297C5871F4548CF
76ECAED28632A18F4736893FEBD302D0E6B3372284DF0B8FC80ECBA294DBFDF9
68D0110A06D2B0DBA0CFEB53C04C7AE6BAB1B1964CD9499A2246AA4611EFBEBF
B7A891D2545C02E9CB705427FDC09253BE631116FD024C19DB20786A31D847E9
3FA8A64ADD546BF2E05385D9908843AE2C237DA925AAF1C5B6B59171B5DE4EB6
D8466EFBE6864F57D14A6CCC6284851FC5C1BDD2731434A194093FC29DFD971D
CCD1DE8290B5F0A7753AE35CF8CFF7AF29CF6C55FEAE62F9418CF419BFEB8360
817D2F39744A4A75660E67147A6E9921B11A232EB6461D1D6E1133973FF353EC
C5DEE5B053F626360A81D01AEEB184C3E90C5ED43560AA55CB3998AFBD694AAF
3087D859DDF562FAA31D4DC21519102E53B0F6327A0DDF2B3ECB1A07BEDFDF9A
4D2058E0E607E7F1B572CBAF2A879AC5CCFF9548502C2DD826536E6DF259366B
01FA32DFBACFA301F8EF84487C41CFC6FB689C50C1FEE98E02223BB1F6984147
703B0C90AE63D5AD1B6A6B0D899ECDA6E32C04441E49F863466C4D265B673EEE
48D2FDF64180BC27CCF64248CCAA2C1E026AA2431007D15D7C183223882ED7E7
B79F43AE5B41CBDF4D2C72BA57104A17E91F3E28B6C5E2DE5B5588AE91CE23FF
A28CCDA640A008B5BB780E3F168554BAB37646C04B24DE3BB99ED6C72962113A
ACFDCBD9B718A35072AB8F963A8BFC366B5855F714331288889D15B752EE63E2
36935F7870E7C9AAF671B03A505F26740DDC53B9176EB3BC8DE429295FDC609D
C69E7FA3971DE00F0F0FEA7A8D4EEE81C844A969A66C1F01970FB876D498B598
C774A87D7F82B075AEDB459D203AD1BF75D61CB6B428CDCF292805D913D251BC
D78D1EE8B01052359ACF588D856468F5D4D9F7482E27F3B43AB951924446DB64
DAD74AA1DA90C09E0D29CBDA95F15B8D7873B8AD841DABF1589C5A348428AAE5
6549DF5EF6E4410758D4AD32056874E304EC78421231FFC0C997B38E87A65B32
BE59EC2A86EB2EE238BBE896ED8DB4D1F2377B4A744EA129773882CB1514FD99
0DAD4FE332C1D0AFC4635E0EC30CB4EA6B937988C993F440599497ABE32745C6
01CBC81D04D4D835C16AE01C232773BFEEB0A14BA5FF0B5F87FB53BF7F5559E1
8186DD159FDCEB02DFA8FE8F5E7C9C6058825B691EB6A9FA46D19C18F9B7A0B2
AC2264A60AD0C3ECCF41C16589E0B4E7A25F06A7CE290C43F2F3A4AFCC6B1001
80881D1F2C40B40470B98C32AED36DB549DB861037D83881FC9951C4F9316ECB
29BB7C160A9DA068C9929FD762D1B80414A682758C8CE06198AE63C9EF02FDC5
BBEE6B8CC14FF411B726F8DBCC66685C9EBB6B47D9AEC13FE5417F2609E01F19
34A4B2065CE85DFCB8C5E5F7AF2434AE387230E5490E1C860C37F52473C36B43
0E3BEE3FF579149999284B26DB2F479A64FC59153C6CB4F0DF3F0D6AA780F99A
2B2C04BF5297253F8C40057B806EF927D99D4C45E171F89B9CD146EB68EEBB6A
E5DA5B15882E6112F3662DC14064521BF6EC8E9B2F2C223C5B1E3A0B0E149A7E
90D35459959B22E25B768077B2FDEBC8E0F88265BE435A34F3699717880D7B41
E18360035BA1D570444874BF03C6B1D33177872384B9FB5C810D5DEF64AC6A8F
E91460814191D49FA782DC5F11427890B8B9483E8DBC1136320ABCD73D9DC19E
A9B12FC528BAB471834D63702098EB81E50844FAB2BA89B0D1D1158564B34558
35F7E5544A7DB602E0BD4A5DD8C926DCD836E06F1D985854646E497ECA5ECC7D
86202C3A56F23E8C790FFCA5A197C388DF4607A4BDB0DB9CD9BE45595C824B9C
0657340A7FEE3EDD360852DCDDFBB277BCD56A7795221B2E0BE7B74A82C61FCB
D766619918B46CC410043F2456FEC90A19DE4CA6FEFBCEDEC5CF91BC646C40A6
5434D4420B3E2B9A6124F363300DF3D769C4B76B635480DBE0DE889730BFD365
26155894BE01C2C507D51DC418B7301A38FB6D60CB70FA0DB28F69E9A91DE81A
7F2F5955B9CDD9149475B5D40A7889F4E1E9809CA082DF5D7A01B536B7FF4C56
AFE8F8F33238665F3042208143120520117EA1A04393A190099501A6ED483384
5AAB6E57A44D12F0E4B52F278DD28A8838F69CB2F80679816901B212D845C772
DF4A3F1BB7FDB90498597E23FC7E3374D20FC1B8306F59E0FB54248A4C10EC50
8319D9636D51F82E33AF0603CD0608AF0DEB1541A624D32451F2F7BECC4BB2EA
50AA8A244C63371F037958C63E4BE5806B2B174277A30FD61EC9820F40DBA053
90018B6C0942E1779E1AEAA883A9BE3DF34654B833901340FDFC3582A51B833D
0E7A2A148CC9392CFD4B570B816BB07617E318CDF7929C636004C0A3CFF58C7E
4C92244338707BB4C6919CED5F9607BC1FAAC5ACFB49ED776BBD5755D46BB037
3333D2837CF7D92B79A90F1C78A8D80AFA1E08B6B7FC3A14E91D19C117547BEA
90FB17256492AB2179ECEFBE63842A5783568E6A726877CBE1B4998714AE363C
B86AE6FBB1E7119078F5F0773FB97C99300A2D2331ACFBC96B1276496DDCCF97
EE1AD5C2A01527D4ABD0981296D1A4F7BC192DF65F5FAFAC1556CBD06F3CCF32
12229FB2B435AA6B72DED1FDFCF0F4BF9121EA410517A33CB4CD3470E9C81AEC
33A784C3C76A0CBAE54C374D65DEB0BC7A6B65FF1798B01EFCF7A0151674521E
43E4709A0B78EF0F6AC336513C8F419F1BC8E6DB8DED662C9E2944FC43E5936E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /NCXYOQ+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 108 113 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
10 10.0039 1152 1152 re
f
10 10.0039 1152 1152 re
f
256.855 294.262 792.934 777.973 re
f
7.4805 w
2 J
1 j
/DeviceGray {} CS
[0] SC
256.855 294.262 m
1049.79 294.262 l
S
426.77 294.262 m
426.77 286.332 l
S
653.324 294.262 m
653.324 286.332 l
S
879.879 294.262 m
879.879 286.332 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0.707107 0.707107 -0.707107 0.707107 28.3957 3.43398] Tm
0 0 Td
/F8_0 6.98153 Tf
(Baseline)
[4.656681
0
3.881731
0
3.490765
0
3.881731
0
1.5499
0
1.5499
0
3.881731
0
3.881731
0] Tj
27.2405 -16.0196 Td
(MRS)
[5.815614
0
5.040665
0
4.656681
0] Tj
30.54319 -32.0392 Td
(+PPADS)
[4.077214
0
4.656681
0
4.656681
0
4.656681
0
5.040665
0
4.656681
0] Tj
Q
256.855 294.262 m
256.855 1072.23 l
S
256.855 294.262 m
248.926 294.262 l
S
256.855 488.754 m
248.926 488.754 l
S
256.855 683.25 m
248.926 683.25 l
S
256.855 877.742 m
248.926 877.742 l
S
256.855 1072.23 m
248.926 1072.23 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 19.0082 26.8078] Tm
0 0 Td
/F8_0 6.98155 Tf
(0)
[3.881742
0] Tj
-7.48047 19.4492 Td
(100)
[3.881742
0
3.881742
0
3.881742
0] Tj
-7.48047 38.8988 Td
(200)
[3.881742
0
3.881742
0
3.881742
0] Tj
-7.48047 58.348 Td
(300)
[3.881742
0
3.881742
0
3.881742
0] Tj
-7.48047 77.7972 Td
(400)
[3.881742
0
3.881742
0
3.881742
0] Tj
[0 1 -1 0 8.28594 25.6859] Tm
0 0 Td
/F8_0 7.97945 Tf
(Charge Transfer \(-pA*s\))
[5.761163
0
4.436574
0
4.436574
0
2.657157
0
4.436574
0
4.436574
0
2.218287
0
4.875444
0
2.657157
0
4.436574
0
4.436574
0
3.989725
0
2.218287
0
4.436574
0
2.657157
0
2.218287
0
2.657157
0
2.657157
0
4.436574
0
5.322293
0
3.104006
0
3.989725
0
2.657157
0] Tj
Q
4.98949 w
0 J
/DeviceGray {} CS
[0.7012] SC
426.77 409.949 m
653.324 319.098 l
879.879 324.324 l
S
426.77 443.305 m
653.324 306.648 l
879.879 307.121 l
S
426.77 507.031 m
653.324 335.449 l
879.879 317.879 l
S
426.77 512.633 m
653.324 313.148 l
879.879 309.82 l
S
426.77 645.957 m
653.324 324.945 l
879.879 311.887 l
S
426.77 729.723 m
653.324 345.383 l
879.879 322.125 l
S
426.77 894.273 m
653.324 364.848 l
879.879 376.602 l
S
426.77 755.75 m
653.324 350.289 l
879.879 349.73 l
S
426.77 659.477 m
653.324 313.57 l
879.879 316.008 l
S
9.97151 w
/DeviceGray {} CS
[0] SC
426.77 617.563 m
426.77 563.883 l
S
426.77 617.563 m
426.77 671.25 l
S
451.703 617.563 m
451.703 603.793 440.543 592.629 426.773 592.629 c
413 592.629 401.84 603.793 401.84 617.563 c
401.84 631.336 413 642.496 426.773 642.496 c
440.543 642.496 451.703 631.336 451.703 617.563 c
f
/DeviceRGB {} CS
[1 0 0] SC
653.324 330.379 m
653.324 323.781 l
S
653.324 330.379 m
653.324 336.977 l
S
/DeviceRGB {} cs
[1 0 0] sc
678.258 330.375 m
678.258 316.602 667.098 305.441 653.324 305.441 c
639.555 305.441 628.391 316.602 628.391 330.375 c
628.391 344.145 639.555 355.305 653.324 355.305 c
667.098 355.305 678.258 344.145 678.258 330.375 c
f
/DeviceGray {} CS
[0] SC
879.879 326.168 m
879.879 318.598 l
S
879.879 326.168 m
879.879 333.738 l
S
/DeviceGray {} cs
[0] sc
904.809 326.164 m
904.809 312.391 893.648 301.23 879.879 301.23 c
866.105 301.23 854.945 312.391 854.945 326.164 c
854.945 339.934 866.105 351.098 879.879 351.098 c
893.648 351.098 904.809 339.934 904.809 326.164 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font NCXYOQ+Helvetica
%%EOF
