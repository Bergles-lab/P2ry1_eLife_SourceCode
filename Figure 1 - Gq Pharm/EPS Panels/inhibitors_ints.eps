%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.60.1 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.4.0.813654 \\(R2018a\\). Operating System: Windows 7)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 83 102
%%HiResBoundingBox: 0 0 83 102
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font BOIMVJ+Helvetica
%!FontType1-1.0: BOIMVJ+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /BOIMVJ+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 761 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 55 /seven put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 73 /I put
dup 77 /M put
dup 79 /O put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 97 /a put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB9711908C6AFA4FACEB7F0C52170F6E7D98FB1099872C199438098C7F
F3E526DCA037CF7C8499EFCE5CEC4787D7C432E0BFB65C4DB38FE3E100E6D1AD
17B71D88E7465CA5AE3C8E84FE009A5958E94A26B87DE8DFDE434400D94E3E0D
6E42CB861975884A31C9190FADB15095022144D112775CF8CF6E676C5826C82F
D2A0F8F15A33364408754EDE3B5E83F79A3C26B5CCB855875D1915F535EA20D7
1E758B6B640B459ACE5586BED29119ABBB6FCF64820FA096DBBDC429A0A15AAD
074C263F67CC7FBE9242FB2CD060D41F6DCB3A9F9A9CAF32A14D77EBF76E8443
7AA6CD5CEB74441151278732F42509E7401D6B8B15C0E4DD6EA2A24DDC963D21
0F014AE6FC770219565571D471F5EF4700EB8BC628A4BFEEB08F3F5767FB38AF
D880B710E2A21B36D576B56867151467F44A4C79DAAFA5A54B658E8F5271498E
43B781F8162F8FC1C4087C1C0A1E996245F6E1A601A70981BD3928DFFFB9DAA6
F8BD9A51736C6AD4B6778E4818405FD7D214FE016EC2993769E2F357A2995D8A
0C32A693C16CDA3463669945F0B6414E5AEE58FB2B1EA46B3526DCB3016E3C25
1F67B6423CF000C52054E360658D8B96833EADEFD0354E7636177A9D2CF7B6C8
3C2D6FB4B09AFCF5E00AC0C5236185EC9396EE209064434703923408CF6C24D6
BE528A8335364945ABD5727D77F16D775D749A04BCF7914D2C6D29F111765635
1FE9B505DD068324305FCA41FA89B4A383E12E556D96BFD104804938FB699643
BD8934F515EF36F9BE4F3983F146EAF015FF9A5DF1C4FCA06EA45BA3233E9684
372E94D60EE1C3504D31C879B856067DF983ABFF0F5F1E0EC7257368F246D756
1151C7A6AA36ABF365C6B2EF8FDDAB64AABD398424CC2E6EEDA162C7F80B35CA
967C3C6A666B4204553C4A45DB597704E32D12D9BBD9397B73EAA6FD74DC13B5
EB1CDE301F1B6E84370F77F42782A8F28563E1F21677CCCF16E7655BDEAC070E
816ACD32700124C8954A554E32381116A8A880BAF71F18ECBEF52F4AB6206CC9
C419F1B9F83286BA8953811F0D615CF4BCEE7B9A7E145DED399003E04061779F
602436AAF2045C353BD8A8A644B276BFEFCE9D6B5F10219D1E4463EE45375BAA
AD09B2F29CC5B1BE8F3FD45EAC639E0F8AB200C99A007509B01811BFF2AB95A8
74F771E6CB5E85219001A6E2D3BFCCA9DFC7204E60AC6CB1AC37D1820A95FBCB
A4E055A31DB805E56CEE8C81F9B78BE8AD3F34168E81946CAD134DB08AB9F6C1
2EA1C7CC72C8993272DAFF99701693A2A9BC0CE8631452D7E287677A007A9A44
F878C7289D956316BB8A097880A347059ACA6FA010C91AFC972E5CB1847ED5AC
3FF8B074E9789C75229274D0E141C6AF447D17011C8DFDC6F5B9B1766A5A684D
72D1FBB1F10C756B1D489F144BFC4D3982B0AD16ED1CEBFE6CBA1ACE2E72D174
2BC1D46D6AF3073F3C1A27D0FE9E8C85642729BD19F3A5AB104EC0C12484C734
35090ABBFBB0C02B647DA7179BA138B23A6A62EC05DC4ED9A78F00E09CDA5B50
989F0966B9232D2A55C827615FAB0D24512C480F5C9ABF3E8466EBA3B32AE9DE
F1A6BDAB8A289D6D2D84884DEBEB4F03DAE51FEC625181DAEFABDF53DC94C5B9
60029EFD920164E6A03A000ADD4F0D627A921089F8B6DFEA93BE28C2BED7B081
7D025094D06B50EA3736BEEF93A674A6998044120FC3495D3E05DBAD910A1AF2
03D6865C9184FDF9C521EC61739878718EA09660F43121C8A8F84A1ECC09F1C5
281301F34B32F022F8C30466BCD5DDB59817146E6CD2FAB9BE5B9B1C306B699A
0510588033DA32750677BDB4405B6695C284B9F272556668EDE65FF72AB2CC6B
F61C959D415EE76FEA28FE91A405F56AD3B15D58D73A9E84B2C27FB1921AC562
225A4CCB9D0A0F0FB9A1BA268F22BA1C0D49B9CA17E3309B6E6FF46F2091E6BB
455C2C300F6A017DD6AB9723A7AEA4C1F5744A2F594F6F690190754202ACB47D
A3CE8943E6426A1BF7C6B1282D7814C2A02316BF78989F6726D37D5A448FE127
8C11661471689678A771A7990FC81F8595E3A5817079135CE4C0C8D8DDE2A1DE
FFF7BFC18F6380CB971FA15A9675731A5120E65B5238311935C45DDBCEE0BD61
CE3BDA39DD11DA550E07E783F16F41152B73D2E066D33CDB34FE72DF7A74633D
F3DE180C3D95A7DCDFA5CF704437B5C45901D2D91E508D090CB381D1E2090C6A
79E245350397D050D4BBBB45C98C1EA75B4C5673D9DA3E4EF210DDF7D93C92B7
4D58ECBD1EF96813ED5A3E000B5A6ECF28C59B9B3009F1BB259F207A662A4655
CC826B942F0166695D58ECE908E8079805457B1A49086CE306E66CF7CFE1C4A4
652F0DD5E1DA97BB087347B52C7B3084C4587DF29721BFFE8A0FD0C7918B3CC2
FF6199FFB29485E98C489E8C4B13E92BFB18F4ACDAACDF4674A12035E986CD26
10AA0824CBBA074A373F05527861B05CFA0CCE5419EDA602353E2022C8C3057D
F4E88B530846A2784A16E79E6B27A5175CF0897B8321155487FFBFD16A1BE106
5388F7D31DA91C479CCC2AA4A4D8B8D31A208017CDA7825583D7E4301FB1AB53
F77128EADE8DF10C491010232419F6ABAEF23D0AC042A085539324D9F1EB92C0
42F6800D039E584656262A2D1C1102D8F7E481D6289CB5969139B310EB8E0EEA
A77C5E4FB75307BDEF93CEED2D09E91BFF47DAFB600ADAE9BAEBEB207CAA552F
FFF040C9AD529C8DD038D4F9B1D2593358CE11A6F476680F344B776731E36C5E
9B30862A6B43AD9A81D8058130CA400BF7B7E7BC4FCB415F3C71D5D6D79E7F27
53A6E87C1DB27561EC9A145DA20C412351B103BD6D395BFC0A598639C1634815
6949017B3E22CFC2CF9A986CE2F93E2ACB7A3C2225D36FBF42ABCDAFAD5C3B43
604698F90F54778D6F9D966D07992C0D63FB53A992E1DCEF679E235CAB10A722
2EBB6EAE9A4D54CEB1A243FA4A6420C410D1DBB5CEC89C1CAF79D841FC3C96F7
94AF3CDAE7BBDE98A70744158479690A508B6FF0C98A2EFCE8F8A2B2172A6645
19698C5CBDEDE123D20F46F78B2FF176089C1C7301FDF2470547FDE577828DFF
1C094F155E41B706DC64717CFCCEE20C43B9D9C6B1DAEFD7E4E460CA5E4805C4
CEFCCEEB3528575AB2E8CA82708678EF0162436428CC184CD590E8E7E4F96400
5C99D1B3649C1E2BBDC8A163D6DBC2BB552B948AB220194D53AAD5C9B34FDEBE
3C28C447D28C682D06FC20320C03DE9E2B071D38D1D336AA0EACC508BB6B9D8E
66C3914CF7960B6651B4F43AB29A4F752CA5787F798DEEEA5563D00F0EED901F
DF98F7413ABB8604515C2A9AE82558519C57FA5F0EFE1E34AF55620581749275
B822A06C34FC41A675A23CBB89AFABCD7595029B671A5023CDDFB45A5BC19E25
5182846A6963FFC791B653A8C8A2AEF678C1F3F0B4EC449E5573612B6FDBBA6E
65D058A65F1DD1A35BB85438A481331C5E55825984A440B7701286A038B2C7FE
603289B75655C924FF621AFEEE7716EA95CB69031609DFF1F1C798DC7A8048BA
950E5E0A79DE9B417E59FDC1B7391004EE19A52D873B82D19F534B07E299EDB7
E84B33A594DECE6C406C1DC51E1B5277E451FA111255232FA68C88F7342F2F90
3651509F9357AF05F340F977DCA2C22FA65FBF69CE1C86BF1C26AD774532E44B
4CCC5065367A8F4F1C21520B01A63EC2A19AC0ED69CB3EDB5F4F184568B56709
9618D380EE11CC216B68929E249C600A2D36E24B19721736C376745E01DE10B9
89AD08E32B242555571090925C85DA6BE1A85181C7D02D7AD0C68A5589A150EA
42BBC533F592C9616252FB2D25E905EA4F9596060DFBEDDA0EB2702456DB447B
86B56DE790872DF0F61F37B37B4F6E72F77FFA830CEC4BDB168DF381791D5434
F04CC0E7F2B21E3EE7AC2F94305A2A7468B7458CA69411A047CCCADB0F77BB32
CE4A91FCE37CA9810E8934990E2F75EDFCE0E0C2430BE58FF89EBF0271A271B8
5164CD87CA19685AC1AE607C88EC524F54E189E6114064365A74BEC31CF2F315
3E9B7ABE60F534F81AA7D0A142728F58B89FB32C7101CEEE6DB0662B63753D9E
D1EDC92B1D181B2B4ABEBED398B6F454C81860969A177025919CD87618168127
32D34DA0BD243EC0C4328132FE3BB6886FA625435000FB5264B1BC746914CD7D
98A913A4CBE386865C7021BDAF011D26E3BD24035A63FB6ED54C80D8F828726A
9037AC87BF8DB13F4417E69FB326324758784A3D463416A3A9B46D36AFE4C0AF
14AAC21535201067D2F9FBC1B6AF2871A725C2D99068F63C62B949BBE5F9EBB3
8F4360E4B3FF97B6DBDAEE528E4FF8BD2B11CD128003EAC036B5D8B03EE422BA
A844F1BE0ABC3B2E4C90AEC721145AE5AB6023A41DC2BB055442C7A157635C4D
5892F27A33D15FFECC9E8DB2C51650F27C49BEB06FBEF66411563332B29BDEF8
11AC5FF0ECC9C2CED71629CAAC062F7E338BA85EB70FDB72B001616B1C85BE0C
F6A778345D430DB767CCED187DAF03226532FE81C1B40364FDF6215C25926E1B
8EA29E01593622968F77F6EC3F5B78CC5CE6D531971EC1CB90FA40D6ED1F1F8A
BA1BE18F71687C8EFFF8948726D2B8146C4BA86DDAD6EECDFB0565050BC2CEDE
DB85290CA34E3C1A0ADDD631B24952A7D04CF6464E9F166B1EF2507301F38A7F
9931D8C36197691564F2D9F30F1CBFC3B062655A6555268EEB3DF82A0BD7CCE8
22B14D0CA9C7820A5C03A9E4BBD6B949502DB5743D730A3B26C3628E47F35DA7
32E32A0FD5C9630037940AB947761B6C9F6E7E254FD361A8CD677F3B6CED9300
268FFB5662D8287E2A5B5FFB97216C59443005B0873D4E88784192F852440C5D
C305119F3B0A24B85B81DB2248F27FF5ED4D54BA670BAB8CEF6A7D89C8FA5BCB
870A9FE86E4412DAA7B74D7122795F976F592BA8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /BOIMVJ+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 83 102 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
-50 10 870 1005 re
f
-50 10 870 1005 re
f
250 130 495 847.5 re
f
7.5 w
2 J
1 j
/DeviceGray {} CS
[0.1489] SC
250 130 m
745 130 l
S
317.5 130 m
317.5 121.563 l
S
407.5 130 m
407.5 121.563 l
S
497.5 130 m
497.5 121.563 l
S
587.5 130 m
587.5 121.563 l
S
677.5 130 m
677.5 121.563 l
S
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 8.875 4.00625] Tm
0 0 Td
/F8_0 6.99975 Tf
(DMSO Control)
[5.05382
0
5.830792
0
4.668833
0
5.445806
0
1.945931
0
5.05382
0
3.891861
0
3.891861
0
1.945931
0
2.330917
0
3.891861
0
1.553945
0] Tj
13.875 0 Td
(BAPTA-AM)
[4.668833
0
4.668833
0
4.668833
0
4.276847
0
4.668833
0
2.330917
0
4.668833
0
5.830792
0] Tj
20.625 0 Td
(Thapsigargin)
[4.276847
0
3.891861
0
3.891861
0
3.891861
0
3.499875
0
1.553945
0
3.891861
0
3.891861
0
2.330917
0
3.891861
0
1.553945
0
3.891861
0] Tj
37.5 0 Td
(U73122)
[5.05382
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0] Tj
2216.24 TJm
(U73343)
[5.05382
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0] Tj
Q
250 130 m
250 977.5 l
S
250 130 m
241.563 130 l
S
250 412.504 m
241.563 412.504 l
S
250 694.996 m
241.563 694.996 l
S
250 977.5 m
241.563 977.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 18.2563 10.375] Tm
0 0 Td
/F8_0 6.99975 Tf
(0)
[3.891861
0] Tj
-7.5 28.25 Td
(250)
[3.891861
0
3.891861
0
3.891861
0] Tj
-7.5 56.5 Td
(500)
[3.891861
0
3.891861
0
3.891861
0] Tj
-7.5 84.75 Td
(750)
[3.891861
0
3.891861
0
3.891861
0] Tj
[0 1 -1 0 7.50625 29.5] Tm
0 0 Td
/F8_0 7.70025 Tf
(Integral \(-pA*s\))
[2.14067
0
4.281339
0
2.14067
0
4.281339
0
4.281339
0
2.564183
0
4.281339
0
1.709456
0
2.14067
0
2.564183
0
2.564183
0
4.281339
0
5.136067
0
2.995397
0
3.850125
0
2.564183
0] Tj
Q
/DeviceGray {} cs
[0.7012] sc
328.684 738.934 m
328.684 745.105 323.672 750.113 317.5 750.113 c
311.328 750.113 306.316 745.105 306.316 738.934 c
306.316 732.758 311.328 727.75 317.5 727.75 c
323.672 727.75 328.684 732.758 328.684 738.934 c
f
328.684 647.063 m
328.684 653.234 323.672 658.246 317.5 658.246 c
311.328 658.246 306.316 653.234 306.316 647.063 c
306.316 640.891 311.328 635.879 317.5 635.879 c
323.672 635.879 328.684 640.891 328.684 647.063 c
f
328.684 400.25 m
328.684 406.422 323.672 411.43 317.5 411.43 c
311.328 411.43 306.316 406.422 306.316 400.25 c
306.316 394.078 311.328 389.066 317.5 389.066 c
323.672 389.066 328.684 394.078 328.684 400.25 c
f
328.684 847.785 m
328.684 853.957 323.672 858.965 317.5 858.965 c
311.328 858.965 306.316 853.957 306.316 847.785 c
306.316 841.609 311.328 836.602 317.5 836.602 c
323.672 836.602 328.684 841.609 328.684 847.785 c
f
328.684 698.648 m
328.684 704.82 323.672 709.832 317.5 709.832 c
311.328 709.832 306.316 704.82 306.316 698.648 c
306.316 692.477 311.328 687.465 317.5 687.465 c
323.672 687.465 328.684 692.477 328.684 698.648 c
f
328.684 254.938 m
328.684 261.109 323.672 266.121 317.5 266.121 c
311.328 266.121 306.316 261.109 306.316 254.938 c
306.316 248.766 311.328 243.758 317.5 243.758 c
323.672 243.758 328.684 248.766 328.684 254.938 c
f
328.684 422.789 m
328.684 428.961 323.672 433.973 317.5 433.973 c
311.328 433.973 306.316 428.961 306.316 422.789 c
306.316 416.617 311.328 411.605 317.5 411.605 c
323.672 411.605 328.684 416.617 328.684 422.789 c
f
328.684 363.699 m
328.684 369.871 323.672 374.883 317.5 374.883 c
311.328 374.883 306.316 369.871 306.316 363.699 c
306.316 357.527 311.328 352.516 317.5 352.516 c
323.672 352.516 328.684 357.527 328.684 363.699 c
f
328.684 328.879 m
328.684 335.051 323.672 340.063 317.5 340.063 c
311.328 340.063 306.316 335.051 306.316 328.879 c
306.316 322.707 311.328 317.695 317.5 317.695 c
323.672 317.695 328.684 322.707 328.684 328.879 c
f
328.684 328.895 m
328.684 335.066 323.672 340.078 317.5 340.078 c
311.328 340.078 306.316 335.066 306.316 328.895 c
306.316 322.723 311.328 317.711 317.5 317.711 c
323.672 317.711 328.684 322.723 328.684 328.895 c
f
328.684 352.785 m
328.684 358.961 323.672 363.969 317.5 363.969 c
311.328 363.969 306.316 358.961 306.316 352.785 c
306.316 346.613 311.328 341.605 317.5 341.605 c
323.672 341.605 328.684 346.613 328.684 352.785 c
f
328.684 321.836 m
328.684 328.008 323.672 333.02 317.5 333.02 c
311.328 333.02 306.316 328.008 306.316 321.836 c
306.316 315.664 311.328 310.656 317.5 310.656 c
323.672 310.656 328.684 315.664 328.684 321.836 c
f
328.684 184.461 m
328.684 190.633 323.672 195.645 317.5 195.645 c
311.328 195.645 306.316 190.633 306.316 184.461 c
306.316 178.289 311.328 173.277 317.5 173.277 c
323.672 173.277 328.684 178.289 328.684 184.461 c
f
328.684 476.277 m
328.684 482.449 323.672 487.457 317.5 487.457 c
311.328 487.457 306.316 482.449 306.316 476.277 c
306.316 470.105 311.328 465.094 317.5 465.094 c
323.672 465.094 328.684 470.105 328.684 476.277 c
f
328.684 378 m
328.684 384.172 323.672 389.18 317.5 389.18 c
311.328 389.18 306.316 384.172 306.316 378 c
306.316 371.824 311.328 366.816 317.5 366.816 c
323.672 366.816 328.684 371.824 328.684 378 c
f
328.684 551.051 m
328.684 557.223 323.672 562.23 317.5 562.23 c
311.328 562.23 306.316 557.223 306.316 551.051 c
306.316 544.875 311.328 539.867 317.5 539.867 c
323.672 539.867 328.684 544.875 328.684 551.051 c
f
418.684 159.762 m
418.684 165.934 413.672 170.945 407.5 170.945 c
401.328 170.945 396.316 165.934 396.316 159.762 c
396.316 153.59 401.328 148.578 407.5 148.578 c
413.672 148.578 418.684 153.59 418.684 159.762 c
f
418.684 142.168 m
418.684 148.34 413.672 153.352 407.5 153.352 c
401.328 153.352 396.316 148.34 396.316 142.168 c
396.316 135.996 401.328 130.984 407.5 130.984 c
413.672 130.984 418.684 135.996 418.684 142.168 c
f
418.684 143.168 m
418.684 149.34 413.672 154.352 407.5 154.352 c
401.328 154.352 396.316 149.34 396.316 143.168 c
396.316 136.996 401.328 131.984 407.5 131.984 c
413.672 131.984 418.684 136.996 418.684 143.168 c
f
418.684 140.727 m
418.684 146.898 413.672 151.91 407.5 151.91 c
401.328 151.91 396.316 146.898 396.316 140.727 c
396.316 134.555 401.328 129.543 407.5 129.543 c
413.672 129.543 418.684 134.555 418.684 140.727 c
f
418.684 143.094 m
418.684 149.27 413.672 154.277 407.5 154.277 c
401.328 154.277 396.316 149.27 396.316 143.094 c
396.316 136.922 401.328 131.914 407.5 131.914 c
413.672 131.914 418.684 136.922 418.684 143.094 c
f
418.684 152.281 m
418.684 158.453 413.672 163.465 407.5 163.465 c
401.328 163.465 396.316 158.453 396.316 152.281 c
396.316 146.109 401.328 141.098 407.5 141.098 c
413.672 141.098 418.684 146.109 418.684 152.281 c
f
418.684 144.703 m
418.684 150.875 413.672 155.887 407.5 155.887 c
401.328 155.887 396.316 150.875 396.316 144.703 c
396.316 138.531 401.328 133.523 407.5 133.523 c
413.672 133.523 418.684 138.531 418.684 144.703 c
f
418.684 166.977 m
418.684 173.148 413.672 178.16 407.5 178.16 c
401.328 178.16 396.316 173.148 396.316 166.977 c
396.316 160.805 401.328 155.793 407.5 155.793 c
413.672 155.793 418.684 160.805 418.684 166.977 c
f
418.684 141.773 m
418.684 147.949 413.672 152.957 407.5 152.957 c
401.328 152.957 396.316 147.949 396.316 141.773 c
396.316 135.602 401.328 130.594 407.5 130.594 c
413.672 130.594 418.684 135.602 418.684 141.773 c
f
418.684 143.965 m
418.684 150.141 413.672 155.148 407.5 155.148 c
401.328 155.148 396.316 150.141 396.316 143.965 c
396.316 137.793 401.328 132.785 407.5 132.785 c
413.672 132.785 418.684 137.793 418.684 143.965 c
f
418.684 139.379 m
418.684 145.551 413.672 150.559 407.5 150.559 c
401.328 150.559 396.316 145.551 396.316 139.379 c
396.316 133.207 401.328 128.195 407.5 128.195 c
413.672 128.195 418.684 133.207 418.684 139.379 c
f
418.684 179.676 m
418.684 185.848 413.672 190.855 407.5 190.855 c
401.328 190.855 396.316 185.848 396.316 179.676 c
396.316 173.504 401.328 168.492 407.5 168.492 c
413.672 168.492 418.684 173.504 418.684 179.676 c
f
418.684 142.043 m
418.684 148.219 413.672 153.227 407.5 153.227 c
401.328 153.227 396.316 148.219 396.316 142.043 c
396.316 135.871 401.328 130.863 407.5 130.863 c
413.672 130.863 418.684 135.871 418.684 142.043 c
f
418.684 154.742 m
418.684 160.918 413.672 165.926 407.5 165.926 c
401.328 165.926 396.316 160.918 396.316 154.742 c
396.316 148.57 401.328 143.563 407.5 143.563 c
413.672 143.563 418.684 148.57 418.684 154.742 c
f
418.684 161.652 m
418.684 167.824 413.672 172.836 407.5 172.836 c
401.328 172.836 396.316 167.824 396.316 161.652 c
396.316 155.48 401.328 150.469 407.5 150.469 c
413.672 150.469 418.684 155.48 418.684 161.652 c
f
418.684 208.148 m
418.684 214.32 413.672 219.332 407.5 219.332 c
401.328 219.332 396.316 214.32 396.316 208.148 c
396.316 201.977 401.328 196.969 407.5 196.969 c
413.672 196.969 418.684 201.977 418.684 208.148 c
f
508.684 136.668 m
508.684 142.84 503.672 147.852 497.5 147.852 c
491.328 147.852 486.316 142.84 486.316 136.668 c
486.316 130.496 491.328 125.484 497.5 125.484 c
503.672 125.484 508.684 130.496 508.684 136.668 c
f
508.684 139.813 m
508.684 145.984 503.672 150.996 497.5 150.996 c
491.328 150.996 486.316 145.984 486.316 139.813 c
486.316 133.641 491.328 128.629 497.5 128.629 c
503.672 128.629 508.684 133.641 508.684 139.813 c
f
508.684 144.063 m
508.684 150.234 503.672 155.246 497.5 155.246 c
491.328 155.246 486.316 150.234 486.316 144.063 c
486.316 137.891 491.328 132.879 497.5 132.879 c
503.672 132.879 508.684 137.891 508.684 144.063 c
f
508.684 145.25 m
508.684 151.422 503.672 156.434 497.5 156.434 c
491.328 156.434 486.316 151.422 486.316 145.25 c
486.316 139.078 491.328 134.066 497.5 134.066 c
503.672 134.066 508.684 139.078 508.684 145.25 c
f
508.684 136.313 m
508.684 142.488 503.672 147.496 497.5 147.496 c
491.328 147.496 486.316 142.488 486.316 136.313 c
486.316 130.141 491.328 125.133 497.5 125.133 c
503.672 125.133 508.684 130.141 508.684 136.313 c
f
508.684 141.027 m
508.684 147.199 503.672 152.207 497.5 152.207 c
491.328 152.207 486.316 147.199 486.316 141.027 c
486.316 134.855 491.328 129.844 497.5 129.844 c
503.672 129.844 508.684 134.855 508.684 141.027 c
f
508.684 160.16 m
508.684 166.336 503.672 171.344 497.5 171.344 c
491.328 171.344 486.316 166.336 486.316 160.16 c
486.316 153.988 491.328 148.98 497.5 148.98 c
503.672 148.98 508.684 153.988 508.684 160.16 c
f
508.684 159.281 m
508.684 165.453 503.672 170.465 497.5 170.465 c
491.328 170.465 486.316 165.453 486.316 159.281 c
486.316 153.109 491.328 148.098 497.5 148.098 c
503.672 148.098 508.684 153.109 508.684 159.281 c
f
508.684 149.66 m
508.684 155.832 503.672 160.844 497.5 160.844 c
491.328 160.844 486.316 155.832 486.316 149.66 c
486.316 143.488 491.328 138.477 497.5 138.477 c
503.672 138.477 508.684 143.488 508.684 149.66 c
f
508.684 154.324 m
508.684 160.496 503.672 165.504 497.5 165.504 c
491.328 165.504 486.316 160.496 486.316 154.324 c
486.316 148.152 491.328 143.141 497.5 143.141 c
503.672 143.141 508.684 148.152 508.684 154.324 c
f
508.684 138.789 m
508.684 144.961 503.672 149.973 497.5 149.973 c
491.328 149.973 486.316 144.961 486.316 138.789 c
486.316 132.617 491.328 127.609 497.5 127.609 c
503.672 127.609 508.684 132.617 508.684 138.789 c
f
508.684 147.988 m
508.684 154.16 503.672 159.172 497.5 159.172 c
491.328 159.172 486.316 154.16 486.316 147.988 c
486.316 141.816 491.328 136.805 497.5 136.805 c
503.672 136.805 508.684 141.816 508.684 147.988 c
f
508.684 152.172 m
508.684 158.344 503.672 163.355 497.5 163.355 c
491.328 163.355 486.316 158.344 486.316 152.172 c
486.316 146 491.328 140.988 497.5 140.988 c
503.672 140.988 508.684 146 508.684 152.172 c
f
508.684 142.16 m
508.684 148.332 503.672 153.344 497.5 153.344 c
491.328 153.344 486.316 148.332 486.316 142.16 c
486.316 135.988 491.328 130.977 497.5 130.977 c
503.672 130.977 508.684 135.988 508.684 142.16 c
f
508.684 149.141 m
508.684 155.313 503.672 160.32 497.5 160.32 c
491.328 160.32 486.316 155.313 486.316 149.141 c
486.316 142.969 491.328 137.957 497.5 137.957 c
503.672 137.957 508.684 142.969 508.684 149.141 c
f
508.684 145.52 m
508.684 151.691 503.672 156.703 497.5 156.703 c
491.328 156.703 486.316 151.691 486.316 145.52 c
486.316 139.348 491.328 134.34 497.5 134.34 c
503.672 134.34 508.684 139.348 508.684 145.52 c
f
508.684 136.219 m
508.684 142.395 503.672 147.402 497.5 147.402 c
491.328 147.402 486.316 142.395 486.316 136.219 c
486.316 130.047 491.328 125.039 497.5 125.039 c
503.672 125.039 508.684 130.047 508.684 136.219 c
f
508.684 140.25 m
508.684 146.422 503.672 151.43 497.5 151.43 c
491.328 151.43 486.316 146.422 486.316 140.25 c
486.316 134.078 491.328 129.066 497.5 129.066 c
503.672 129.066 508.684 134.078 508.684 140.25 c
f
508.684 143.41 m
508.684 149.582 503.672 154.59 497.5 154.59 c
491.328 154.59 486.316 149.582 486.316 143.41 c
486.316 137.238 491.328 132.227 497.5 132.227 c
503.672 132.227 508.684 137.238 508.684 143.41 c
f
508.684 150.863 m
508.684 157.035 503.672 162.047 497.5 162.047 c
491.328 162.047 486.316 157.035 486.316 150.863 c
486.316 144.691 491.328 139.68 497.5 139.68 c
503.672 139.68 508.684 144.691 508.684 150.863 c
f
598.684 147.633 m
598.684 153.805 593.672 158.816 587.5 158.816 c
581.328 158.816 576.316 153.805 576.316 147.633 c
576.316 141.461 581.328 136.449 587.5 136.449 c
593.672 136.449 598.684 141.461 598.684 147.633 c
f
598.684 191.488 m
598.684 197.66 593.672 202.672 587.5 202.672 c
581.328 202.672 576.316 197.66 576.316 191.488 c
576.316 185.316 581.328 180.305 587.5 180.305 c
593.672 180.305 598.684 185.316 598.684 191.488 c
f
598.684 290.84 m
598.684 297.012 593.672 302.023 587.5 302.023 c
581.328 302.023 576.316 297.012 576.316 290.84 c
576.316 284.668 581.328 279.66 587.5 279.66 c
593.672 279.66 598.684 284.668 598.684 290.84 c
f
598.684 240.801 m
598.684 246.973 593.672 251.98 587.5 251.98 c
581.328 251.98 576.316 246.973 576.316 240.801 c
576.316 234.629 581.328 229.617 587.5 229.617 c
593.672 229.617 598.684 234.629 598.684 240.801 c
f
598.684 180.363 m
598.684 186.539 593.672 191.547 587.5 191.547 c
581.328 191.547 576.316 186.539 576.316 180.363 c
576.316 174.191 581.328 169.184 587.5 169.184 c
593.672 169.184 598.684 174.191 598.684 180.363 c
f
598.684 204.52 m
598.684 210.691 593.672 215.703 587.5 215.703 c
581.328 215.703 576.316 210.691 576.316 204.52 c
576.316 198.348 581.328 193.336 587.5 193.336 c
593.672 193.336 598.684 198.348 598.684 204.52 c
f
598.684 228.574 m
598.684 234.746 593.672 239.758 587.5 239.758 c
581.328 239.758 576.316 234.746 576.316 228.574 c
576.316 222.402 581.328 217.391 587.5 217.391 c
593.672 217.391 598.684 222.402 598.684 228.574 c
f
598.684 226.414 m
598.684 232.586 593.672 237.598 587.5 237.598 c
581.328 237.598 576.316 232.586 576.316 226.414 c
576.316 220.242 581.328 215.234 587.5 215.234 c
593.672 215.234 598.684 220.242 598.684 226.414 c
f
598.684 202.922 m
598.684 209.094 593.672 214.105 587.5 214.105 c
581.328 214.105 576.316 209.094 576.316 202.922 c
576.316 196.75 581.328 191.742 587.5 191.742 c
593.672 191.742 598.684 196.75 598.684 202.922 c
f
598.684 255.91 m
598.684 262.082 593.672 267.094 587.5 267.094 c
581.328 267.094 576.316 262.082 576.316 255.91 c
576.316 249.738 581.328 244.73 587.5 244.73 c
593.672 244.73 598.684 249.738 598.684 255.91 c
f
598.684 480.051 m
598.684 486.223 593.672 491.234 587.5 491.234 c
581.328 491.234 576.316 486.223 576.316 480.051 c
576.316 473.879 581.328 468.867 587.5 468.867 c
593.672 468.867 598.684 473.879 598.684 480.051 c
f
598.684 313.684 m
598.684 319.855 593.672 324.867 587.5 324.867 c
581.328 324.867 576.316 319.855 576.316 313.684 c
576.316 307.512 581.328 302.5 587.5 302.5 c
593.672 302.5 598.684 307.512 598.684 313.684 c
f
598.684 270.164 m
598.684 276.336 593.672 281.348 587.5 281.348 c
581.328 281.348 576.316 276.336 576.316 270.164 c
576.316 263.992 581.328 258.984 587.5 258.984 c
593.672 258.984 598.684 263.992 598.684 270.164 c
f
598.684 796.09 m
598.684 802.262 593.672 807.27 587.5 807.27 c
581.328 807.27 576.316 802.262 576.316 796.09 c
576.316 789.914 581.328 784.906 587.5 784.906 c
593.672 784.906 598.684 789.914 598.684 796.09 c
f
688.684 199.688 m
688.684 205.859 683.672 210.871 677.5 210.871 c
671.328 210.871 666.316 205.859 666.316 199.688 c
666.316 193.516 671.328 188.504 677.5 188.504 c
683.672 188.504 688.684 193.516 688.684 199.688 c
f
688.684 419.699 m
688.684 425.871 683.672 430.883 677.5 430.883 c
671.328 430.883 666.316 425.871 666.316 419.699 c
666.316 413.527 671.328 408.516 677.5 408.516 c
683.672 408.516 688.684 413.527 688.684 419.699 c
f
688.684 309.078 m
688.684 315.25 683.672 320.258 677.5 320.258 c
671.328 320.258 666.316 315.25 666.316 309.078 c
666.316 302.902 671.328 297.895 677.5 297.895 c
683.672 297.895 688.684 302.902 688.684 309.078 c
f
688.684 307.039 m
688.684 313.211 683.672 318.223 677.5 318.223 c
671.328 318.223 666.316 313.211 666.316 307.039 c
666.316 300.867 671.328 295.859 677.5 295.859 c
683.672 295.859 688.684 300.867 688.684 307.039 c
f
688.684 355.117 m
688.684 361.293 683.672 366.301 677.5 366.301 c
671.328 366.301 666.316 361.293 666.316 355.117 c
666.316 348.945 671.328 343.938 677.5 343.938 c
683.672 343.938 688.684 348.945 688.684 355.117 c
f
688.684 375.047 m
688.684 381.219 683.672 386.23 677.5 386.23 c
671.328 386.23 666.316 381.219 666.316 375.047 c
666.316 368.875 671.328 363.863 677.5 363.863 c
683.672 363.863 688.684 368.875 688.684 375.047 c
f
688.684 374.855 m
688.684 381.027 683.672 386.035 677.5 386.035 c
671.328 386.035 666.316 381.027 666.316 374.855 c
666.316 368.684 671.328 363.672 677.5 363.672 c
683.672 363.672 688.684 368.684 688.684 374.855 c
f
688.684 297.52 m
688.684 303.691 683.672 308.699 677.5 308.699 c
671.328 308.699 666.316 303.691 666.316 297.52 c
666.316 291.348 671.328 286.336 677.5 286.336 c
683.672 286.336 688.684 291.348 688.684 297.52 c
f
688.684 331.422 m
688.684 337.594 683.672 342.605 677.5 342.605 c
671.328 342.605 666.316 337.594 666.316 331.422 c
666.316 325.25 671.328 320.238 677.5 320.238 c
683.672 320.238 688.684 325.25 688.684 331.422 c
f
688.684 591.051 m
688.684 597.223 683.672 602.234 677.5 602.234 c
671.328 602.234 666.316 597.223 666.316 591.051 c
666.316 584.879 671.328 579.867 677.5 579.867 c
683.672 579.867 688.684 584.879 688.684 591.051 c
f
688.684 300.363 m
688.684 306.535 683.672 311.547 677.5 311.547 c
671.328 311.547 666.316 306.535 666.316 300.363 c
666.316 294.191 671.328 289.18 677.5 289.18 c
683.672 289.18 688.684 294.191 688.684 300.363 c
f
688.684 278.738 m
688.684 284.91 683.672 289.922 677.5 289.922 c
671.328 289.922 666.316 284.91 666.316 278.738 c
666.316 272.566 671.328 267.559 677.5 267.559 c
683.672 267.559 688.684 272.566 688.684 278.738 c
f
688.684 362.57 m
688.684 368.742 683.672 373.754 677.5 373.754 c
671.328 373.754 666.316 368.742 666.316 362.57 c
666.316 356.398 671.328 351.387 677.5 351.387 c
683.672 351.387 688.684 356.398 688.684 362.57 c
f
688.684 418.93 m
688.684 425.102 683.672 430.113 677.5 430.113 c
671.328 430.113 666.316 425.102 666.316 418.93 c
666.316 412.758 671.328 407.746 677.5 407.746 c
683.672 407.746 688.684 412.758 688.684 418.93 c
f
688.684 592.965 m
688.684 599.137 683.672 604.148 677.5 604.148 c
671.328 604.148 666.316 599.137 666.316 592.965 c
666.316 586.793 671.328 581.785 677.5 581.785 c
683.672 581.785 688.684 586.793 688.684 592.965 c
f
688.684 308.641 m
688.684 314.813 683.672 319.824 677.5 319.824 c
671.328 319.824 666.316 314.813 666.316 308.641 c
666.316 302.469 671.328 297.457 677.5 297.457 c
683.672 297.457 688.684 302.469 688.684 308.641 c
f
9.9975 w
0 J
/DeviceGray {} CS
[0] SC
317.5 456.016 m
317.5 408.926 l
S
317.5 456.016 m
317.5 503.109 l
S
/DeviceGray {} cs
[0] sc
337.504 456.02 m
337.504 444.969 328.547 436.016 317.5 436.016 c
306.453 436.016 297.496 444.969 297.496 456.02 c
297.496 467.066 306.453 476.02 317.5 476.02 c
328.547 476.02 337.504 467.066 337.504 456.02 c
f
407.5 154.016 m
407.5 149.41 l
S
407.5 154.016 m
407.5 158.629 l
S
427.504 154.016 m
427.504 142.969 418.547 134.016 407.5 134.016 c
396.453 134.016 387.496 142.969 387.496 154.016 c
387.496 165.063 396.453 174.02 407.5 174.02 c
418.547 174.02 427.504 165.063 427.504 154.016 c
f
497.5 145.652 m
497.5 144.047 l
S
497.5 145.652 m
497.5 147.266 l
S
517.504 145.652 m
517.504 134.605 508.547 125.652 497.5 125.652 c
486.453 125.652 477.496 134.605 477.496 145.652 c
477.496 156.699 486.453 165.656 497.5 165.656 c
508.547 165.656 517.504 156.699 517.504 145.652 c
f
587.5 287.816 m
587.5 243.258 l
S
587.5 287.816 m
587.5 332.379 l
S
607.504 287.82 m
607.504 276.77 598.547 267.816 587.5 267.816 c
576.453 267.816 567.496 276.77 567.496 287.82 c
567.496 298.867 576.453 307.82 587.5 307.82 c
598.547 307.82 607.504 298.867 607.504 287.82 c
f
677.5 363.918 m
677.5 337.816 l
S
677.5 363.918 m
677.5 390.023 l
S
697.504 363.922 m
697.504 352.871 688.547 343.918 677.5 343.918 c
666.453 343.918 657.496 352.871 657.496 363.922 c
657.496 374.969 666.453 383.922 677.5 383.922 c
688.547 383.922 697.504 374.969 697.504 363.922 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font BOIMVJ+Helvetica
%%EOF
