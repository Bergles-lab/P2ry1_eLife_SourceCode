%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.60.1 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.5.0.944444 \\(R2018b\\). Operating System: Windows 10)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 90 100
%%HiResBoundingBox: 0 0 90 100
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font BOIMVJ+Helvetica
%!FontType1-1.0: BOIMVJ+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /BOIMVJ+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 761 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 55 /seven put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 73 /I put
dup 77 /M put
dup 79 /O put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 97 /a put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB9711908C6AFA4FACEB7F0C52170F6E7D98FB1099872C199438098C7F
F3E526DCA037CF7C8499EFCE5CEC4787D7C432E0BFB65C4DB38FE3E100E6D1AD
17B71D88E7465CA5AE3C8E84FE009A5958E94A26B87DE8DFDE434400D94E3E0D
6E42CB861975884A31C9190FADB15095022144D112775CF8CF6E676C5826C82F
D2A0F8F15A33364408754EDE3B5E83F79A3C26B5CCB855875D1915F535EA20D7
1E758B6B640B459ACE5586BED29119ABBB6FCF64820FA096DBBDC429A0A15AAD
074C263F67CC7FBE9242FB2CD060D41F6DCB3A9F9A9CAF32A14D77EBF76E8443
7AA6CD5CEB74441151278732F42509E7401D6B8B15C0E4DD6EA2A24DDC963D21
0F014AE6FC770219565571D471F5EF4700EB8BC628A4BFEEB08F3F5767FB38AF
D880B710E2A21B36D576B56867151467F44A4C79DAAFA5A54B658E8F5271498E
43B781F8162F8FC1C4087C1C0A1E996245F6E1A601A70981BD3928DFFFB9DAA6
F8BD9A51736C6AD4B6778E4818405FD7D214FE016EC2993769E2F357A2995D8A
0C32A693C16CDA3463669945F0B6414E5AEE58FB2B1EA46B3526DCB3016E3C25
1F67B6423CF000C52054E360658D8B96833EADEFD0354E7636177A9D2CF7B6C8
3C2D6FB4B09AFCF5E00AC0C5236185EC9396EE209064434703923408CF6C24D6
BE528A8335364945ABD5727D77F16D775D749A04BCF7914D2C6D29F111765635
1FE9B505DD068324305FCA41FA89B4A383E12E556D96BFD104804938FB699643
BD8934F515EF36F9BE4F3983F146EAF015FF9A5DF1C4FCA06EA45BA3233E9684
372E94D60EE1C3504D31C879B856067DF983ABFF0F5F1E0EC7257368F246D756
1151C7A6AA36ABF365C6B2EF8FDDAB64AABD398424CC2E6EEDA162C7F80B35CA
967C3C6A666B4204553C4A45DB597704E32D12D9BBD9397B73EAA6FD74DC13B5
EB1CDE301F1B6E84370F77F42782A8F28563E1F21677CCCF16E7655BDEAC070E
816ACD32700124C8954A554E32381116A8A880BAF71F18ECBEF52F4AB6206CC9
C419F1B9F83286BA8953811F0D615CF4BCEE7B9A7E145DED399003E04061779F
602436AAF2045C353BD8A8A644B276BFEFCE9D6B5F10219D1E4463EE45375BAA
AD09B2F29CC5B1BE8F3FD45EAC639E0F8AB200C99A007509B01811BFF2AB95A8
74F771E6CB5E85219001A6E2D3BFCCA9DFC7204E60AC6CB1AC37D1820A95FBCB
A4E055A31DB805E56CEE8C81F9B78BE8AD3F34168E81946CAD134DB08AB9F6C1
2EA1C7CC72C8993272DAFF99701693A2A9BC0CE8631452D7E287677A007A9A44
F878C7289D956316BB8A097880A347059ACA6FA010C91AFC972E5CB1847ED5AC
3FF8B074E9789C75229274D0E141C6AF447D17011C8DFDC6F5B9B1766A5A684D
72D1FBB1F10C756B1D489F144BFC4D3982B0AD16ED1CEBFE6CBA1ACE2E72D174
2BC1D46D6AF3073F3C1A27D0FE9E8C85642729BD19F3A5AB104EC0C12484C734
35090ABBFBB0C02B647DA7179BA138B23A6A62EC05DC4ED9A78F00E09CDA5B50
989F0966B9232D2A55C827615FAB0D24512C480F5C9ABF3E8466EBA3B32AE9DE
F1A6BDAB8A289D6D2D84884DEBEB4F03DAE51FEC625181DAEFABDF53DC94C5B9
60029EFD920164E6A03A000ADD4F0D627A921089F8B6DFEA93BE28C2BED7B081
7D025094D06B50EA3736BEEF93A674A6998044120FC3495D3E05DBAD910A1AF2
03D6865C9184FDF9C521EC61739878718EA09660F43121C8A8F84A1ECC09F1C5
281301F34B32F022F8C30466BCD5DDB59817146E6CD2FAB9BE5B9B1C306B699A
0510588033DA32750677BDB4405B6695C284B9F272556668EDE65FF72AB2CC6B
F61C959D415EE76FEA28FE91A405F56AD3B15D58D73A9E84B2C27FB1921AC562
225A4CCB9D0A0F0FB9A1BA268F22BA1C0D49B9CA17E3309B6E6FF46F2091E6BB
455C2C300F6A017DD6AB9723A7AEA4C1F5744A2F594F6F690190754202ACB47D
A3CE8943E6426A1BF7C6B1282D7814C2A02316BF78989F6726D37D5A448FE127
8C11661471689678A771A7990FC81F8595E3A5817079135CE4C0C8D8DDE2A1DE
FFF7BFC18F6380CB971FA15A9675731A5120E65B5238311935C45DDBCEE0BD61
CE3BDA39DD11DA550E07E783F16F41152B73D2E066D33CDB34FE72DF7A74633D
F3DE180C3D95A7DCDFA5CF704437B5C45901D2D91E508D090CB381D1E2090C6A
79E245350397D050D4BBBB45C98C1EA75B4C5673D9DA3E4EF210DDF7D93C92B7
4D58ECBD1EF96813ED5A3E000B5A6ECF28C59B9B3009F1BB259F207A662A4655
CC826B942F0166695D58ECE908E8079805457B1A49086CE306E66CF7CFE1C4A4
652F0DD5E1DA97BB087347B52C7B3084C4587DF29721BFFE8A0FD0C7918B3CC2
FF6199FFB29485E98C489E8C4B13E92BFB18F4ACDAACDF4674A12035E986CD26
10AA0824CBBA074A373F05527861B05CFA0CCE5419EDA602353E2022C8C3057D
F4E88B530846A2784A16E79E6B27A5175CF0897B8321155487FFBFD16A1BE106
5388F7D31DA91C479CCC2AA4A4D8B8D31A208017CDA7825583D7E4301FB1AB53
F77128EADE8DF10C491010232419F6ABAEF23D0AC042A085539324D9F1EB92C0
42F6800D039E584656262A2D1C1102D8F7E481D6289CB5969139B310EB8E0EEA
A77C5E4FB75307BDEF93CEED2D09E91BFF47DAFB600ADAE9BAEBEB207CAA552F
FFF040C9AD529C8DD038D4F9B1D2593358CE11A6F476680F344B776731E36C5E
9B30862A6B43AD9A81D8058130CA400BF7B7E7BC4FCB415F3C71D5D6D79E7F27
53A6E87C1DB27561EC9A145DA20C412351B103BD6D395BFC0A598639C1634815
6949017B3E22CFC2CF9A986CE2F93E2ACB7A3C2225D36FBF42ABCDAFAD5C3B43
604698F90F54778D6F9D966D07992C0D63FB53A992E1DCEF679E235CAB10A722
2EBB6EAE9A4D54CEB1A243FA4A6420C410D1DBB5CEC89C1CAF79D841FC3C96F7
94AF3CDAE7BBDE98A70744158479690A508B6FF0C98A2EFCE8F8A2B2172A6645
19698C5CBDEDE123D20F46F78B2FF176089C1C7301FDF2470547FDE577828DFF
1C094F155E41B706DC64717CFCCEE20C43B9D9C6B1DAEFD7E4E460CA5E4805C4
CEFCCEEB3528575AB2E8CA82708678EF0162436428CC184CD590E8E7E4F96400
5C99D1B3649C1E2BBDC8A163D6DBC2BB552B948AB220194D53AAD5C9B34FDEBE
3C28C447D28C682D06FC20320C03DE9E2B071D38D1D336AA0EACC508BB6B9D8E
66C3914CF7960B6651B4F43AB29A4F752CA5787F798DEEEA5563D00F0EED901F
DF98F7413ABB8604515C2A9AE82558519C57FA5F0EFE1E34AF55620581749275
B822A06C34FC41A675A23CBB89AFABCD7595029B671A5023CDDFB45A5BC19E25
5182846A6963FFC791B653A8C8A2AEF678C1F3F0B4EC449E5573612B6FDBBA6E
65D058A65F1DD1A35BB85438A481331C5E55825984A440B7701286A038B2C7FE
603289B75655C924FF621AFEEE7716EA95CB69031609DFF1F1C798DC7A8048BA
950E5E0A79DE9B417E59FDC1B7391004EE19A52D873B82D19F534B07E299EDB7
E84B33A594DECE6C406C1DC51E1B5277E451FA111255232FA68C88F7342F2F90
3651509F9357AF05F340F977DCA2C22FA65FBF69CE1C86BF1C26AD774532E44B
4CCC5065367A8F4F1C21520B01A63EC2A19AC0ED69CB3EDB5F4F184568B56709
9618D380EE11CC216B68929E249C600A2D36E24B19721736C376745E01DE10B9
89AD08E32B242555571090925C85DA6BE1A85181C7D02D7AD0C68A5589A150EA
42BBC533F592C9616252FB2D25E905EA4F9596060DFBEDDA0EB2702456DB447B
86B56DE790872DF0F61F37B37B4F6E72F77FFA830CEC4BDB168DF381791D5434
F04CC0E7F2B21E3EE7AC2F94305A2A7468B7458CA69411A047CCCADB0F77BB32
CE4A91FCE37CA9810E8934990E2F75EDFCE0E0C2430BE58FF89EBF0271A271B8
5164CD87CA19685AC1AE607C88EC524F54E189E6114064365A74BEC31CF2F315
3E9B7ABE60F534F81AA7D0A142728F58B89FB32C7101CEEE6DB0662B63753D9E
D1EDC92B1D181B2B4ABEBED398B6F454C81860969A177025919CD87618168127
32D34DA0BD243EC0C4328132FE3BB6886FA625435000FB5264B1BC746914CD7D
98A913A4CBE386865C7021BDAF011D26E3BD24035A63FB6ED54C80D8F828726A
9037AC87BF8DB13F4417E69FB326324758784A3D463416A3A9B46D36AFE4C0AF
14AAC21535201067D2F9FBC1B6AF2871A725C2D99068F63C62B949BBE5F9EBB3
8F4360E4B3FF97B6DBDAEE528E4FF8BD2B11CD128003EAC036B5D8B03EE422BA
A844F1BE0ABC3B2E4C90AEC721145AE5AB6023A41DC2BB055442C7A157635C4D
5892F27A33D15FFECC9E8DB2C51650F27C49BEB06FBEF66411563332B29BDEF8
11AC5FF0ECC9C2CED71629CAAC062F7E338BA85EB70FDB72B001616B1C85BE0C
F6A778345D430DB767CCED187DAF03226532FE81C1B40364FDF6215C25926E1B
8EA29E01593622968F77F6EC3F5B78CC5CE6D531971EC1CB90FA40D6ED1F1F8A
BA1BE18F71687C8EFFF8948726D2B8146C4BA86DDAD6EECDFB0565050BC2CEDE
DB85290CA34E3C1A0ADDD631B24952A7D04CF6464E9F166B1EF2507301F38A7F
9931D8C36197691564F2D9F30F1CBFC3B062655A6555268EEB3DF82A0BD7CCE8
22B14D0CA9C7820A5C03A9E4BBD6B949502DB5743D730A3B26C3628E47F35DA7
32E32A0FD5C9630037940AB947761B6C9F6E7E254FD361A8CD677F3B6CED9300
268FFB5662D8287E2A5B5FFB97216C59443005B0873D4E88784192F852440C5D
C305119F3B0A24B85B81DB2248F27FF5ED4D54BA670BAB8CEF6A7D89C8FA5BCB
870A9FE86E4412DAA7B74D7122795F976F592BA8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /BOIMVJ+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 90 100 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
10 20 900 1008 re
f
10 20 900 1008 re
f
257.5 132.836 570 819.941 re
f
7.5112 w
2 J
1 j
/DeviceGray {} CS
[0] SC
q
[0.998509 0 0 -1.00149 0 0] cm
257.885 -132.638 m
828.736 -132.638 l
S
Q
q
[0.998509 0 0 -1.00149 0 0] cm
335.731 -132.638 m
335.731 -124.451 l
S
Q
q
[0.998509 0 0 -1.00149 0 0] cm
439.519 -132.638 m
439.519 -124.451 l
S
Q
q
[0.998509 0 0 -1.00149 0 0] cm
543.31 -132.638 m
543.31 -124.451 l
S
Q
q
[0.998509 0 0 -1.00149 0 0] cm
647.102 -132.638 m
647.102 -124.451 l
S
Q
q
[0.998509 0 0 -1.00149 0 0] cm
750.889 -132.638 m
750.889 -124.451 l
S
Q
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0.997022 0 0 1 10.6477 4.28945] Tm
0 0 Td
/F8_0 7.02066 Tf
(DMSO Control)
[5.068917
0
5.84821
0
4.68278
0
5.462073
0
1.951743
0
5.068917
0
3.903487
0
3.903487
0
1.951743
0
2.33788
0
3.903487
0
1.558587
0] Tj
15.2842 0 Td
(BAPTA-AM)
[4.68278
0
4.68278
0
4.68278
0
4.289623
0
4.68278
0
2.33788
0
4.68278
0
5.84821
0] Tj
23.4221 0 Td
(Thapsigargin)
[4.289623
0
3.903487
0
3.903487
0
3.903487
0
3.51033
0
1.558587
0
3.903487
0
3.903487
0
2.33788
0
3.903487
0
1.558587
0
3.903487
0] Tj
41.7152 0 Td
(U73122)
[5.068917
0
3.903487
0
3.903487
0
3.903487
0
3.903487
0
3.903487
0] Tj
2021.42 TJm
(U73343)
[5.068917
0
3.903487
0
3.903487
0
3.903487
0
3.903487
0
3.903487
0] Tj
Q
q
[0.998509 0 0 -1.00149 0 0] cm
257.885 -132.638 m
257.885 -951.359 l
S
Q
q
[0.998509 0 0 -1.00149 0 0] cm
257.885 -132.638 m
249.697 -132.638 l
S
Q
q
[0.998509 0 0 -1.00149 0 0] cm
257.885 -405.54 m
249.697 -405.54 l
S
Q
q
[0.998509 0 0 -1.00149 0 0] cm
257.885 -678.453 m
249.697 -678.453 l
S
Q
q
[0.998509 0 0 -1.00149 0 0] cm
257.885 -951.359 m
249.697 -951.359 l
S
Q
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0.997022 0 0 1 19.0324 10.6508] Tm
0 0 Td
/F8_0 7.02066 Tf
(0)
[3.903487
0] Tj
-7.5224 27.3313 Td
(250)
[3.903487
0
3.903487
0
3.903487
0] Tj
-7.5224 54.6626 Td
(500)
[3.903487
0
3.903487
0
3.903487
0] Tj
-7.5224 81.9942 Td
(750)
[3.903487
0
3.903487
0
3.903487
0] Tj
[0 1.00299 -1 0 8.5 27.2] Tm
0 0 Td
/F8_0 8.00025 Tf
(Integral \(-pA*s\))
[2.22407
0
4.448139
0
2.22407
0
4.448139
0
4.448139
0
2.664083
0
4.448139
0
1.776055
0
2.22407
0
2.664083
0
2.664083
0
4.448139
0
5.336167
0
3.112097
0
4.000125
0
2.664083
0] Tj
Q
/DeviceGray {} cs
[0.7012] sc
346.41 721.965 m
346.41 728.156 341.398 733.184 335.227 733.184 c
329.055 733.184 324.043 728.156 324.043 721.965 c
324.043 715.773 329.055 710.75 335.227 710.75 c
341.398 710.75 346.41 715.773 346.41 721.965 c
f
346.41 633.082 m
346.41 639.273 341.398 644.301 335.227 644.301 c
329.055 644.301 324.043 639.273 324.043 633.082 c
324.043 626.895 329.055 621.867 335.227 621.867 c
341.398 621.867 346.41 626.895 346.41 633.082 c
f
346.41 394.297 m
346.41 400.488 341.398 405.512 335.227 405.512 c
329.055 405.512 324.043 400.488 324.043 394.297 c
324.043 388.105 329.055 383.082 335.227 383.082 c
341.398 383.082 346.41 388.105 346.41 394.297 c
f
346.41 827.277 m
346.41 833.469 341.398 838.492 335.227 838.492 c
329.055 838.492 324.043 833.469 324.043 827.277 c
324.043 821.086 329.055 816.063 335.227 816.063 c
341.398 816.063 346.41 821.086 346.41 827.277 c
f
346.41 682.992 m
346.41 689.184 341.398 694.207 335.227 694.207 c
329.055 694.207 324.043 689.184 324.043 682.992 c
324.043 676.801 329.055 671.777 335.227 671.777 c
341.398 671.777 346.41 676.801 346.41 682.992 c
f
346.41 253.711 m
346.41 259.902 341.398 264.926 335.227 264.926 c
329.055 264.926 324.043 259.902 324.043 253.711 c
324.043 247.52 329.055 242.496 335.227 242.496 c
341.398 242.496 346.41 247.52 346.41 253.711 c
f
346.41 416.105 m
346.41 422.297 341.398 427.32 335.227 427.32 c
329.055 427.32 324.043 422.297 324.043 416.105 c
324.043 409.914 329.055 404.887 335.227 404.887 c
341.398 404.887 346.41 409.914 346.41 416.105 c
f
346.41 358.938 m
346.41 365.125 341.398 370.152 335.227 370.152 c
329.055 370.152 324.043 365.125 324.043 358.938 c
324.043 352.746 329.055 347.719 335.227 347.719 c
341.398 347.719 346.41 352.746 346.41 358.938 c
f
346.41 325.246 m
346.41 331.438 341.398 336.461 335.227 336.461 c
329.055 336.461 324.043 331.438 324.043 325.246 c
324.043 319.055 329.055 314.031 335.227 314.031 c
341.398 314.031 346.41 319.055 346.41 325.246 c
f
346.41 325.262 m
346.41 331.453 341.398 336.48 335.227 336.48 c
329.055 336.48 324.043 331.453 324.043 325.262 c
324.043 319.07 329.055 314.047 335.227 314.047 c
341.398 314.047 346.41 319.07 346.41 325.262 c
f
346.41 348.379 m
346.41 354.57 341.398 359.594 335.227 359.594 c
329.055 359.594 324.043 354.57 324.043 348.379 c
324.043 342.188 329.055 337.164 335.227 337.164 c
341.398 337.164 346.41 342.188 346.41 348.379 c
f
346.41 318.434 m
346.41 324.625 341.398 329.652 335.227 329.652 c
329.055 329.652 324.043 324.625 324.043 318.434 c
324.043 312.242 329.055 307.219 335.227 307.219 c
341.398 307.219 346.41 312.242 346.41 318.434 c
f
346.41 185.527 m
346.41 191.715 341.398 196.742 335.227 196.742 c
329.055 196.742 324.043 191.715 324.043 185.527 c
324.043 179.336 329.055 174.309 335.227 174.309 c
341.398 174.309 346.41 179.336 346.41 185.527 c
f
346.41 467.852 m
346.41 474.043 341.398 479.066 335.227 479.066 c
329.055 479.066 324.043 474.043 324.043 467.852 c
324.043 461.66 329.055 456.637 335.227 456.637 c
341.398 456.637 346.41 461.66 346.41 467.852 c
f
346.41 372.77 m
346.41 378.961 341.398 383.984 335.227 383.984 c
329.055 383.984 324.043 378.961 324.043 372.77 c
324.043 366.578 329.055 361.555 335.227 361.555 c
341.398 361.555 346.41 366.578 346.41 372.77 c
f
346.41 540.191 m
346.41 546.383 341.398 551.41 335.227 551.41 c
329.055 551.41 324.043 546.383 324.043 540.191 c
324.043 534.004 329.055 528.977 335.227 528.977 c
341.398 528.977 346.41 534.004 346.41 540.191 c
f
450.047 161.629 m
450.047 167.82 445.035 172.848 438.863 172.848 c
432.691 172.848 427.68 167.82 427.68 161.629 c
427.68 155.441 432.691 150.414 438.863 150.414 c
445.035 150.414 450.047 155.441 450.047 161.629 c
f
450.047 144.605 m
450.047 150.797 445.035 155.824 438.863 155.824 c
432.691 155.824 427.68 150.797 427.68 144.605 c
427.68 138.418 432.691 133.391 438.863 133.391 c
445.035 133.391 450.047 138.418 450.047 144.605 c
f
450.047 145.574 m
450.047 151.766 445.035 156.789 438.863 156.789 c
432.691 156.789 427.68 151.766 427.68 145.574 c
427.68 139.383 432.691 134.359 438.863 134.359 c
445.035 134.359 450.047 139.383 450.047 145.574 c
f
450.047 143.215 m
450.047 149.402 445.035 154.43 438.863 154.43 c
432.691 154.43 427.68 149.402 427.68 143.215 c
427.68 137.023 432.691 131.996 438.863 131.996 c
445.035 131.996 450.047 137.023 450.047 143.215 c
f
450.047 145.504 m
450.047 151.695 445.035 156.723 438.863 156.723 c
432.691 156.723 427.68 151.695 427.68 145.504 c
427.68 139.313 432.691 134.289 438.863 134.289 c
445.035 134.289 450.047 139.313 450.047 145.504 c
f
450.047 154.395 m
450.047 160.582 445.035 165.609 438.863 165.609 c
432.691 165.609 427.68 160.582 427.68 154.395 c
427.68 148.203 432.691 143.176 438.863 143.176 c
445.035 143.176 450.047 148.203 450.047 154.395 c
f
450.047 147.063 m
450.047 153.254 445.035 158.277 438.863 158.277 c
432.691 158.277 427.68 153.254 427.68 147.063 c
427.68 140.871 432.691 135.848 438.863 135.848 c
445.035 135.848 450.047 140.871 450.047 147.063 c
f
450.047 168.609 m
450.047 174.801 445.035 179.824 438.863 179.824 c
432.691 179.824 427.68 174.801 427.68 168.609 c
427.68 162.418 432.691 157.395 438.863 157.395 c
445.035 157.395 450.047 162.418 450.047 168.609 c
f
450.047 144.227 m
450.047 150.418 445.035 155.445 438.863 155.445 c
432.691 155.445 427.68 150.418 427.68 144.227 c
427.68 138.035 432.691 133.012 438.863 133.012 c
445.035 133.012 450.047 138.035 450.047 144.227 c
f
450.047 146.348 m
450.047 152.539 445.035 157.563 438.863 157.563 c
432.691 157.563 427.68 152.539 427.68 146.348 c
427.68 140.156 432.691 135.133 438.863 135.133 c
445.035 135.133 450.047 140.156 450.047 146.348 c
f
450.047 141.91 m
450.047 148.098 445.035 153.125 438.863 153.125 c
432.691 153.125 427.68 148.098 427.68 141.91 c
427.68 135.719 432.691 130.691 438.863 130.691 c
445.035 130.691 450.047 135.719 450.047 141.91 c
f
450.047 180.895 m
450.047 187.086 445.035 192.109 438.863 192.109 c
432.691 192.109 427.68 187.086 427.68 180.895 c
427.68 174.703 432.691 169.68 438.863 169.68 c
445.035 169.68 450.047 174.703 450.047 180.895 c
f
450.047 144.488 m
450.047 150.68 445.035 155.703 438.863 155.703 c
432.691 155.703 427.68 150.68 427.68 144.488 c
427.68 138.297 432.691 133.273 438.863 133.273 c
445.035 133.273 450.047 138.297 450.047 144.488 c
f
450.047 156.773 m
450.047 162.965 445.035 167.992 438.863 167.992 c
432.691 167.992 427.68 162.965 427.68 156.773 c
427.68 150.582 432.691 145.559 438.863 145.559 c
445.035 145.559 450.047 150.582 450.047 156.773 c
f
450.047 163.461 m
450.047 169.648 445.035 174.676 438.863 174.676 c
432.691 174.676 427.68 169.648 427.68 163.461 c
427.68 157.27 432.691 152.242 438.863 152.242 c
445.035 152.242 450.047 157.27 450.047 163.461 c
f
450.047 208.445 m
450.047 214.637 445.035 219.66 438.863 219.66 c
432.691 219.66 427.68 214.637 427.68 208.445 c
427.68 202.254 432.691 197.227 438.863 197.227 c
445.035 197.227 450.047 202.254 450.047 208.445 c
f
553.684 139.289 m
553.684 145.477 548.672 150.504 542.5 150.504 c
536.328 150.504 531.316 145.477 531.316 139.289 c
531.316 133.098 536.328 128.07 542.5 128.07 c
548.672 128.07 553.684 133.098 553.684 139.289 c
f
553.684 142.328 m
553.684 148.52 548.672 153.543 542.5 153.543 c
536.328 153.543 531.316 148.52 531.316 142.328 c
531.316 136.137 536.328 131.113 542.5 131.113 c
548.672 131.113 553.684 136.137 553.684 142.328 c
f
553.684 146.441 m
553.684 152.633 548.672 157.656 542.5 157.656 c
536.328 157.656 531.316 152.633 531.316 146.441 c
531.316 140.25 536.328 135.223 542.5 135.223 c
548.672 135.223 553.684 140.25 553.684 146.441 c
f
553.684 147.59 m
553.684 153.781 548.672 158.805 542.5 158.805 c
536.328 158.805 531.316 153.781 531.316 147.59 c
531.316 141.398 536.328 136.375 542.5 136.375 c
548.672 136.375 553.684 141.398 553.684 147.59 c
f
553.684 138.945 m
553.684 145.137 548.672 150.16 542.5 150.16 c
536.328 150.16 531.316 145.137 531.316 138.945 c
531.316 132.754 536.328 127.73 542.5 127.73 c
548.672 127.73 553.684 132.754 553.684 138.945 c
f
553.684 143.504 m
553.684 149.695 548.672 154.719 542.5 154.719 c
536.328 154.719 531.316 149.695 531.316 143.504 c
531.316 137.313 536.328 132.289 542.5 132.289 c
548.672 132.289 553.684 137.313 553.684 143.504 c
f
553.684 162.016 m
553.684 168.207 548.672 173.234 542.5 173.234 c
536.328 173.234 531.316 168.207 531.316 162.016 c
531.316 155.824 536.328 150.801 542.5 150.801 c
548.672 150.801 553.684 155.824 553.684 162.016 c
f
553.684 161.164 m
553.684 167.355 548.672 172.383 542.5 172.383 c
536.328 172.383 531.316 167.355 531.316 161.164 c
531.316 154.973 536.328 149.949 542.5 149.949 c
548.672 149.949 553.684 154.973 553.684 161.164 c
f
553.684 151.855 m
553.684 158.047 548.672 163.07 542.5 163.07 c
536.328 163.07 531.316 158.047 531.316 151.855 c
531.316 145.664 536.328 140.641 542.5 140.641 c
548.672 140.641 553.684 145.664 553.684 151.855 c
f
553.684 156.367 m
553.684 162.559 548.672 167.582 542.5 167.582 c
536.328 167.582 531.316 162.559 531.316 156.367 c
531.316 150.176 536.328 145.152 542.5 145.152 c
548.672 145.152 553.684 150.176 553.684 156.367 c
f
553.684 141.34 m
553.684 147.531 548.672 152.555 542.5 152.555 c
536.328 152.555 531.316 147.531 531.316 141.34 c
531.316 135.148 536.328 130.125 542.5 130.125 c
548.672 130.125 553.684 135.148 553.684 141.34 c
f
553.684 150.238 m
553.684 156.43 548.672 161.453 542.5 161.453 c
536.328 161.453 531.316 156.43 531.316 150.238 c
531.316 144.047 536.328 139.023 542.5 139.023 c
548.672 139.023 553.684 144.047 553.684 150.238 c
f
553.684 154.285 m
553.684 160.477 548.672 165.504 542.5 165.504 c
536.328 165.504 531.316 160.477 531.316 154.285 c
531.316 148.094 536.328 143.07 542.5 143.07 c
548.672 143.07 553.684 148.094 553.684 154.285 c
f
553.684 144.602 m
553.684 150.789 548.672 155.816 542.5 155.816 c
536.328 155.816 531.316 150.789 531.316 144.602 c
531.316 138.41 536.328 133.383 542.5 133.383 c
548.672 133.383 553.684 138.41 553.684 144.602 c
f
553.684 151.352 m
553.684 157.543 548.672 162.57 542.5 162.57 c
536.328 162.57 531.316 157.543 531.316 151.352 c
531.316 145.16 536.328 140.137 542.5 140.137 c
548.672 140.137 553.684 145.16 553.684 151.352 c
f
553.684 147.852 m
553.684 154.043 548.672 159.066 542.5 159.066 c
536.328 159.066 531.316 154.043 531.316 147.852 c
531.316 141.66 536.328 136.637 542.5 136.637 c
548.672 136.637 553.684 141.66 553.684 147.852 c
f
553.684 138.855 m
553.684 145.047 548.672 150.07 542.5 150.07 c
536.328 150.07 531.316 145.047 531.316 138.855 c
531.316 132.664 536.328 127.637 542.5 127.637 c
548.672 127.637 553.684 132.664 553.684 138.855 c
f
553.684 142.75 m
553.684 148.941 548.672 153.969 542.5 153.969 c
536.328 153.969 531.316 148.941 531.316 142.75 c
531.316 136.559 536.328 131.535 542.5 131.535 c
548.672 131.535 553.684 136.559 553.684 142.75 c
f
553.684 145.809 m
553.684 152 548.672 157.023 542.5 157.023 c
536.328 157.023 531.316 152 531.316 145.809 c
531.316 139.617 536.328 134.594 542.5 134.594 c
548.672 134.594 553.684 139.617 553.684 145.809 c
f
553.684 153.02 m
553.684 159.211 548.672 164.234 542.5 164.234 c
536.328 164.234 531.316 159.211 531.316 153.02 c
531.316 146.828 536.328 141.805 542.5 141.805 c
548.672 141.805 553.684 146.828 553.684 153.02 c
f
657.32 149.895 m
657.32 156.086 652.309 161.109 646.137 161.109 c
639.965 161.109 634.953 156.086 634.953 149.895 c
634.953 143.703 639.965 138.68 646.137 138.68 c
652.309 138.68 657.32 143.703 657.32 149.895 c
f
657.32 192.324 m
657.32 198.516 652.309 203.543 646.137 203.543 c
639.965 203.543 634.953 198.516 634.953 192.324 c
634.953 186.133 639.965 181.109 646.137 181.109 c
652.309 181.109 657.32 186.133 657.32 192.324 c
f
657.32 288.445 m
657.32 294.637 652.309 299.664 646.137 299.664 c
639.965 299.664 634.953 294.637 634.953 288.445 c
634.953 282.254 639.965 277.23 646.137 277.23 c
652.309 277.23 657.32 282.254 657.32 288.445 c
f
657.32 240.031 m
657.32 246.223 652.309 251.25 646.137 251.25 c
639.965 251.25 634.953 246.223 634.953 240.031 c
634.953 233.84 639.965 228.816 646.137 228.816 c
652.309 228.816 657.32 233.84 657.32 240.031 c
f
657.32 181.563 m
657.32 187.754 652.309 192.777 646.137 192.777 c
639.965 192.777 634.953 187.754 634.953 181.563 c
634.953 175.371 639.965 170.348 646.137 170.348 c
652.309 170.348 657.32 175.371 657.32 181.563 c
f
657.32 204.934 m
657.32 211.125 652.309 216.148 646.137 216.148 c
639.965 216.148 634.953 211.125 634.953 204.934 c
634.953 198.742 639.965 193.715 646.137 193.715 c
652.309 193.715 657.32 198.742 657.32 204.934 c
f
657.32 228.203 m
657.32 234.395 652.309 239.422 646.137 239.422 c
639.965 239.422 634.953 234.395 634.953 228.203 c
634.953 222.012 639.965 216.988 646.137 216.988 c
652.309 216.988 657.32 222.012 657.32 228.203 c
f
657.32 226.117 m
657.32 232.305 652.309 237.332 646.137 237.332 c
639.965 237.332 634.953 232.305 634.953 226.117 c
634.953 219.926 639.965 214.898 646.137 214.898 c
652.309 214.898 657.32 219.926 657.32 226.117 c
f
657.32 203.387 m
657.32 209.578 652.309 214.602 646.137 214.602 c
639.965 214.602 634.953 209.578 634.953 203.387 c
634.953 197.195 639.965 192.172 646.137 192.172 c
652.309 192.172 657.32 197.195 657.32 203.387 c
f
657.32 254.652 m
657.32 260.844 652.309 265.867 646.137 265.867 c
639.965 265.867 634.953 260.844 634.953 254.652 c
634.953 248.461 639.965 243.438 646.137 243.438 c
652.309 243.438 657.32 248.461 657.32 254.652 c
f
657.32 471.504 m
657.32 477.695 652.309 482.719 646.137 482.719 c
639.965 482.719 634.953 477.695 634.953 471.504 c
634.953 465.313 639.965 460.285 646.137 460.285 c
652.309 460.285 657.32 465.313 657.32 471.504 c
f
657.32 310.547 m
657.32 316.738 652.309 321.762 646.137 321.762 c
639.965 321.762 634.953 316.738 634.953 310.547 c
634.953 304.355 639.965 299.328 646.137 299.328 c
652.309 299.328 657.32 304.355 657.32 310.547 c
f
657.32 268.441 m
657.32 274.633 652.309 279.66 646.137 279.66 c
639.965 279.66 634.953 274.633 634.953 268.441 c
634.953 262.254 639.965 257.227 646.137 257.227 c
652.309 257.227 657.32 262.254 657.32 268.441 c
f
657.32 777.266 m
657.32 783.453 652.309 788.48 646.137 788.48 c
639.965 788.48 634.953 783.453 634.953 777.266 c
634.953 771.074 639.965 766.047 646.137 766.047 c
652.309 766.047 657.32 771.074 657.32 777.266 c
f
760.957 200.258 m
760.957 206.449 755.945 211.473 749.773 211.473 c
743.602 211.473 738.59 206.449 738.59 200.258 c
738.59 194.066 743.602 189.043 749.773 189.043 c
755.945 189.043 760.957 194.066 760.957 200.258 c
f
760.957 413.113 m
760.957 419.305 755.945 424.332 749.773 424.332 c
743.602 424.332 738.59 419.305 738.59 413.113 c
738.59 406.922 743.602 401.898 749.773 401.898 c
755.945 401.898 760.957 406.922 760.957 413.113 c
f
760.957 306.09 m
760.957 312.281 755.945 317.305 749.773 317.305 c
743.602 317.305 738.59 312.281 738.59 306.09 c
738.59 299.898 743.602 294.875 749.773 294.875 c
755.945 294.875 760.957 299.898 760.957 306.09 c
f
760.957 304.117 m
760.957 310.309 755.945 315.336 749.773 315.336 c
743.602 315.336 738.59 310.309 738.59 304.117 c
738.59 297.93 743.602 292.902 749.773 292.902 c
755.945 292.902 760.957 297.93 760.957 304.117 c
f
760.957 350.633 m
760.957 356.824 755.945 361.852 749.773 361.852 c
743.602 361.852 738.59 356.824 738.59 350.633 c
738.59 344.441 743.602 339.418 749.773 339.418 c
755.945 339.418 760.957 344.441 760.957 350.633 c
f
760.957 369.914 m
760.957 376.105 755.945 381.129 749.773 381.129 c
743.602 381.129 738.59 376.105 738.59 369.914 c
738.59 363.723 743.602 358.699 749.773 358.699 c
755.945 358.699 760.957 363.723 760.957 369.914 c
f
760.957 369.727 m
760.957 375.918 755.945 380.945 749.773 380.945 c
743.602 380.945 738.59 375.918 738.59 369.727 c
738.59 363.535 743.602 358.512 749.773 358.512 c
755.945 358.512 760.957 363.535 760.957 369.727 c
f
760.957 294.906 m
760.957 301.098 755.945 306.121 749.773 306.121 c
743.602 306.121 738.59 301.098 738.59 294.906 c
738.59 288.715 743.602 283.691 749.773 283.691 c
755.945 283.691 760.957 288.715 760.957 294.906 c
f
760.957 327.707 m
760.957 333.898 755.945 338.922 749.773 338.922 c
743.602 338.922 738.59 333.898 738.59 327.707 c
738.59 321.516 743.602 316.492 749.773 316.492 c
755.945 316.492 760.957 321.516 760.957 327.707 c
f
760.957 578.895 m
760.957 585.086 755.945 590.109 749.773 590.109 c
743.602 590.109 738.59 585.086 738.59 578.895 c
738.59 572.703 743.602 567.676 749.773 567.676 c
755.945 567.676 760.957 572.703 760.957 578.895 c
f
760.957 297.66 m
760.957 303.852 755.945 308.875 749.773 308.875 c
743.602 308.875 738.59 303.852 738.59 297.66 c
738.59 291.469 743.602 286.445 749.773 286.445 c
755.945 286.445 760.957 291.469 760.957 297.66 c
f
760.957 276.738 m
760.957 282.93 755.945 287.953 749.773 287.953 c
743.602 287.953 738.59 282.93 738.59 276.738 c
738.59 270.547 743.602 265.523 749.773 265.523 c
755.945 265.523 760.957 270.547 760.957 276.738 c
f
760.957 357.844 m
760.957 364.035 755.945 369.059 749.773 369.059 c
743.602 369.059 738.59 364.035 738.59 357.844 c
738.59 351.652 743.602 346.629 749.773 346.629 c
755.945 346.629 760.957 351.652 760.957 357.844 c
f
760.957 412.371 m
760.957 418.563 755.945 423.586 749.773 423.586 c
743.602 423.586 738.59 418.563 738.59 412.371 c
738.59 406.18 743.602 401.152 749.773 401.152 c
755.945 401.152 760.957 406.18 760.957 412.371 c
f
760.957 580.746 m
760.957 586.938 755.945 591.961 749.773 591.961 c
743.602 591.961 738.59 586.938 738.59 580.746 c
738.59 574.555 743.602 569.531 749.773 569.531 c
755.945 569.531 760.957 574.555 760.957 580.746 c
f
760.957 305.668 m
760.957 311.859 755.945 316.883 749.773 316.883 c
743.602 316.883 738.59 311.859 738.59 305.668 c
738.59 299.477 743.602 294.449 749.773 294.449 c
755.945 294.449 760.957 299.477 760.957 305.668 c
f
10.0124 w
0 J
q
[0.998509 0 0 -1.00149 0 0] cm
335.731 -447.583 m
335.731 -402.084 l
S
Q
q
[0.998509 0 0 -1.00149 0 0] cm
335.731 -447.583 m
335.731 -493.077 l
S
Q
/DeviceGray {} cs
[0] sc
355.23 448.25 m
355.23 437.172 346.273 428.191 335.227 428.191 c
324.18 428.191 315.227 437.172 315.227 448.25 c
315.227 459.332 324.18 468.313 335.227 468.313 c
346.273 468.313 355.23 459.332 355.23 448.25 c
f
q
[0.998509 0 0 -1.00149 0 0] cm
439.519 -155.838 m
439.519 -151.384 l
S
Q
q
[0.998509 0 0 -1.00149 0 0] cm
439.519 -155.838 m
439.519 -160.292 l
S
Q
458.867 156.07 m
458.867 144.992 449.91 136.008 438.863 136.008 c
427.816 136.008 418.859 144.992 418.859 156.07 c
418.859 167.152 427.816 176.133 438.863 176.133 c
449.91 176.133 458.867 167.152 458.867 156.07 c
f
q
[0.998509 0 0 -1.00149 0 0] cm
543.31 -147.756 m
543.31 -146.2 l
S
Q
q
[0.998509 0 0 -1.00149 0 0] cm
543.31 -147.756 m
543.31 -149.313 l
S
Q
562.504 147.98 m
562.504 136.898 553.547 127.918 542.5 127.918 c
531.453 127.918 522.496 136.898 522.496 147.98 c
522.496 159.063 531.453 168.043 542.5 168.043 c
553.547 168.043 562.504 159.063 562.504 147.98 c
f
q
[0.998509 0 0 -1.00149 0 0] cm
647.102 -285.098 m
647.102 -242.045 l
S
Q
q
[0.998509 0 0 -1.00149 0 0] cm
647.102 -285.098 m
647.102 -328.147 l
S
Q
666.141 285.523 m
666.141 274.441 657.184 265.461 646.137 265.461 c
635.09 265.461 626.133 274.441 626.133 285.523 c
626.133 296.602 635.09 305.586 646.137 305.586 c
657.184 305.586 666.141 296.602 666.141 285.523 c
f
q
[0.998509 0 0 -1.00149 0 0] cm
750.889 -358.61 m
750.889 -333.397 l
S
Q
q
[0.998509 0 0 -1.00149 0 0] cm
750.889 -358.61 m
750.889 -383.834 l
S
Q
769.773 359.148 m
769.773 348.07 760.82 339.086 749.773 339.086 c
738.727 339.086 729.77 348.07 729.77 359.148 c
729.77 370.23 738.727 379.211 749.773 379.211 c
760.82 379.211 769.773 370.23 769.773 359.148 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font BOIMVJ+Helvetica
%%EOF
