%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.60.1 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.5.0.944444 \\(R2018b\\). Operating System: Windows 10)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 108 111
%%HiResBoundingBox: 0 0 108 111
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font EMSDFA+Helvetica
%!FontType1-1.0: EMSDFA+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /EMSDFA+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 762 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 48 /zero put
dup 50 /two put
dup 52 /four put
dup 54 /six put
dup 65 /A put
dup 66 /B put
dup 68 /D put
dup 77 /M put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 97 /a put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 112 /p put
dup 115 /s put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB966C56AEEE4E303152D713BF57F7118DFC603E4A7CDC2E0904B8376E
D56DF637AC6598C63C446905C94BC7753D99AF74B61539AB31164DF36B3A250B
AF5AC288FBEC50CC3EC37C28B51BC4892B51E8995A5B91EEDAE22B6BB0B5B7BC
164577F1D354793310ADFD47A991A7BB4E69FFC20303D08A1B6210C2E5DCA876
DBF1735C300BA2B26F6ADB9E9DC394D91CFF5EF7F531FE4622DB505314C9B5D6
B1E6F1FB7EDD12B1F130F6B60ED29C999ACE4E74F530EB920025E71B7E37B328
59665C4533FFEF1E08D9B722BEDD031869B1D21E412FE9E8AECBA40AB0067E55
69C5691A4C60CE7A98EE6C6B205164A73911FA43E900AAA40A85A7DF3FDB23B1
33CD5A37AFE2E8D5B85BA852F9D5E5E21673B071739A6C8BE454938BFA888DBE
48A57BC6F98B1D348FB7C844D8200D57A09F8DE2DADFB2BD1F54117FC90B37D5
A6CCB783480BD63FF4923F461BD57E3C2B0B553CF0F487214553EC4363DD6F31
BE0D660E7EE8CC6D3B81EAC7287146E2973A62A93F2D1FDBDEA069B3C70416DA
D530080CAB4327269750126BDE96E554AC5E11AAC2E55968A1572611E520117D
11F4C82D368F2BC062EBBDA514B1A496E696C437FB4BFB1E7F259B0CBDBCF0E6
ECA7A5FD9914D54F80B9FE9DBDAC02C06E67D4CCE929FD5B4855AE382757B2A8
6314B55B27C43512D112A55055F988F6900E9A47653F1E3151912D490D035E17
676B62E73447D285F3CDB7889EDE2EA3C1EE03C1FA875FCBEA702A718BABC637
6B6EC5F10E04C37337FBD310EEC48581A1CB64B6E72BEB3F1C866F30C3F91B6E
2A89FF5E49303474401DBE5269797F76608269921286D3DBD55AA88FA04C8CC6
F72F3E489EFDBE0057D1A30AC4CB4EF2E3EAFA34DD44308C3C3594E48756AF07
70A67301B82B6D85299854D82196D2635BA3ED81F54FCF9FAE59756F2E6ADDE8
68C40C384042766D572104BC0D32D24F8AAE8595C68FDB743312EB4F0AA7009A
18322622CB46078209DC98035EA27EC633EFFCEF2176F20606CBC05EB704D253
B4689A388AFD12E1DB50BBD4E9E6BC7921686EEB141749DF08197BBF3EE17713
C59392F3DD76A782C035D3177F405A8152BB565A84F2DBA5B42EAC7784167F4D
502F9A3EBE731D1919A04C9EB3F53D574980419DB06EBE1A9087D77D380CF92C
B44041EF56A32BB5BA34A7CA0AB62C9B26A6DAB209B51C5B03A7CF67111921F1
87C0274013356AD77EE86853173EE63429FAC95FD5283B48329C050C008E47F8
C340DF47B849F72CF098D1B0E57C81173B9C4D28ACB7F3C6DA1BF64B5CE26D1D
A164C938816DE70DB48466B780BBC5A2125B7CD08C057FC6AC60FD3C072B30E7
71FF9A3FF3D8E6AB5BB14711CDBD3FD456DC5DEF7C1B68639CD1AAD010414F1D
009A6FD667012057B4341CFB5F95ED5B8EE3A4BAFC006FE85ACECA984558BB3A
6AA471B7A5D11E8690187CEC5F16F187B484A060154D87557318F174DD5855D9
752AB5EC99D6F4E7F778A3DE68EC89F91E423C07F8CB66BE2ADBB0BE9F6B2E1E
14377F17C0D93D9D6B3205442EAFBEE5ED773D376049FC1C3195A14ADDACBC92
CCAADCE410CFA7EDD25E68342B9B930DAAF6CDA8889F46F9ACEC58BA1B429342
F66B521C5F713BE4175236EB5E525313A08875F09385E5919E8E766EF4BA3D88
F59F32D1297468E24BE579F70C4197EED7B2520AC56F44849043E2C02EB142C7
D388AD371AE9B2441ECABF860693B740509A5879825E98BB08F5A8B1247738A4
602AB70EBF6BE4A6291BF66EC494219A8CC33494F6AAC2D34448DE71CD18D2B4
1086AC520B000326C1646AEC931138DD0198C2F4B1D8D351BD58013803F550D8
2BAC668B9DEBA5F7D9B1AEAF7CFED4450580E66A7C936F23931ACAD676EE78C3
B7897BF422623286F92799AD5DC81F63D095C5CAD4BBC96E75853083240D3CC4
B7D3A62B082D4B0222BA85D8A0E51761C66A638D1ADCEE306531EDCD6568CA33
1785D1038013F4A18E824C2C61E09AAC6C6C41D1C70FC349EB0A9C6BA1BE4C77
0B01D6048A5DB9242D8DBBC69B0E1FA326F1DD9DFA88CA5D86C6A16730B49D64
CF22DD7984FBC37945FBC52030FBD6A24E7B41A293E5D356DAFBBAF01B116866
A4F8EA61564A061F9E1B9D59410827E4895F2E576832B8F7E341FB1C5A74905A
F786C81A4069EFD47BAAA12AFF326C1E3E79FEE416A4DFDA22CA6F72186CD9B5
E1A01597ED031651CABB1182536CFEF13E5A8BD6DD07C9A1C66D9D214D17DD59
D40C688F21503C05DD78F14F6FF42C0118E58EDEB7DF7B175B86CB931E3ECAF7
6CCCE8DA1E52545997F42299F6E364747E8475DC583A58E915F343CF79E8F6EE
2D17DB9DE19345EA8A8DF70BE7FEB47D4EAEBAD3FB9B539C5AB223E89AF6D067
6053A2D493ABF25E3A054BC76475EBA4AB908C78B7F1C85514924973D4F5DBAE
5A9DB34615947F2B1E7631CD8730C92EA3242EC128B7BA7CE0BDE50744E80417
A2151B31DF98974AD599104286B000C8B6BD1D5FFF354F6955E23FA09D036455
E51ACDFF208BB3A539BEFEEEA2AC1D527980BF5D379A78060241469179ABAB9A
D96B8AD90218AC9B4CED555A78524F7BEF314D47BE682D2A2A65CE7A57E3A962
2C11B5DD7AFBAD34D130899BDE794ECD3C81896FA71C62DCCE0F96C6BD25D3D3
6E3C1EE22864C120299F80135FFEDBFAA6D338E65D506471704E881455BFF187
96212BBC1DEF3F481EDAD0A851BBC39FC02BC241B04EDA6153AE37AE48AA8354
279465ED6B826405D3B186D699212EEBA811E3651914A5E167A1E6EBDF6A4111
B364A63D002512241A59FCB7F30D1623C4D6780CC9436365DFFBD85C53F04951
A18713CC9DC87CA5A92978E7612841568C60ECF3E44C3BAC749FD88D495D179E
E0EEE87BAFA162870F81337C58546690246C0C63D8F52BDDE1AFA78CDEF8F505
0D3B59E2D2F5BBE844C2E9D4F7DF81D00B5DBE0B3C03868C6939CD22E50B42B2
F2A3D28372C1660D6D6B84CA0F35E8BD69C9DC80A66C51096F6E963F0F67895C
005BB74859AB1EA50609487315912D911D75E8580FC6A1BA7A270EF95329164A
7929884818CEE28176AE2F972D6C625ECC058DB83AF689A078A12FE4A5BEF5D4
E5F22155E1A8878EE35525F75BD0C726394C2AE681FD4155D35059867D0E4A23
32B6FBD680C5DE581B7460A71AE27287E7A34C90970BC3F28F81C54268E1D090
493E9E2C9CA0DF9B77D132E708791409C44FF0C881733A88BB7E5AFFB4568627
DDF42C853B1EC4B6F658E70CC0F1F7DACE968604601B018F78A427592C3F8DC5
9A5D4CCE92323F8E5F498C3C4317C85F7D9C56B5E7E672A0BFF5115A9B5F2BFC
ADBAD1567FDE8C83AB9995F4D80B7E5EA5D4207DEBCCF6521C4A67DBB6F6F653
164C501C949DB9F51C42B0C5AEEFF1CA22E78E90D69B52C85D37F51C9B69213F
9ED4897FC32E0D10DBC24EEA090B133B639805C82468CC9399A10487AD1594D8
9745C63918F19D869051EB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /EMSDFA+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 108 111 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
10 10.0039 1152 1152 re
f
10 10.0039 1152 1152 re
f
256.855 294.262 792.934 777.973 re
f
7.4805 w
2 J
1 j
/DeviceGray {} CS
[0] SC
256.855 294.262 m
1049.79 294.262 l
S
426.77 294.262 m
426.77 286.332 l
S
653.324 294.262 m
653.324 286.332 l
S
879.879 294.262 m
879.879 286.332 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0.707107 0.707107 -0.707107 0.707107 28.3957 3.43398] Tm
0 0 Td
/F8_0 6.98153 Tf
(Baseline)
[4.656681
0
3.881731
0
3.490765
0
3.881731
0
1.5499
0
1.5499
0
3.881731
0
3.881731
0] Tj
27.2405 -16.0196 Td
(MRS)
[5.815614
0
5.040665
0
4.656681
0] Tj
30.54319 -32.0392 Td
(+PPADS)
[4.077214
0
4.656681
0
4.656681
0
4.656681
0
5.040665
0
4.656681
0] Tj
Q
256.855 294.262 m
256.855 1072.23 l
S
256.855 294.262 m
248.926 294.262 l
S
256.855 553.59 m
248.926 553.59 l
S
256.855 812.906 m
248.926 812.906 l
S
256.855 1072.23 m
248.926 1072.23 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 19.0082 26.8078] Tm
0 0 Td
/F8_0 6.98155 Tf
(0)
[3.881742
0] Tj
-7.48047 25.9324 Td
(200)
[3.881742
0
3.881742
0
3.881742
0] Tj
-7.48047 51.8648 Td
(400)
[3.881742
0
3.881742
0
3.881742
0] Tj
-7.48047 77.7972 Td
(600)
[3.881742
0
3.881742
0
3.881742
0] Tj
[0 1 -1 0 8.28594 40.2727] Tm
0 0 Td
/F8_0 7.97945 Tf
(Mean Amp \(pA\))
[6.646882
0
4.436574
0
4.436574
0
4.436574
0
2.218287
0
5.322293
0
6.646882
0
4.436574
0
2.218287
0
2.657157
0
4.436574
0
5.322293
0
2.657157
0] Tj
Q
4.98949 w
0 J
/DeviceGray {} CS
[0.7012] SC
426.77 497.891 m
653.324 339.633 l
879.879 355.043 l
S
426.77 519.387 m
653.324 449.586 l
879.879 334.027 l
S
426.77 552.953 m
653.324 360.93 l
879.879 351.871 l
S
426.77 592.949 m
653.324 338.309 l
879.879 355.977 l
S
426.77 636.309 m
653.324 344.793 l
879.879 335.809 l
S
426.77 751.703 m
653.324 372.426 l
879.879 363.5 l
S
426.77 846.758 m
653.324 406.281 l
879.879 408.309 l
S
426.77 869.355 m
653.324 388.449 l
879.879 425.688 l
S
426.77 807.605 m
653.324 331.297 l
879.879 343.574 l
S
9.97151 w
/DeviceGray {} CS
[0] SC
426.77 674.988 m
426.77 626.48 l
S
426.77 674.988 m
426.77 723.5 l
S
451.703 674.988 m
451.703 661.219 440.543 650.055 426.773 650.055 c
413 650.055 401.84 661.219 401.84 674.988 c
401.84 688.762 413 699.922 426.773 699.922 c
440.543 699.922 451.703 688.762 451.703 674.988 c
f
/DeviceRGB {} CS
[1 0 0] SC
653.324 370.188 m
653.324 357.203 l
S
653.324 370.188 m
653.324 383.176 l
S
/DeviceRGB {} cs
[1 0 0] sc
678.258 370.188 m
678.258 356.414 667.098 345.254 653.324 345.254 c
639.555 345.254 628.391 356.414 628.391 370.188 c
628.391 383.957 639.555 395.117 653.324 395.117 c
667.098 395.117 678.258 383.957 678.258 370.188 c
f
/DeviceGray {} CS
[0] SC
879.879 363.758 m
879.879 353.105 l
S
879.879 363.758 m
879.879 374.406 l
S
/DeviceGray {} cs
[0] sc
904.809 363.754 m
904.809 349.984 893.648 338.82 879.879 338.82 c
866.105 338.82 854.945 349.984 854.945 363.754 c
854.945 377.527 866.105 388.688 879.879 388.688 c
893.648 388.688 904.809 377.527 904.809 363.754 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font EMSDFA+Helvetica
%%EOF
