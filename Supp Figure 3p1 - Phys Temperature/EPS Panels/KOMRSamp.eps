%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.60.1 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.5.0.944444 \\(R2018b\\). Operating System: Windows 10)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 88 87
%%HiResBoundingBox: 0 0 88 87
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font EZGYHR+Helvetica
%!FontType1-1.0: EZGYHR+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /EZGYHR+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 762 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 48 /zero put
dup 50 /two put
dup 52 /four put
dup 54 /six put
dup 65 /A put
dup 66 /B put
dup 77 /M put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 97 /a put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 112 /p put
dup 115 /s put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB966B88E497970A454034C6B6051CF157EA337C91EA0F0CD0A9B251F7
17A3F10D63346B8736BC472D70266D880ED1D10A02747F0C49356B5E9BE1A30A
F472D56BB3BFA252D519CB0F496D6CD5C1B236B62AF8246ECE9E5A2BB389BCB9
DADE1B3F653E89939BA3FD435171EBCB88D6BD38613C8A505F28E5A8103A6607
C71BD5BF5D79A0540FF321731769E528A168B5245E15C456E5E61E419BAFD7F9
6A9090C208F6365A058F310848E6F97F46B53A0CE347F23EBD0067DE956C8923
B10680826C75CA0122F6083D4B1C87610C4D8CCB8971252EF729CC83B7641C64
A623335FC62110D3E5C5FF9DD5D9C0E701719365B9D8C04D66B4E32AB0F1BCA7
D6388E8C78C2E63E0642B7561CB3CB96719DB29ECFA147F6CD810E63253D89B5
AB7395F40983C320B859B4BF424596618D78D3850B628BBDBF34C3A2AA98762B
E18011E3D6FECD29E1C0061751020E108B7A72C9C8FAECC5CDEF0B4D8D68E8C5
AE0A6FCC19BAC5329D5B9075D73CD8C3393AB1C289B51622644B66486FF8F591
036BC21BE5C301C179809B61A50C779553DAB366AF08F1B824E91DBD3ECBDB1A
AB03CF35BD9B3F8AF1364AB35197FD442184CABC3FB97CD1BF03E67D9D0B7B9D
8C8455257F4125CFFBCF94C72B5EFAB919E85DE42950241B1035FAB71D3823B0
62D9A4434A382F5207DD0DB7F5D1C55248CF42BC0DE2291366A1AB121665AA23
784CA379EEA1DEAA1FA85E6D75527C6487F6CA07189D7EE0F3A296F9570B5239
925576E9DBF2C87C0E917FA91FE48FD930FCCF905286D2704CC1C4815282175A
8C72F626C097C2DE4BE8131F9BD3DB6122B0896716D1A22EEDC9FEC1F497ECCC
35D8AADF26CFB2C5CC7FB57E6DF4964890E30D495B5EFC8B2ADE1B65F7229F31
690C805B109E6143A9F164C5739DE5F7385B91D6C7538C404EDEBDC782D115AF
26BD2796BE6FCE4914F26D06EF0C120B8FA116372F1627FD77C8E42CF33F9481
561001EA3DAE53516C258A53B760C61BE07D028F104C679C846EFC8453796A30
76A9D6CFDE0E3AC5F705448CB51EEB412087DA7E75D70E4D410E49E7252CD635
90DF38F9BABE78D53D4BD0C4C7F6F2DFA041029AC9DF9829923AB613793BEA1B
397CE991A2694EF715877DF55C570E8E6104CD33C946C42055C7AAC7315EF7BA
2D3363A4C1B21E3CDE464ACA1B78EB7BDF076B52CFE2F19997801E948E4DB9F5
86C728489B4276075FC5C3D7938DD7CF6F7F4CCC22E243361F2981C508021F7E
438CBCBBF33BE52CD98ABC24C36D344E551F522CDEF1A116B454B297A92140DE
50ADABDB6DBDB0998064CCC6A914CCCC81E423CA5A3BAD4DBEC244C9B678673B
3AB1F1C308C098282DCD636FEDC37FE18B67B5394CF088DE00A34D5B3CC508B3
9F62B5FA23311703FD1C91E615AB99103DF6DBBF79E59C6D00554E3770EF21AF
00CDC4469B8AC6A2535D749018F4946977C9443F333826FF8FC10471F2288FD1
476697340B063C88B81CAA66819031DB0C0B5E1C2CEB6E66A16888E7A3EFD9E6
7FF38305CF07E2A8574E0213BDDEEA804929B032AFBFFE7D4C43857FA9F54FEB
694097AF620F239BB74C2D1D1F7EBE153A80A1093744B139B5BE81896EEFEFCA
57E23C0E8F160E82790DD138D6852B5E0FEC71149EE62F399752DCA7E2B63CCD
2535DA2DF050362E02A1EBA30B69A684EA4D1471165BA647E2E74D8FB30CB3B9
9B8C0BF44887FB7146B70789B07BD0079F35EDAAC49CE700E78643AA9FE3B699
4B170E61B2833C204FBB793CB24C039A275819095F9F91C7371D6224E3F83D9F
43E9B3AA32A8151D6E9E37307D424180ADA554167F883F4CC6616813894B48EE
73F552E7EED77500705E8A27FCE5FA76EEC685757F9DF4519456D59D8418DDBD
E99A21F6C466DC90E98D3BED20BBA6D11BBCE1C25D68B7DDBA9E2D3EEFB45E63
06485A620F6CFA40462574AEF299624F249B20DC07799BE3B835B21B01CC88E1
34BFE9D78D7ECDDBEC163FFA30F51AEC5BD3E9AC3F843967D68DF4C3E8905949
FB638BFBAF463630741A740F6AFA910CA57AF13014468A2BEA307C6DD7C99E71
7E1DDC1361DBD94DFE9FA1C7BEF9D17361AC419FD720DA24F1066D740054C067
C0EAD39BD39D33F873C47B0DCEBB8E8CD872BB97147B25BE86E0C01BAE8F265D
99BE47C279B6C468C7777CEC01D9F850E45B2442A8929A1DD741E4FAE4B1C22D
714DA691EA15A6084C0F7609B5CBC0138E746240DF1D28C88C8239AEC38EAE69
B87BA39140CE7A34ACDA67629A5BC8F47FE6C0B6EE1A1EB622E333F7E4CA3346
E5D2FDC82DBB795C8C96FAF601057961E2A83826B003BF9ECF2C040BBE6BD6EB
1F700E59CE541EC84E1A83D435B2A954DB76B6859EE7D5D7BF504AB6EDE2A354
0D73EE26EC42B1917DFD1A5D0635429EC1EC645547BBBDAE5DB1663D03D6BE08
083CCE60AF5367C622CD1690775A0D22D3099C24E05FB13E58564C63EED920D4
EBCD3EF98CE0098D1F4FA88498DF500BDB846E943F459D0A6256D457D3F97024
AA6D1F5858DB181A6028D589B4BE73A530F55756F560357BF635DC22B68324E3
50AF59E720CB5F1C4F0E1776B85563CD89B34D8AACD86E178EBA4781CEF96C7C
CC0C61F79F5C6D5578D4CEC4CCA7289C802BBF0D0C082776E485BFF8342F9E5A
B73EB554D9F4A2147F96F93A57DE89837210DF7126F43D57F74E41D9D7A6636E
AE79E0955DEE8B9E24E3733A4CA11F524B945FCBBBB7871C137277C76A0F1B24
2F6C070E68D79C442D6F018193252FB1839C52D592CA3FDE0E6A31CF1729F6DC
BD931F524B3C4E467D122C1A2F61D2553398AC130CB639EA9C883705693AF536
78D34F0436E8403203FE74B02B74AA6C68BF9C4803388501B6BD5D3A850E6A84
662701ADF2B99D505683942BD0C2750994C7A7F7EBB3B913F8A3F3E82CED0793
EA8F882F5C7529F65493A9A3AEEEEE72AE14D5C60812F02B809DEAEA3365A933
546C4C38E290AC4AD5306E0D076232E89FEE84D3CF6F81FED9516EAE2FE3DA42
EE281BD15BFD88873CEB05A8D01B2BA874B52D53E9A18B6FBE1E089BA07A3803
2B96FA65C5A1CAE3516D91D398A090A00690CC41EA4BEFA0C39E7F92C82C97B2
F6EBC190E6844B7F65B6084346CCC3C966DAF895F1DB75D5C7C1BA5A4DE8CBC2
C361B1292232E1210F9C24B0B84D5278AEFDFA5D45F1D3612EB7F6BF72DD68FD
11554FC47B6786E7F7A7B6F3690F02301F55C8ECB13221AFC11CCC4C527BD9FE
9B5221210AA623A7285628EFD902B409E98ADBE47F6AA8A794AA73E7C06B5160
58B93DB406BF9F81A94CB32AA161BCDD4F201FF9606FA02786EBDE00DD6CB34E
1E9805B847EB04885E10E49B4E7C6385C87CDC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /EZGYHR+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 88 87 re
W
q
q
[0.1 0 0 0.1 0 0] cm
q
0 0 880 870 re
W
10 30.0039 900 863.9961 re
W
/DeviceGray {} cs
[1] sc
10 30.0039 900 863.996 re
f
Q
/DeviceGray {} cs
[1] sc
10 30.0039 900 863.996 re
f
257.5 127.676 570 698.707 re
f
7.5065 w
2 J
1 j
/DeviceGray {} CS
[0] SC
q
[0.999134 0 0 -1.00087 0 0] cm
257.723 -127.565 m
828.217 -127.565 l
S
Q
q
[0.999134 0 0 -1.00087 0 0] cm
379.974 -127.565 m
379.974 -120.642 l
S
Q
q
[0.999134 0 0 -1.00087 0 0] cm
542.97 -127.565 m
542.97 -120.642 l
S
Q
q
[0.999134 0 0 -1.00087 0 0] cm
705.967 -127.565 m
705.967 -120.642 l
S
Q
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0.99827 0 0 1 24.4645 3.91016] Tm
0 0 Td
/F8_0 7.01188 Tf
(Baseline)
[4.676924
0
3.898605
0
3.50594
0
3.898605
0
1.556637
0
1.556637
0
3.898605
0
3.898605
0] Tj
704.81 TJm
(MRS)
[5.840896
0
5.062577
0
4.676924
0] Tj
859.73 TJm
(MRS+SP)
[5.840896
0
5.062577
0
4.676924
0
4.094938
0
4.676924
0
4.676924
0] Tj
Q
q
[0.999134 0 0 -1.00087 0 0] cm
257.723 -127.565 m
257.723 -825.668 l
S
Q
q
[0.999134 0 0 -1.00087 0 0] cm
257.723 -127.565 m
250.803 -127.565 l
S
Q
q
[0.999134 0 0 -1.00087 0 0] cm
257.723 -360.266 m
250.803 -360.266 l
S
Q
q
[0.999134 0 0 -1.00087 0 0] cm
257.723 -592.967 m
250.803 -592.967 l
S
Q
q
[0.999134 0 0 -1.00087 0 0] cm
257.723 -825.668 m
250.803 -825.668 l
S
Q
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0.99827 0 0 1 19.1586 10.1375] Tm
0 0 Td
/F8_0 7.01188 Tf
(0)
[3.898605
0] Tj
-7.513 23.2902 Td
(200)
[3.898605
0
3.898605
0
3.898605
0] Tj
-7.513 46.5808 Td
(400)
[3.898605
0
3.898605
0
3.898605
0] Tj
-7.513 69.871 Td
(600)
[3.898605
0
3.898605
0
3.898605
0] Tj
[0 1.00173 -1 0 8.50586 19.5289] Tm
0 0 Td
/F8_0 8.00025 Tf
(Mean Amp \(pA\))
[6.664208
0
4.448139
0
4.448139
0
4.448139
0
2.22407
0
5.336167
0
6.664208
0
4.448139
0
2.22407
0
2.664083
0
4.448139
0
5.336167
0
2.664083
0] Tj
Q
5.00684 w
0 J
/DeviceGray {} CS
[0.7012] SC
q
[0.999134 0 0 -1.00087 0 0] cm
379.974 -181.07 m
542.97 -180.153 l
705.967 -172.409 l
S
Q
q
[0.999134 0 0 -1.00087 0 0] cm
379.974 -181.452 m
542.97 -205.744 l
705.967 -195.054 l
S
Q
q
[0.999134 0 0 -1.00087 0 0] cm
379.974 -239.546 m
542.97 -247.368 l
705.967 -219.517 l
S
Q
q
[0.999134 0 0 -1.00087 0 0] cm
379.974 -169.271 m
542.97 -176.663 l
705.967 -173.787 l
S
Q
q
[0.999134 0 0 -1.00087 0 0] cm
379.974 -224.247 m
542.97 -197.727 l
705.967 -188.313 l
S
Q
10.0062 w
/DeviceGray {} CS
[0] SC
q
[0.999134 0 0 -1.00087 0 0] cm
379.974 -199.117 m
379.974 -185.34 l
S
Q
q
[0.999134 0 0 -1.00087 0 0] cm
379.974 -199.117 m
379.974 -212.89 l
S
Q
404.641 199.285 m
404.641 185.453 393.449 174.242 379.645 174.242 c
365.836 174.242 354.645 185.453 354.645 199.285 c
354.645 213.117 365.836 224.324 379.645 224.324 c
393.449 224.324 404.641 213.117 404.641 199.285 c
f
/DeviceRGB {} CS
[1 0 0] SC
q
[0.999134 0 0 -1.00087 0 0] cm
542.97 -201.533 m
542.97 -188.86 l
S
Q
q
[0.999134 0 0 -1.00087 0 0] cm
542.97 -201.533 m
542.97 -214.197 l
S
Q
/DeviceRGB {} cs
[1 0 0] sc
567.496 201.699 m
567.496 187.867 556.309 176.66 542.5 176.66 c
528.691 176.66 517.504 187.867 517.504 201.699 c
517.504 215.531 528.691 226.742 542.5 226.742 c
556.309 226.742 567.496 215.531 567.496 201.699 c
f
/DeviceGray {} CS
[0] SC
q
[0.999134 0 0 -1.00087 0 0] cm
705.967 -189.816 m
705.967 -181.234 l
S
Q
q
[0.999134 0 0 -1.00087 0 0] cm
705.967 -189.816 m
705.967 -198.395 l
S
Q
/DeviceGray {} cs
[0] sc
730.355 189.973 m
730.355 176.145 719.164 164.934 705.355 164.934 c
691.551 164.934 680.359 176.145 680.359 189.973 c
680.359 203.805 691.551 215.016 705.355 215.016 c
719.164 215.016 730.355 203.805 730.355 189.973 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font EZGYHR+Helvetica
%%EOF
