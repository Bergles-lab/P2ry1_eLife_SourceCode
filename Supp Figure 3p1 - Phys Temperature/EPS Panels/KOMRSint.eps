%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.60.1 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.5.0.944444 \\(R2018b\\). Operating System: Windows 10)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 88 91
%%HiResBoundingBox: 0 0 88 91
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font HDXPLI+Helvetica
%!FontType1-1.0: HDXPLI+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /HDXPLI+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 761 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 77 /M put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 97 /a put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 112 /p put
dup 114 /r put
dup 115 /s put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB9716983BDC688427A6E47D33CF11642E28874AA6F7CA499F7345C693
5DCDC22242B8009624BFFB155BEA9B778C8551A847C742AD0C599B89FE8091AA
72F7C799BF883152518CA99B00F4109377E3FA7CB212F325E3CC0D096B85E9C7
931BFF30A6D5094E4160C5F9DC0AFA0729510F2B75E493C09F3C3530FB6AB8E3
88BB3B579EC35F360CF76C0ECC7C843DF5F3A17B22D2200C2EFEC6215E8E95D0
3BF324A4B976D0DB90F4BCF7DB18D452691698720679683E479D821CB39C268C
2CF347BC41E9F0AD2D5D520A378DEECEBA70D079D70D7C2F7561D2BFE1B60A2E
E9F1309622E506AE3432A0B9DFC393DB8EFFB1F70715E2F81EAAD89FC9073351
EB03897C75ACAFB92444EA0E00DF73A26DAA17BE8551E4E5BD425B89B7991D40
C3C66C94307E1251787F2A43E66EBCB7C783820F44BBB9616973A49B686B1948
5EAC5A3AF254075159709DD0FA01F03CBEF9CB2E6B2A03DDE5E91F67076F8033
E4F7031BB318AE718FB953B6C05AF3E2D863D79805A0C61360AA1B8F14963E1B
EEEDA7B0699F428B60BAA29E6688D05B9154B06D33E2ADEED191AA1C2A5D6FFD
2CE8ABF0898685E1F7189357D51B4A25AA1343D7B2E3E7BEFEF3886AEA102356
845C4BD2DC220BC15F34FFEE165430851DF0D4A0689DBF406331D88A2F361140
95F7287276B64A0BA471BF7F5FDCFA1D50AEAECF3C7DF4DCDA25C98A27B2EFD8
67FBCF0B0F0BADDED4B09098AF6316C07BED26D8C7DF9162B32232FB6ED53E88
E3CABA07402715BB3A23DA0601EC022D72D49717F2A08BBCA29C9FDFECFBBBAB
120E5A1C60B96D11B52E41022D2C8A5C864013CE07B844B306756786472008C1
F4DCD8CF577F57FF8F989002301F4D41AD48691C63489CF7F7B0B535A8BE96A2
0F3EBF0ACCA2D9A9DD3A30D745871ED9367E17D76355EC0C7EF04F2A0CEB5FFB
D962B4D42741E95854D67B5C54A32E5BC51C18FB8B5D38C1E95DB29A8EB86F24
1C0875587FEF733744BDEDBBC85ADC37B6DF4D0F3833A3556447AD8ED6124066
7291368098CFC96E5355CA5380F820BBC7022818B77E7FD31862FFE0040F6515
6B5BAD3B1E9A8F50C37C21BAD40EAED24D66BB02E27BE9049FF8B28A910A7B57
5D99C9A9631A81250F4CB8A0FCFB0904095A076BB71FEE153C1AF086358CD7A6
F2A3F7E2D13E4581E502735B084B03EE9D6FD7BC55D8197D29A42D6019573CCE
BE50EC3BAB1F8FC9ADA432744F7B965D0C977AAABE60DD3025EC989AC5751FD4
472503FDD31E7702B10B1307DEB5D2733FB94DEE6B3AB9B7606AEFAF90810E92
FCB90B44F6854EBBDAD5ADB3A7CD7FBB924364C33D1D2903DE2AA0B41C8F6268
681C1883EDF9F3D19447AA467B8E65D55B31AD70BDF6BE815614F00F8FDF19E5
6AEC48183EF3AC2321B4BB2DD04EC56F20938718F3C4FFADF023C0B619825B12
D6A32AA3E631FE99945089311188579D8BD2D69BAB7E652F39B0CBBD249A6D5C
0FE05D4719E9D531153921E3DE1774E82EAEDF051F065CBA48F800EC3A4B1EB2
8C3771C53BCF3CEE52E83FBC43EDBC84CF6E348F5ECA06682B7EEA54D1125A5E
E44CAE532A6E2EC5FE54C4567F2FC14099C98616D5AD9B2935E627C18B02475C
D7DB23412B52375215022DEAD978AF4888F41E67F6C7435A52B35E38ED68FD20
DB2FB033640265A381D405399DA76E92A98E18F337C4E8F44647159D876F2B4E
4C184221462F9AAAAA09DCED90EF1E75A495974174253A7C5444F77455973CB4
B9244B129364DD9341071EDEBEB945B3F0C1EBECCAF22E5658D746FABAD47781
32FED0B05D21FD90A6849B3839D3015C17103B9A92171D19F5A31C9730D44129
CF9A9275B8F9F89C8C4FA5B1637EE1CC8F4EA72F9AEA4E4F3E2D398CF05F04F6
2CAE4AE040DDAF165CB796F33193D1E8CF7346BA46F7718D59DD2CD2E3DEAD7D
077C983A57A8A2D57D542DA32FCF8329B37C6A0A0511F1C56C6247F570DA006F
EB5523AC31EA4EB861BDD4EA05679EE40B6AF037240D80A7EAD299BD26CDBC92
0FFCC0C318535D3719A06401CF0FCDFE78CA606083C37C49B73CB5E5E7A7CA54
B925692D2A41B07CA3226027D3083CBFD8D86C8EA541F03102611C3C04CC048B
B5D3D095E3987DEFDEEAF165C8817A2BE81C8E80662B332A43926AB18AFEC556
47588ACDAD6AD40B7B050C53A191E5C956951F8BD2283B42A6351B404A9E3432
3FE8DA9A2CC8CE69762E4A90F50DC26CF9499D50BB9C3966552D7BF0DC3D8217
08792DDB0CC6994E87121C7288270D42DE4AD1F843FB1461C860DA2E27F15802
9874533E42D862AA9E84920A3682A93AA3199502B5355853E9EA3015D5526B37
55DCA30E0910B655891732A5A20BA5A15A5931385F954F97452E3EE9E574DA7F
B18EA9F25191FA8ECB81272BF248DF831C0FEE54B6E143B4068F860D2CADBE6E
BB4858E2109F8E8CB57B7F2AB0E2EC1B6D23B53E7B569860BA7AC7CF475AA086
6087FDEE2FDAF670FF5D195B50B9973CAFFBCC8FBA31E5366D5A93BB8B659C71
0A972B9E245FBBDC6B9881AC173CF8238C695420ED3A0AAF273B9F54C32CA020
2A9D34922291D708EF2EBE26E8CF29428A110297126025E7CD7C69E048414C63
21ADB5D9A177595BEFAE6B8CBFB9A69DB8C93F85504892407C13FB3CCD160EFC
A7F65BC046BFC6808B82FCF2E9D9BF0AA4DF5A927A5E77682FE2B7C5150D6105
BEA27E79587D643D4EBBE81C31DE741AFFC2BBE50AAF0DFA0B338A7FD8B740E7
F4ACAA5C2A15AF6EB94287991F6748CDA92B8BC65E34F21FECC93552F09FB216
71157FCE10DFCCDC6AB0BA641EB8F87F93E2D3394FE565510735CF589F61A1E0
D905D70C1567351FE0B65415645CEF266B7686DBF51F43971E90F449C1708597
26997F7DECB9A18C0304E08C5C42AAC22D8567699819FD1FA81FED57632419D0
AC1BCF59516CC99B6FF383999EB1F53FB21A8B3E9FD92B77BAA36335F9130873
F5DDAA7FA8774D121C56483B21385D7592C7FDC51BDA2450248FC9F0AAEDE357
08204CFA9C1E083147DDDC2E231E6B67A42E74033DD56A31107804B24811D7A1
387E8F76941947F52E66D7BC8420E0CAA62458509416C904279ECD20BBB29327
ED9152C992C7393124196520BC29253CAE9DE26E563832DD61A7B6D9374AF2E4
7865C0746A92E8053E1178E15DA578F6613295293BFA77E1F3824722CD80ECCC
3FE19FFCEDB809E958B4C95FEB4C46E3BFB712942BCFC000255778EB827DA33B
7D6D664175156A695309E25BBE4355D2BEA9909B9E77BFC39840ECF557DF6316
6215217D20F35003BF7AE99A3A6D906E0E11B6D5F29084622CF2F2985F6F8CE3
038CBCB507375733C244A7014DA885353AF51C63E9E52D475BAD550E934902B9
E8A4E32C210769CB5F653C96B995883CE2D81CF4D667911591EA82E09FE266B9
D340792131876A1CB5BFC76E3DBD169F2A4C590164985D0F563B59326433C931
56BEFD8203AAEF19619EB28CB43BA7BDCEB136ADACEE1BF050D7A00CB607E304
9F3538D7300C135270117BB5355F574E1F1815C980073222FC1BE30B8D208101
816284CC9D7C5BC42A51F7BBDFE72F12C7BC10A6E1EFF280412461A582AD7B6D
3BB99EC4E5CCA269C008C4CBD8152D11FC5676CBE402688E3D6AD411FD4E05B6
A5C5251B580552B63EFD7C4CC2DDB40CF4F2475EDBEF206DB23F70E616E9F23A
454A1974FC54636B9F8C2AAF4493204C20D9F18F74F564C367CB316ADE8429CA
9342AF598F68BCFD8A942E12EFDF5C333063F89829F80E45EC5061AE398D00EB
21306A994D0BAC6CD3AC1A56400CC73D989E6A023E873C80CD2D3EB9334763BB
A1E3925DD81C0ECA548B5310378D00D4232305B952D1826BAD620ED01C8496CC
A03D0C9BF301154CB67627F2A7ABC181117C9D317C068E9BE34333E226431032
0D91FB176D99439C6184CDBD19C06E3C891E6573AB64F4C9E6B24138687190AA
D7FEAB66B065F4BEDE9193D25E4C1C8AEA2ECD98B8D2C67E8CDAF69441C0510C
6B65956CF34E203DF690DDBCD6429C93F78DF85E1288DDC9AAA5C09BF338A470
B9D4343C1D06BFD21231F090B5709832AEBD3351FF1313EB798C737D889E0A67
CB20CF6C47EF3D6EE894B1F119A8ECF799A10F6D95AC0DE7FDC82BD0EC1486BC
6B80C579A2DBC9D85FAB5B4FBBAC54010DA802828A2DC341949CBCB7C8ECBD54
139EAFBBD0504D9FB7982A48BAE4C0555AA7533999EE0951D2EBA40C56245C8A
978476A924C928C4ADA847E7BE21B00AFFCFD9D18F9A01BF937673DCB6292247
868267EB839891F1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /HDXPLI+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 88 91 re
W
q
q
[0.1 0 0 0.1 0 0] cm
q
0 0 880 910 re
W
10 30.0039 900 863.9961 re
W
/DeviceGray {} cs
[1] sc
10 30.0039 900 863.996 re
f
Q
/DeviceGray {} cs
[1] sc
10 30.0039 900 863.996 re
f
257.5 127.676 570 698.707 re
f
7.5065 w
2 J
1 j
/DeviceGray {} CS
[0] SC
q
[0.999134 0 0 -1.00087 0 0] cm
257.723 -127.565 m
828.217 -127.565 l
S
Q
q
[0.999134 0 0 -1.00087 0 0] cm
379.974 -127.565 m
379.974 -120.642 l
S
Q
q
[0.999134 0 0 -1.00087 0 0] cm
542.97 -127.565 m
542.97 -120.642 l
S
Q
q
[0.999134 0 0 -1.00087 0 0] cm
705.967 -127.565 m
705.967 -120.642 l
S
Q
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0.99827 0 0 1 24.4645 3.91016] Tm
0 0 Td
/F8_0 7.01188 Tf
(Baseline)
[4.676924
0
3.898605
0
3.50594
0
3.898605
0
1.556637
0
1.556637
0
3.898605
0
3.898605
0] Tj
704.81 TJm
(MRS)
[5.840896
0
5.062577
0
4.676924
0] Tj
859.73 TJm
(MRS+SP)
[5.840896
0
5.062577
0
4.676924
0
4.094938
0
4.676924
0
4.676924
0] Tj
Q
q
[0.999134 0 0 -1.00087 0 0] cm
257.723 -127.565 m
257.723 -825.668 l
S
Q
q
[0.999134 0 0 -1.00087 0 0] cm
257.723 -127.565 m
250.803 -127.565 l
S
Q
q
[0.999134 0 0 -1.00087 0 0] cm
257.723 -302.09 m
250.803 -302.09 l
S
Q
q
[0.999134 0 0 -1.00087 0 0] cm
257.723 -476.615 m
250.803 -476.615 l
S
Q
q
[0.999134 0 0 -1.00087 0 0] cm
257.723 -651.143 m
250.803 -651.143 l
S
Q
q
[0.999134 0 0 -1.00087 0 0] cm
257.723 -825.668 m
250.803 -825.668 l
S
Q
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0.99827 0 0 1 19.1586 10.1375] Tm
0 0 Td
/F8_0 7.01188 Tf
(0)
[3.898605
0] Tj
-7.513 17.4676 Td
(100)
[3.898605
0
3.898605
0
3.898605
0] Tj
-7.513 34.9356 Td
(200)
[3.898605
0
3.898605
0
3.898605
0] Tj
-7.513 52.4036 Td
(300)
[3.898605
0
3.898605
0
3.898605
0] Tj
-7.513 69.8712 Td
(400)
[3.898605
0
3.898605
0
3.898605
0] Tj
[0 1.00173 -1 0 8.50586 4.87852] Tm
0 0 Td
/F8_0 8.00025 Tf
(Charge Transfer \(-pA*s\))
[5.776181
0
4.448139
0
4.448139
0
2.664083
0
4.448139
0
4.448139
0
2.22407
0
4.888153
0
2.664083
0
4.448139
0
4.448139
0
4.000125
0
2.22407
0
4.448139
0
2.664083
0
2.22407
0
2.664083
0
2.664083
0
4.448139
0
5.336167
0
3.112097
0
4.000125
0
2.664083
0] Tj
Q
5.00684 w
0 J
/DeviceGray {} CS
[0.7012] SC
q
[0.999134 0 0 -1.00087 0 0] cm
379.974 -159.487 m
542.97 -149.234 l
705.967 -150.631 l
S
Q
q
[0.999134 0 0 -1.00087 0 0] cm
379.974 -163.12 m
542.97 -201.856 l
705.967 -182.518 l
S
Q
q
[0.999134 0 0 -1.00087 0 0] cm
379.974 -208.035 m
542.97 -217.897 l
705.967 -202.824 l
S
Q
q
[0.999134 0 0 -1.00087 0 0] cm
379.974 -149.062 m
542.97 -149.624 l
705.967 -154.963 l
S
Q
q
[0.999134 0 0 -1.00087 0 0] cm
379.974 -193.364 m
542.97 -179.388 l
705.967 -167.031 l
S
Q
10.0062 w
/DeviceGray {} CS
[0] SC
q
[0.999134 0 0 -1.00087 0 0] cm
379.974 -174.614 m
379.974 -163.476 l
S
Q
q
[0.999134 0 0 -1.00087 0 0] cm
379.974 -174.614 m
379.974 -185.753 l
S
Q
404.641 174.762 m
404.641 160.93 393.449 149.719 379.645 149.719 c
365.836 149.719 354.645 160.93 354.645 174.762 c
354.645 188.59 365.836 199.801 379.645 199.801 c
393.449 199.801 404.641 188.59 404.641 174.762 c
f
/DeviceRGB {} CS
[1 0 0] SC
q
[0.999134 0 0 -1.00087 0 0] cm
542.97 -179.598 m
542.97 -165.849 l
S
Q
q
[0.999134 0 0 -1.00087 0 0] cm
542.97 -179.598 m
542.97 -193.352 l
S
Q
/DeviceRGB {} cs
[1 0 0] sc
567.496 179.754 m
567.496 165.922 556.309 154.711 542.5 154.711 c
528.691 154.711 517.504 165.922 517.504 179.754 c
517.504 193.582 528.691 204.793 542.5 204.793 c
556.309 204.793 567.496 193.582 567.496 179.754 c
f
/DeviceGray {} CS
[0] SC
q
[0.999134 0 0 -1.00087 0 0] cm
705.967 -171.598 m
705.967 -162.028 l
S
Q
q
[0.999134 0 0 -1.00087 0 0] cm
705.967 -171.598 m
705.967 -181.167 l
S
Q
/DeviceGray {} cs
[0] sc
730.355 171.738 m
730.355 157.906 719.164 146.699 705.355 146.699 c
691.551 146.699 680.359 157.906 680.359 171.738 c
680.359 185.57 691.551 196.781 705.355 196.781 c
719.164 196.781 730.355 185.57 730.355 171.738 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font HDXPLI+Helvetica
%%EOF
