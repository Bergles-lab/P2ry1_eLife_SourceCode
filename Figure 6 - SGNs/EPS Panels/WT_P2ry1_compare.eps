%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.46.0 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.4.0.813654 \\(R2018a\\). Operating System: Windows 7)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 87 93
%%HiResBoundingBox: 0 0 87 93
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font DZUZHX+Helvetica
%!FontType1-1.0: DZUZHX+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /DZUZHX+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 644 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 70 /F put
dup 72 /H put
dup 83 /S put
dup 99 /c put
dup 101 /e put
dup 105 /i put
dup 107 /k put
dup 110 /n put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 117 /u put
dup 121 /y put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB966C56AEEE4E303152D713BF57F7118DFC603E4A7CDC2E0904B8376E
D56DF637AC6598C63C446905C94BC7753D99804EB624FA54222D76E41B5E9430
8526D1AB6C5F687532BCC02EEE694CEE8278FD0F3537C7F6309867F2EC0E5A44
D54EE72359D6427FB8CC02902618511A687CF91B8CA02733C8E8DA1E52545997
F42299F6E329E9FE964DF64F93E838646DCDD43EACB61CA50BBEB8DDA2C15AAD
216F26BEA53CC2C91D77143F878408C65703D80E3A6C9F5181E34B360AA5349F
EA92CE8084573FE06803A285404A9D5787829755E811D76EE50A62BB530A2278
DBAED6CFBEC1EB1E91BE45EB34EE95F01252BE49CA9FFC29C36EF7DB3DE8885B
32FDD0F580B92B04413364C4C735914DE1D7BED4319C868007644DCF0D025545
0C3F5C47AF858C0940736A5E4DFFEE294FF09C81081459F3CDDC2B9B2A5E855A
0902877166FB866BC13FFF9B0A1C7D94DA2C1BE8BBC8B08750192A79927F1AB0
A0589EAAE8CD508B9209143ACFAE375853A079404F9D4A39EECBBB807B47B29B
4FF8E53AC314D5ED47159B3CB2B94C332013BFBC03E4838AA1A070B30B8310C0
0506EE7352E19768F9C9FDA44A951C78979D98210AB0AE6D10D84CF28A7047A3
7030A26E600CEBDBFCD5F4A432073EF33BADFC150DDCF85E8BA401AE020DD20B
EFDB1EF314775B62E174FF070D14C291BDC1054557878942DE66F0E4259804C8
FC36433FE1D47F1563E6795843A06D90DBC44A3AC55377B26C47C754ADA9B2BD
D675A5603F5DBE7CE49BE4E33B2CF7542A36D75AD1C2CAD1015B63119209305C
0329633D3F05551912A8D441052B3ACF875212C69F105CCE499BDA69E15D8BAD
568BC083F2D12902C9D9DE0B30BD182C78932AADDB79AC62AB6BB894DBD3F5F9
65E32A9EA927602D90792FAAE013EDD4E554C9A057C8C5F5CAFBE812FF3A06FA
54B46F50C19FDD4BD165CE414A582A3AB14550E0283D46FA3D880FCA7D64D1EA
4E830D539EBC69F084C7E5BE1301EF146643D2FD31963713E4051DAA59DE4FA6
2217DF26114F263943D3325242E9ED883EC69C261284C23BC7E9543C3AA03E2C
2ED3F9BEE46804966DF37F80B0C24C4434BA7F77B34F5C15D8367129DE2EF268
D0A4645407ED585EC053959188D730AB1CCC47F3A9DE3403744A34FFD153B084
941501CEEF6648D52946A2BCB6FF6D45E4A492806863A09F4DE2F7AD64421E47
BD0EDAE0C63106C92D192C6AB9FB95AD0E251A444032E1B43A141DC41617D874
D2A8D06E537FE98012F4E80092E937D48135C1D7CDC57C50E83052352F6136C6
23E4BC26FCA2BDB39DCF02A82810A6C79A5CA3CB1A60D87E6B3940F44AFB3CFF
BC5E2FA2DC0B45868A89541AB97B47A0E6D11E3E89CEAA067BCB4C56C97F7DC6
B4EF4E612AA7319FB439351FBA24A10514B8DBB360CA3C16C1FDD70B45498069
793123B77BCDF010A274EF85D92C1BECCEBA753AB3D347539FABE143C795CE2C
0546F7F1C3D506369A2B54C560C472F8891932F7E826300B9875B1E9B39EC2AC
B32C73CE39576ACD09DD85E0041EB7F724ED50675B36853E6AC123D3935C6034
DB1499814C0BAE8CCA29BF48CC8BFD42035A6121A6F702581E5C50B8F9F2D25C
E060DC65F8560818350AEBA6BEB2D4972681B6912E103B421B9225725BB25270
2F7E0160EBE686F0CB12E6311BD1666F07BE69EBC9037B4C4A4AADA8CB9B6F53
13BCB60B4BE7FF97ED6F947E461B292D76CC3A2FC74FC29B5182C765CD71FDB8
DBE9A27A7F076ABDBA3C273404B33D39F2CDE85299BA51EBE334CC3A9796E784
08CB8B63CD0FBA5389F3EE24A0D4BF131359F83C32A84F5F9407262665BF44E9
52C878FAB02A95F5296511D567EE87C7646B71C410CD00C54433F0575C7ACA87
52CE0DC1D0FC0855EADAD570CF0BCBB14C75C3A558D21C8BB9A5F2D11E4BC437
1E1F510A3FF82CB8D077FC29FBEE58744EE7F1A105C0625F2C8C9FCC297F05B5
D0B2B31E198E697CF6BDE4ADCC5C46B01C1818AAC952A16502C4B5760522F819
33BA28A15B7A86F3171250E570C652CF5FB811DCC5A393B4AA052640A45679EB
51D563481AA0A5FF5F7B32D78CCAB351D1FB7696A4779618491607B60932C0FC
560322E5980C6CBB87B8A25C430651CA05FD23A30B7990AA8F3DE41B1AB92F0E
9D639DECD5D5DF37677B35B135AFAB27258EC1A117B27BAFB24570BA275C7E20
059EBF73642B04E8DB9637021B1B59B33020654809A804999749C9BF1CF95ECE
2DA532CE9C64C3A8525243CE2E4A06988587551211A4A0DFECDA06D057AE50A8
C5D9AF311BAA18E38A0C955550140884493187BA37A75C86A0C395AA2768AB4B
BB03C31B8F066796EFC9F850C53317E38FB2EF1CFCB0B9465F6FD9FF1CC7CF69
DCA4C6F488A01D58A6A6D360FC12158463C83B8B53225A5EC9E725FA3012BE48
8A1C117281213C2C16883289A8AA44F1863E74500BD9DC5E725CCA2B705BCBA1
F98A4DEA9F8B070BC30653EE2EB53B9622764B667AA8939F8CF0A49E5D65BB7F
B9AB94655209A267F43BEA96C9DB6400BDB1D2E6CB799B52733D4A62DD5E892D
803DCC49D8E1ABAF50D6EB53180E85CE84EBCDFDD19EFC5EC5A1724207B9E1E9
44441AADA91E00AFFE2715F1AC69018A6AF9AC5FB78368FFDEBADC774EEDD717
82F38E8D96D4D2386A926DF275AB34EFE3462D8FE11904D4655519D963DF68C3
DE6911614CCC8EEDB896B9FA9F94EC48098D5D82E8B75D42F6CD063581A6B062
BE58C825536E0009BB4567E3411CF15064D7038ECCA4346EB5D79D48A9B89AB7
AA9E56A9587C0092F55C8A63F7FB3848BB5729BD9B35E1A93AF26CBCCCE7CBC0
CE724C1EF73C15B072F9A0751DDA4782DF11CCCAA2460A52D5C72A04B46F874D
FE0FDA760FC1FA6275EC468BCE94486EC16DD9BEA79A0FACB6488B387113DE71
B93E737D3686D5A2D778D64C1B1769709F9907C45F9E532DDEDB4EA2CA5916FD
44174162356E9B1B79BFBCD7E9A98AFCD8ACC97EEC68EE69642FEE7DD5134AAD
7C32BDBB673AB7E407B992DB68EBE135DC5F8E810D2DA7AD74F9BC274D4FCEF5
1A6550EF033D774129D41BD1945460FAC82F6FA01FD8547A99E3D142621997
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /DZUZHX+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 87 93 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
-20 0 870 937.5 re
f
-20 0 870 937.5 re
f
175 120 652.5 765 re
f
7.5 w
2 J
1 j
/DeviceGray {} CS
[0.1489] SC
175 120 m
827.5 120 l
S
175 120 m
175 112.352 l
S
392.5 120 m
392.5 112.352 l
S
610 120 m
610 112.352 l
S
827.5 120 m
827.5 112.352 l
S
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 15.25 3.08516] Tm
0 0 Td
/F8_0 6.99975 Tf
(0)
[3.891861
0] Tj
-2551.25 TJm
(1)
[3.891861
0] Tj
-2551.25 TJm
(2)
[3.891861
0] Tj
-2551.25 TJm
(3)
[3.891861
0] Tj
Q
175 120 m
175 885 l
S
175 120 m
167.352 120 l
S
175 273 m
167.352 273 l
S
175 426 m
167.352 426 l
S
175 579 m
167.352 579 l
S
175 732 m
167.352 732 l
S
175 885 m
167.352 885 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 10.8352 9.375] Tm
0 0 Td
/F8_0 6.99975 Tf
(0)
[3.891861
0] Tj
0 15.3 Td
(1)
[3.891861
0] Tj
0 30.6 Td
(2)
[3.891861
0] Tj
0 45.9 Td
(3)
[3.891861
0] Tj
0 61.2 Td
(4)
[3.891861
0] Tj
0 76.5 Td
(5)
[3.891861
0] Tj
[0 1 -1 0 7.58516 12.75] Tm
0 0 Td
/F8_0 7.70025 Tf
(Spike Frequency \(Hz\))
[5.136067
0
4.281339
0
1.709456
0
3.850125
0
4.281339
0
2.14067
0
4.704853
0
2.564183
0
4.281339
0
4.281339
0
4.281339
0
4.281339
0
4.281339
0
3.850125
0
3.850125
0
2.14067
0
2.564183
0
5.559581
0
3.850125
0
2.564183
0] Tj
Q
/DeviceGray {} cs
[0.7012] sc
409.008 150.602 m
409.008 165.727 396.754 177.984 381.625 177.984 c
366.496 177.984 354.242 165.727 354.242 150.602 c
354.242 135.473 366.496 123.219 381.625 123.219 c
396.754 123.219 409.008 135.473 409.008 150.602 c
f
409.008 245.461 m
409.008 260.586 396.754 272.844 381.625 272.844 c
366.496 272.844 354.242 260.586 354.242 245.461 c
354.242 230.332 366.496 218.078 381.625 218.078 c
396.754 218.078 409.008 230.332 409.008 245.461 c
f
409.008 176.863 m
409.008 191.992 396.754 204.246 381.625 204.246 c
366.496 204.246 354.242 191.992 354.242 176.863 c
354.242 161.738 366.496 149.484 381.625 149.484 c
396.754 149.484 409.008 161.738 409.008 176.863 c
f
409.008 178.395 m
409.008 193.523 396.754 205.777 381.625 205.777 c
366.496 205.777 354.242 193.523 354.242 178.395 c
354.242 163.266 366.496 151.012 381.625 151.012 c
396.754 151.012 409.008 163.266 409.008 178.395 c
f
409.008 205.68 m
409.008 220.809 396.754 233.063 381.625 233.063 c
366.496 233.063 354.242 220.809 354.242 205.68 c
354.242 190.551 366.496 178.297 381.625 178.297 c
396.754 178.297 409.008 190.551 409.008 205.68 c
f
409.008 197.52 m
409.008 212.648 396.754 224.902 381.625 224.902 c
366.496 224.902 354.242 212.648 354.242 197.52 c
354.242 182.391 366.496 170.137 381.625 170.137 c
396.754 170.137 409.008 182.391 409.008 197.52 c
f
409.008 212.566 m
409.008 227.691 396.754 239.949 381.625 239.949 c
366.496 239.949 354.242 227.691 354.242 212.566 c
354.242 197.438 366.496 185.184 381.625 185.184 c
396.754 185.184 409.008 197.438 409.008 212.566 c
f
409.008 179.672 m
409.008 194.797 396.754 207.051 381.625 207.051 c
366.496 207.051 354.242 194.797 354.242 179.672 c
354.242 164.543 366.496 152.289 381.625 152.289 c
396.754 152.289 409.008 164.543 409.008 179.672 c
f
409.008 179.16 m
409.008 194.289 396.754 206.543 381.625 206.543 c
366.496 206.543 354.242 194.289 354.242 179.16 c
354.242 164.031 366.496 151.777 381.625 151.777 c
396.754 151.777 409.008 164.031 409.008 179.16 c
f
409.008 166.664 m
409.008 181.793 396.754 194.047 381.625 194.047 c
366.496 194.047 354.242 181.793 354.242 166.664 c
354.242 151.539 366.496 139.281 381.625 139.281 c
396.754 139.281 409.008 151.539 409.008 166.664 c
f
626.508 166.41 m
626.508 181.539 614.254 193.793 599.125 193.793 c
583.996 193.793 571.742 181.539 571.742 166.41 c
571.742 151.281 583.996 139.027 599.125 139.027 c
614.254 139.027 626.508 151.281 626.508 166.41 c
f
626.508 222.512 m
626.508 237.637 614.254 249.891 599.125 249.891 c
583.996 249.891 571.742 237.637 571.742 222.512 c
571.742 207.383 583.996 195.129 599.125 195.129 c
614.254 195.129 626.508 207.383 626.508 222.512 c
f
626.508 155.953 m
626.508 171.082 614.254 183.336 599.125 183.336 c
583.996 183.336 571.742 171.082 571.742 155.953 c
571.742 140.828 583.996 128.574 599.125 128.574 c
614.254 128.574 626.508 140.828 626.508 155.953 c
f
626.508 253.875 m
626.508 269.004 614.254 281.258 599.125 281.258 c
583.996 281.258 571.742 269.004 571.742 253.875 c
571.742 238.746 583.996 226.492 599.125 226.492 c
614.254 226.492 626.508 238.746 626.508 253.875 c
f
626.508 224.039 m
626.508 239.168 614.254 251.422 599.125 251.422 c
583.996 251.422 571.742 239.168 571.742 224.039 c
571.742 208.914 583.996 196.656 599.125 196.656 c
614.254 196.656 626.508 208.914 626.508 224.039 c
f
626.508 190.891 m
626.508 206.016 614.254 218.273 599.125 218.273 c
583.996 218.273 571.742 206.016 571.742 190.891 c
571.742 175.762 583.996 163.508 599.125 163.508 c
614.254 163.508 626.508 175.762 626.508 190.891 c
f
626.508 179.926 m
626.508 195.051 614.254 207.309 599.125 207.309 c
583.996 207.309 571.742 195.051 571.742 179.926 c
571.742 164.797 583.996 152.543 599.125 152.543 c
614.254 152.543 626.508 164.797 626.508 179.926 c
f
626.508 268.664 m
626.508 283.793 614.254 296.047 599.125 296.047 c
583.996 296.047 571.742 283.793 571.742 268.664 c
571.742 253.539 583.996 241.281 599.125 241.281 c
614.254 241.281 626.508 253.539 626.508 268.664 c
f
626.508 155.445 m
626.508 170.574 614.254 182.828 599.125 182.828 c
583.996 182.828 571.742 170.574 571.742 155.445 c
571.742 140.316 583.996 128.063 599.125 128.063 c
614.254 128.063 626.508 140.316 626.508 155.445 c
f
626.508 168.449 m
626.508 183.578 614.254 195.832 599.125 195.832 c
583.996 195.832 571.742 183.578 571.742 168.449 c
571.742 153.324 583.996 141.066 599.125 141.066 c
614.254 141.066 626.508 153.324 626.508 168.449 c
f
626.508 194.715 m
626.508 209.844 614.254 222.098 599.125 222.098 c
583.996 222.098 571.742 209.844 571.742 194.715 c
571.742 179.586 583.996 167.332 599.125 167.332 c
614.254 167.332 626.508 179.586 626.508 194.715 c
f
5.0025 w
0 J
/DeviceGray {} CS
[0] SC
392.5 189.254 m
392.5 180.75 l
S
392.5 189.254 m
392.5 197.762 l
S
/DeviceGray {} cs
[0] sc
409.164 189.258 m
409.164 180.055 401.703 172.594 392.5 172.594 c
383.297 172.594 375.836 180.055 375.836 189.258 c
375.836 198.461 383.297 205.922 392.5 205.922 c
401.703 205.922 409.164 198.461 409.164 189.258 c
f
/DeviceRGB {} CS
[1 0 0] SC
610 198.262 m
610 186.496 l
S
610 198.262 m
610 210.031 l
S
/DeviceRGB {} cs
[1 0 0] sc
626.664 198.262 m
626.664 189.059 619.203 181.598 610 181.598 c
600.797 181.598 593.336 189.059 593.336 198.262 c
593.336 207.465 600.797 214.926 610 214.926 c
619.203 214.926 626.664 207.465 626.664 198.262 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font DZUZHX+Helvetica
%%EOF
