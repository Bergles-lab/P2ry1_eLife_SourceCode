%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.60.1 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.4.0.813654 \\(R2018a\\). Operating System: Windows 7)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 83 87
%%HiResBoundingBox: 0 0 83 87
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font CSZBAJ+Helvetica
%!FontType1-1.0: CSZBAJ+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /CSZBAJ+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 929 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 53 /five put
dup 66 /B put
dup 75 /K put
dup 79 /O put
dup 80 /P put
dup 84 /T put
dup 87 /W put
dup 97 /a put
dup 100 /d put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB966C56AEEE4E303152D713BF57F7118DFC603E4A7CDC2E0904B8376E
D56DF637AC6598C63C446905C94BC7753D99804EB624FA54222D76E41B5E9430
8526D1AB6C5F687532BCC02EEE694CEE8278FD0F3537C7F6309867F2EC0E5A44
D54EE72359D6427FB8CC02902618511A687CF91B8C929DF1387C63B5BC5F63FE
E3DEA3BD9903872BDC5DF7737ABB2069A6A085F853C08055C60E5C0FB010C513
6685BB91961402A867D820AEBDD6FF151550625EBE6EC3D1578868D9ABFCCC45
58893E396C3D0F457CF701071213AF967EDAB94E1B3941CB75EE02C409B52FC5
233789213389B3C69ABEDFB7AC5EF9EE2CA9F75B7C2A37B5B50CC2D5B72D94AD
341C90FE5C9AED6698DF1F747E6FC6F092E37311F1D10BD5AC7E3D5A4026DDB9
B47DDFB5628A09BC849F3BF46F3A86AFA6945B9A1D7A8C2725857AA361F02DB0
44DCAC8FE4103EE7C0E36BC12602376E374B717A16925F22EE3E07862491F62E
36FACA1079FCC46B9861D40157D1C28319B00E74C191A4EC2A6D675FC7C70106
266934E65DE8DFCD23CC02FF1EFC5DC0B602F161EC19B011F5790DBBEE639EAF
4880EE209C8FD0D3C03B9DFF973E1D097F0E3CF30DF822B50E1F6AB6904D9D90
81807C82182694C3BD98E37F891A90628835043D37C63632B99DA8DA853A6AC4
23EFE18C77B17A532FF41644965EFED79E726D00C206ACDC16E809BBD901A2BF
ECC6D8634122F8D39193F9BC097B9F3D18C4F8967AB9D37E67D9DA233BF4A636
80D47C6C22D690BE71426EC06E69FC79CE3A525DFD157B0E1AE1C270C9116AB4
B99A03F9F6F03CE84D1FE03C59215D40AE35F01302CBACF0A00B6F83285D8B72
30FCEC1EC22F88AB7ABDDD2830967CD61F196E99F05F76F1796456DA62D7437E
A5DCF34D2B539E0EE500DE9E98CA8AF3E16DAE3CFA296C309F4E24D9AEC204E9
47B60881308566E7BAD96CD9182C80844DF8E459E9225AD6E4F0F59913667CFB
42B8E5D40714FB2D1F079841A4A0DB514C4874B2C1556140A2B5AC2C1D7207D5
42A54BDC0C6AC3F386C333F806C7E45096B12E8381EC14C40B7C52AF4E5D224B
9A4A781EF33BEB3BC86EF5C4BE6FF46156CE2FC907C33E03F46E61F3480C725C
E0C427136E8085DA34527029A4A2FB4616EE34C7D287BBBAE80FEDFFE346261A
11A74E9713B81115BA95BAEC9B28379888582246C430CDBA3E263832D12467A8
99AC5E4B0B8875D595256C980CD7CE63D5829C2D1B03493A6BC74F1D2767F4AD
64E153473AF0FF8A03A56A8BAF9592037B63D6CD41256BB461F7B1FCED130CA8
825EA2C01878E88B649C6CAB795A65CA101CB7F88D840FBD50221C7E52EDCE46
B61043DFEB727C88B7DCAE4B0B7366404D76677AA4106B4244C509F64F515182
4C706F1A0090FA2A1E79E0E6344A69C62588BAA6C455D83C816ECB31F87B0A43
DA9C6AC78ED60DE297ACF3F68828018B64E43A023BDB755129CB098AD966955A
3F3C0E5359410D5694767799D3E78FAC029C0EB1830B562B0601085A88C934C2
D61890B9E091B7A301FD1E154277B62E6406C206CBB786BD4560F4CAE2C44D61
04080DD8AA66491F8E8385235A5331F448808394F6522468E15B5D32B36AA4A9
B9AD925E45BC3913E8B63A1185D4C57E54D47D327955940DA23F6BA6CDBAD315
D1A681E0CAE069C1983D1D094677884EAE009B22AF6593264F6604B23FFDEB30
40F7E2B24A217DFDE82D11BC3BE897CAAE1C04E6AED9ABDD7FC26D8DB9094B1E
63846277D9B4E4BBE78E1E14A6B30870A3137001EF4AB0E9322717BA97F93948
B7F269A682A0D7E42C886C92D2B5DCF97175667754869A77CA474030C5E5ED4D
1504A6F5F2113E8C4B6B552A6A728058FFD4117248E5F4446DFB4B804D05021E
20E57BE1EAD72EF1958E00EA80784D3BF1FAB76EA1297C676BA562729D560011
EC15CD747344D64E85D92DB72D4052CBE55565C162041BFEFADD37D98CEDB456
97100949783F50342C8CF0FFC6D41131F28262F95F8501211EC734A57134CDAD
571BA6165EF8000451E832E10A2721383BE868342B2C49DAEE5F17E642245E6C
22757B58F7915AF31C8E2A3D31533384200D6B827F8D9DE87C85056FDC9AFAAC
3600B47E65C8DF9AE4D20BB9967DB05277F1A0B4E9B3FAC4088DB85995F82213
85944114EE3BEBD48FF8F2DE5638419FC77FB63DABF7067AAD2D0D82C9BE0668
873189AD870E741369C7334A2524876D4F0F0B7C998F2928163A11BA29CB40C4
062C23FCAA6DC45087597BE9DA98427B6C6C8CD1C28615E3E96017845780F54F
10424516131E1A4733CE389F566F298FE461056501807F37ABE49299AD5F1EF8
C4DA847E7E00A6239CC136EC31EC51724C66DA869B27DE227B0A2944AB400D87
29620F463290CB3D8187DBF2055663622ACAD2F49FCC909F5D9C31BE78E3418F
D6751DB035190FB1F7612D66B64946FC0737BFAF9984703CDBB5414EC2AADAF2
2829CC674BDE70E138D687B2B3083C1A5B25DC9C1196B1357C96B290DD1CE7D3
FA213BFC2B0D2D3637D8ACAEB3F060682A5E2F23BBD4DC92B433D03F31AD3631
8C56D8A835E1A0242C72D053C0D3A66219BBE49EBFAB8978FA341FCC7E595AD3
F513003FC396099E4A2A1D9E3851CE740B7E6A21533EFD976A5D8629BA9972F8
1EABAB1B93FEDA38F8C6A673C9A9D9C0D23531FC2A787562FACAF232FC050FB8
3CA443048E0DB047157022A0E8E7055A74BBA9DCDB1E35396B47F56AAB747DF6
2B141B96EF0BFC868BD94C202EFF373907E3B0E0F8B2EC9519544E6DFFBC09DB
C8054C91E697A9B25F31462EC578974B982FC811D1685FB1447518770655E71E
837B3A1200087659D67BD1ED2C61FAC6AD385F187D1663E721DDCEFD85C3AA8E
5C577037BEA9E55168D4D4BBAAEB5A3A797341F66C15CA385AC59F79BDD7B923
28C669940B9645F6D5BF3543C99DC8E77BD021DBBBCF4F9BEE2B2E4270276D1A
A94D1EBA3293DA2459548F795FD0FD211FCFB9963752BA0161370A712428D84F
B3A993252141D00BFEF5A1D13D18B6BCF7426F463465CAE973525514E304D6D6
60507C8DF1D62070FF39DF12C88139BEB4310C2B04271FD8534C0F3D3BEB1132
B1B3B4855346FFBDB9558566B3618D4D82FDE8603E474617A77C2395E5B44516
4DD0CAE61228F3DF6B59F3CE3C39C792C260667E4A69451E907B0554E22732B8
A91D192F9D5FC9300D092B375F182915E0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /CSZBAJ+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 83 87 re
W
q
q
[0.1 0 0 0.1 0 0] cm
q
0 0 830 870 re
W
10 30 870 862.5 re
W
/DeviceGray {} cs
[1] sc
10 30 870 862.5 re
f
Q
/DeviceGray {} cs
[1] sc
10 30 870 862.5 re
f
452.5 127.5 345 697.5 re
f
7.5 w
2 J
1 j
/DeviceGray {} CS
[0.1489] SC
452.5 127.5 m
797.5 127.5 l
S
556 127.5 m
556 120.586 l
S
694 127.5 m
694 120.586 l
S
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 49.975 3.90859] Tm
0 0 Td
/F8_0 6.99975 Tf
(WT)
[6.607764
0
4.276847
0] Tj
547.821 TJm
(P2y KO)
[4.668833
0
3.891861
0
3.499875
0
1.945931
0
4.668833
0
5.445806
0] Tj
Q
452.5 127.5 m
452.5 825 l
S
452.5 127.5 m
445.586 127.5 l
S
452.5 476.25 m
445.586 476.25 l
S
452.5 825 m
445.586 825 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 38.6586 10.125] Tm
0 0 Td
/F8_0 6.99975 Tf
(0)
[3.891861
0] Tj
0 34.875 Td
(5)
[3.891861
0] Tj
-27 69.75 Td
(10000000)
[3.891861
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0] Tj
[0 1 -1 0 8.50586 18] Tm
0 0 Td
/F8_0 7.70025 Tf
(Burst duration \(s\))
[5.136067
0
4.281339
0
2.564183
0
3.850125
0
2.14067
0
2.14067
0
4.281339
0
4.281339
0
2.564183
0
4.281339
0
2.14067
0
1.709456
0
4.281339
0
4.281339
0
2.14067
0
2.564183
0
3.850125
0
2.564183
0] Tj
Q
/DeviceGray {} cs
[0.7012] sc
571.809 323.375 m
571.809 332.105 564.73 339.188 556 339.188 c
547.27 339.188 540.191 332.105 540.191 323.375 c
540.191 314.648 547.27 307.566 556 307.566 c
564.73 307.566 571.809 314.648 571.809 323.375 c
f
571.809 485.672 m
571.809 494.402 564.73 501.48 556 501.48 c
547.27 501.48 540.191 494.402 540.191 485.672 c
540.191 476.941 547.27 469.859 556 469.859 c
564.73 469.859 571.809 476.941 571.809 485.672 c
f
571.809 531.875 m
571.809 540.605 564.73 547.688 556 547.688 c
547.27 547.688 540.191 540.605 540.191 531.875 c
540.191 523.145 547.27 516.066 556 516.066 c
564.73 516.066 571.809 523.145 571.809 531.875 c
f
571.809 450.988 m
571.809 459.719 564.73 466.797 556 466.797 c
547.27 466.797 540.191 459.719 540.191 450.988 c
540.191 442.258 547.27 435.176 556 435.176 c
564.73 435.176 571.809 442.258 571.809 450.988 c
f
571.809 588.504 m
571.809 597.234 564.73 604.313 556 604.313 c
547.27 604.313 540.191 597.234 540.191 588.504 c
540.191 579.773 547.27 572.695 556 572.695 c
564.73 572.695 571.809 579.773 571.809 588.504 c
f
571.809 345.07 m
571.809 353.801 564.73 360.879 556 360.879 c
547.27 360.879 540.191 353.801 540.191 345.07 c
540.191 336.34 547.27 329.258 556 329.258 c
564.73 329.258 571.809 336.34 571.809 345.07 c
f
571.809 493.82 m
571.809 502.547 564.73 509.629 556 509.629 c
547.27 509.629 540.191 502.547 540.191 493.82 c
540.191 485.09 547.27 478.008 556 478.008 c
564.73 478.008 571.809 485.09 571.809 493.82 c
f
571.809 449.496 m
571.809 458.227 564.73 465.309 556 465.309 c
547.27 465.309 540.191 458.227 540.191 449.496 c
540.191 440.766 547.27 433.688 556 433.688 c
564.73 433.688 571.809 440.766 571.809 449.496 c
f
571.809 344.559 m
571.809 353.289 564.73 360.367 556 360.367 c
547.27 360.367 540.191 353.289 540.191 344.559 c
540.191 335.828 547.27 328.746 556 328.746 c
564.73 328.746 571.809 335.828 571.809 344.559 c
f
571.809 422.84 m
571.809 431.57 564.73 438.648 556 438.648 c
547.27 438.648 540.191 431.57 540.191 422.84 c
540.191 414.109 547.27 407.031 556 407.031 c
564.73 407.031 571.809 414.109 571.809 422.84 c
f
709.809 686.48 m
709.809 695.211 702.73 702.293 694 702.293 c
685.27 702.293 678.191 695.211 678.191 686.48 c
678.191 677.75 685.27 670.672 694 670.672 c
702.73 670.672 709.809 677.75 709.809 686.48 c
f
709.809 335.566 m
709.809 344.297 702.73 351.379 694 351.379 c
685.27 351.379 678.191 344.297 678.191 335.566 c
678.191 326.836 685.27 319.758 694 319.758 c
702.73 319.758 709.809 326.836 709.809 335.566 c
f
709.809 459.559 m
709.809 468.289 702.73 475.367 694 475.367 c
685.27 475.367 678.191 468.289 678.191 459.559 c
678.191 450.828 685.27 443.75 694 443.75 c
702.73 443.75 709.809 450.828 709.809 459.559 c
f
709.809 363.363 m
709.809 372.094 702.73 379.172 694 379.172 c
685.27 379.172 678.191 372.094 678.191 363.363 c
678.191 354.633 685.27 347.555 694 347.555 c
702.73 347.555 709.809 354.633 709.809 363.363 c
f
709.809 401.395 m
709.809 410.125 702.73 417.203 694 417.203 c
685.27 417.203 678.191 410.125 678.191 401.395 c
678.191 392.664 685.27 385.586 694 385.586 c
702.73 385.586 709.809 392.664 709.809 401.395 c
f
709.809 529.813 m
709.809 538.543 702.73 545.621 694 545.621 c
685.27 545.621 678.191 538.543 678.191 529.813 c
678.191 521.082 685.27 514.004 694 514.004 c
702.73 514.004 709.809 521.082 709.809 529.813 c
f
9.9975 w
0 J
/DeviceGray {} CS
[0] SC
556 443.617 m
556 416.219 l
S
556 443.617 m
556 471.023 l
S
/DeviceGray {} cs
[0] sc
580.996 443.621 m
580.996 429.813 569.809 418.621 556 418.621 c
542.191 418.621 531.004 429.813 531.004 443.621 c
531.004 457.426 542.191 468.617 556 468.617 c
569.809 468.617 580.996 457.426 580.996 443.621 c
f
/DeviceRGB {} CS
[1 0 0] SC
694 462.699 m
694 423.523 l
S
694 462.699 m
694 501.863 l
S
/DeviceRGB {} cs
[1 0 0] sc
718.996 462.695 m
718.996 448.891 707.809 437.699 694 437.699 c
680.191 437.699 669.004 448.891 669.004 462.695 c
669.004 476.504 680.191 487.695 694 487.695 c
707.809 487.695 718.996 476.504 718.996 462.695 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font CSZBAJ+Helvetica
%%EOF
