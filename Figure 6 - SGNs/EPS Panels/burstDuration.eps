%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.60.1 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.4.0.813654 \\(R2018a\\). Operating System: Windows 7)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 77 110
%%HiResBoundingBox: 0 0 77 110
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font HODHJW+Helvetica
%!FontType1-1.0: HODHJW+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /HODHJW+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -212 929 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 48 /zero put
dup 49 /one put
dup 51 /three put
dup 53 /five put
dup 66 /B put
dup 71 /G put
dup 75 /K put
dup 79 /O put
dup 84 /T put
dup 86 /V put
dup 87 /W put
dup 97 /a put
dup 100 /d put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB966C56AEEE4E303152D713BF57F7118DFC603E4A7CDC2E0904B8376E
D56DF637AC6598C63C446905C94BC7753D99804EB624FA54222D76E41B5E9430
8526D1AB6C5F687532BCC02EEE694CEE8278FD0F3537C7F6309867F2EC0E5A44
D54EE72359D6427FB8CC02902618511A687CF91B8C929DF1387C63B5BC5F63FE
E3DEA3BD9903872BDC5DF7737ABB2069A6A085F853C08055C60E5C0FB010C513
6685BB91961402A867D820AEBDD6FF151550625EBE6EC3D1578868D9ABFCCC45
58893E396C3D0F457CF701071213AF967EDAB94E1B3941CB75EE02C409B52FC5
233789213389B3C69ABEDFB7AC5EF9EE2CA9F75B7C2A37B5B50CC2D5B72D94AD
341C90FE5C9AED6698DF1F747E6FC6F092E37311F1D10BD5AC7E3D5A4026DDB9
B47DDFB5628A09BC849F3BF46F3A86AFA6945B9A1D7A8C2725857AA361F02DB0
44DCAC8FE4103EE7C0E36BC12602376E374B717A16925F22EE3E07862491F62E
36FACA1079FCC46B9861D40157D1C28319B00E74C191A4EC2A6D675FC7C70106
266934E65DE8DFCD23CC02FF1EFC5DC0B602F161EC19B011F5790DBBEE639EAF
4880EE209C8FD0D3C03B9DFF973E1D097F0E3CF30DF822B50E1F6AB6904D9D90
81807C82182694C3BD98E37F891A90628835043D37C63632B99DA8DA853A6AC4
23EFE18C77B17A532FF41644965EFED79E726D00C206ACDC16E809BBD901A2BF
ECC6D8634122F8D39193F9BC097B9F3D18C4F8967AB9D37E67D9DA233BF4A636
80D47C6C22D690BE425CC646EC62508D02224DDF664172A60DAD58C7E839E2FC
78DB8A0AA1A3AAFF14B9DA31C1EE03A0FD28E84A15F453BF3B44727C50D73B3F
46D2F6C3F8401289D20672C0AF9FDE711F811EC386C9249A351F724782203174
0ED3BC47454221DBD6C5C94592D9EB27F84F38CB3619BCB9770550A5AE93D3D8
063E6A02771A3D4E346739D02CFC8F454CE1AA51DA31D1C9DD766F9F2E7A5EF0
B2B21C2CEB56AF3EE3BF20F09F2F89F5D412952AFAE076471378BA5CAFC5F83E
E1D23A53A7A1E844722653603B870E3C6B003DC843D79E1286504C315C6CD5FE
BB0C402B46F48846B00C70FC620F1D641EDE7B4E18683A25B9D6D90FDD06C67B
49CF53ACB1590CF9EB7939FB877AF9BEA4FD1FA9B7D3A31942110126B2AD8153
8295A3DC6A7348D313A695EAAF61710B66FA72145C6A6C1B3D9C0CF23BC8E103
3101D67FA2D734AA09F5A5406C6F74A7CC94E699F2F6811E913714A45B118E2F
82BE91EB9F23CB99D70105A230A191BE4250F11C538CB3FF1448CB5D5BDB498B
509CF7FFA2A7356DAECE1E39C9C1AE8F271F39D94A8F207735675CD4429165DF
5D558B890D37453530D81C5A985C6881D4298A0F5698ED37A5EED164DF7C8BCB
0811466983F1E4164CC0D7D4CE6E7132B0524E55EFCC32BD913CB136F596FAB2
AA28F5C2F1A0B2D5DA8A53164C0443BC2C370E7832666945A838AD2BDBF84AEF
F6C6766F806DB9DCDCADC61E49A050488AA7C0414FD2D43B3E09308BB4406C73
BBFD188A5F5DFC08D71C2C1AB9C9DE1FCD7A6F1AB28AE2BFC7B17E1869954882
F8641541AD8F76091B48FE8A4A06B8DBD4A1EE99F361E06C3575B1E3EA15CF54
D6A820E264A5B19EC081D2DE9013A60A657A5E70BCA142B8319B654251203669
672C5748E1C91D53BA50F14340EEF397FE6ACD86E099EB43055785C1AFBFF4C9
8ED62B374CBDDA5372A4DFD78A6463D59F6F5D9606DF16A72362A4A2DC51E296
CBF0425B11DB818615D7C1A460B8F84CB8B909D0D11E0174F991216A6CAEE47C
4004A3F0E85C19F9D507BE42ACD2847B64F903AC25304AC6D3B0093934E53B9A
3F6AA4239A9B67BD5E0E09EF859DB8A2F81DD3BF54733A26C47E6BAD11B8EAF4
F58F03098D292BF7AA1356329F75F2DC5FF50E68541799B3F7363645A9CE85A9
ADD3E4C4666E45EF6C8C60B9747DBCF4AAC7A147B61BE121460DA5A51DAB591B
95B283330B28626B434F6AF0DDE822823EE62A085083A78F382346429984D7C2
C5A04D52B5651DCBCED447DA0FB973B0952CFBE9469614607D56BD2136296769
6134531D0EE0399FAC337009BB268B7AFB6D1988672E77E656848F60E226BB0C
08A417F66ABDDF1DA087AE38671780B96788E676DB73DF4D8EB3D546762E7867
D5FCAE835EC281B6D4D89A77DB7F66968E2CBD28C7840FFE4A78079861208BDB
404ECE7B3763121308926342CB2A01B32F91BA388666346DE3A486C4F5A51EBC
16B726C4E8DCF96096F534368C8CECFA126293CEBC6D9A77E7F317AA1426EA8C
CDCB3545D777991E820EEE525A833430C2180DA6CDAF8FF933554889E5A868A3
FCF0C702E8460CECCAAAD14FAEDFA1B4D1C79573267C85C20A90B3828AB77098
43D670D1CCD62AD152A941E3D433F24F09CDFBB11677D310A02D827832C00325
19532C61114A1734581D013B6D076C1E75C7A15800E8F4CFD1AD2F4D8D44C18D
AC4445C21A27D03E62FC73E22391E45A1BC6D254B2228556844A73EF57892313
D09534837CC6CCA003515997760ECC73B527243486E4D46A57B447FBBDB7F00A
8C3F3C5A6C1C89305E6DD2FF2301098FC5D2E6A0F4E3B991ECDD1D8EC88201EA
597587FF3829714B876023926EC9D4CA404E73BCEE1F619EB72CFC9AA70BECB3
E821B4269BD02D7F1A4B68462BABE5FDD47C9125C6F37C75801677973476AA60
F755D188561D13E23B1D2B019D4702A4B6B19B4401DD720C893490896C95114B
1222FD7948B4EFD15383836C4B7E0F78A236B97A7DC512B561C12670A01DC669
FC1C1C08331311F68FE36E6587F6CE8FDA2BDC681AB8EFB585E83D2CF5FDD83B
5E4D5B7769EBD0B69166ED1FE42D57B2188D2C12AF6AC3C475F388F0A4F80E8D
7722BDEEACC3FFAEE0F8957DB955A536BF5F01C9DAB617A81F8103A39E3CB446
5A4F287E352EB459B4201AAE398B8D31F90C22818847EC8C1F757928D4C5EA89
08856F1320C23EE66BE620C45A352EABB255D12370D15AB875AB3179368C55B0
0BA1DB75ACC591D251E2058207998B9063651D347AA4FE6097D3125E5F9FD153
46AC18F0C9DF8017434BBF0F0DBFC9B4446D36FBBA265723FF2D41A20DFAE81D
EB1EBCDAF50A91B210946E95A027A808F307579D89D56A12B8295DB72601CCDC
CF1B77D6873A263669730991A2D7D4917C32D5FBACA2B23E4EC27C0F488BF77C
ED83E12B8546A41470982070BA33B54B19FBA6A77EC40655534612
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /HODHJW+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 77 110 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
-130 20 870 1080 re
f
-130 20 870 1080 re
f
215 125 525 930 re
f
7.5 w
2 J
1 j
/DeviceGray {} CS
[0.1489] SC
215 125 m
740 125 l
S
372.5 125 m
372.5 115.699 l
S
582.5 125 m
582.5 115.699 l
S
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 31.625 3.41992] Tm
0 0 Td
/F8_0 6.99975 Tf
(WT)
[6.607764
0
4.276847
0] Tj
-373.641 TJm
(VG3 KO)
[4.668833
0
5.445806
0
3.891861
0
1.945931
0
4.668833
0
5.445806
0] Tj
Q
215 125 m
215 1055 l
S
215 125 m
205.699 125 l
S
215 590 m
205.699 590 l
S
215 1055 m
205.699 1055 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 14.6699 9.875] Tm
0 0 Td
/F8_0 6.99975 Tf
(0)
[3.891861
0] Tj
0 46.5 Td
(5)
[3.891861
0] Tj
-3.75 93 Td
(10)
[3.891861
0
3.891861
0] Tj
[0 1 -1 0 7.66992 29.375] Tm
0 0 Td
/F8_0 7.70025 Tf
(Burst duration \(s\))
[5.136067
0
4.281339
0
2.564183
0
3.850125
0
2.14067
0
2.14067
0
4.281339
0
4.281339
0
2.564183
0
4.281339
0
2.14067
0
1.709456
0
4.281339
0
4.281339
0
2.14067
0
2.564183
0
3.850125
0
2.564183
0] Tj
Q
5.0025 w
0 J
/DeviceGray {} CS
[0.7012] SC
372.5 602.563 m
582.5 421.324 l
S
372.5 664.168 m
582.5 443.84 l
S
372.5 739.672 m
582.5 569.684 l
S
372.5 613.422 m
582.5 642.418 l
S
9.9975 w
/DeviceGray {} CS
[0] SC
372.5 568.199 m
372.5 519.754 l
S
372.5 568.199 m
372.5 616.641 l
S
/DeviceGray {} cs
[0] sc
397.496 568.199 m
397.496 554.395 386.309 543.203 372.5 543.203 c
358.691 543.203 347.504 554.395 347.504 568.199 c
347.504 582.008 358.691 593.199 372.5 593.199 c
386.309 593.199 397.496 582.008 397.496 568.199 c
f
/DeviceRGB {} CS
[1 0 0] SC
582.5 519.32 m
582.5 479.684 l
S
582.5 519.32 m
582.5 558.949 l
S
/DeviceRGB {} cs
[1 0 0] sc
607.496 519.316 m
607.496 505.512 596.309 494.32 582.5 494.32 c
568.691 494.32 557.504 505.512 557.504 519.316 c
557.504 533.125 568.691 544.316 582.5 544.316 c
596.309 544.316 607.496 533.125 607.496 519.316 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font HODHJW+Helvetica
%%EOF
