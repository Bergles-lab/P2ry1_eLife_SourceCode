%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.46.0 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.4.0.813654 \\(R2018a\\). Operating System: Windows 7)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 86 110
%%HiResBoundingBox: 0 0 86 110
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font YBYMTQ+Helvetica
%!FontType1-1.0: YBYMTQ+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /YBYMTQ+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -212 929 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 48 /zero put
dup 49 /one put
dup 53 /five put
dup 66 /B put
dup 77 /M put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 97 /a put
dup 100 /d put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB966AF96010A4F957C217F9F53B3418069BDABDBF480CA5952EDA5F44
41E48E53FF44A904E93075CA74C33A6428BA4C37F4B06C6815E93ED99A2ED6FA
CD84BF407140C4C0C1D2FB9AC05C74FEFB3C99D8DC16A2FDF269AB99BC1D5E54
C30726A3245406885CC3C651A255F88A075014AD730C2705C5BA01F6B6019A9E
39290DF2360E668450DFBBE308DB96286524FDF527D838E6C8D00D11AD233068
88700376632905575297230F8E8DEC39FB4170C461D6499217DE56DF4A53B48D
72C6DF7B94026A859F9A9EB905388EEC663B0392BDFDE170BBA98C15EAB17E5B
09F18A21E1F20EB0B5EAE268A9D582CCF22771F460C9B88DBF87DE11EFE0DED7
4E85AFF522755DFADCC7AA4E49F468F24ACAA53C72EF03ADA7629B889968C4E3
975F21C880086AE53E829DFC60EBFD7AFC2B1A3765EE27FA8A19EA8753535B15
40F32CA310B12C7CCCBB4F17E27B2E6EF809939DC7BE40582BBE53DF1DDAA8C0
7BC3FC61330B1144854B265DC2150ADC3D93EA503F60F3CD58063C612DB12479
EDD316B1640165BD730F53D67E6DBCD75DA15A70714348F565BABC47C68ED7D6
0C71AA5CA19AFDCCA358F9EE9451124B63ADE633B3E3C2A6921B0F9F61522BB7
285F2C217CD824EF09E407E76EA8C962C6289E0F4281850D1C2B94B9B5FFA1A7
B801436C8116C8AAE0FD6DEE22338C9E1224EDCF03219CDBE5195E10DDBCA615
2A4CD362A9D152227E77AA0AC8338DE46BC05E4D751B1736110569B3349EBEF0
70D04C8233578A15062EC167EBCC77E656EFAEDEE4A0E5BCA6A309541141BA0C
AECCED23A2C63D549E06ABDA0866D2A943A3F9A8C5018187CFF8541CAEF9045F
F00B61D902BFB19C7135801E3D2431CD92E38ED492EC8BE10409B8A27361737D
15606683ED1405A5BBCD89091378B59857039E34E1793E82BD8920A96E899C14
268C4A39109A401360BF5AEA97FDA8814790753DD676F882BBF29661363F902E
D27E3370D74471390CE12CD8D7E1D072A3209E63132A591C7C28A90C92E18FA5
E96B177A1AD0DCB800EB545FCABC50F985BE8FE68798C5F6003045E4EEEAB20E
CAE5FED022A5AE24CFADB09A29C0870BEACA3622D10DDAF00898D9069F837A68
2228F573F9C3F72C13F1DD38E3B21994B986033B05FF2359E9E765E170BE2D16
208F2671472741E2F23D651BB38B7C9042EC1DE25467D592C7F9F188572D0318
0CC917C6052236FC34F130AB48337BEDF2A486119E2C98A77D6A683FD55DBA2F
49708744ADE6412A4355D487CDEB8137085E6D20D101A75A19ACBAAAA59FCAC7
8865CDD68A23326AF81556617F562834CD784A34DE275D0F30879D1505DA5BB5
9B4740E30269905EBD8BC151689553B40A5E4D3E91B033B9F85C2FEF646FBA89
A32E5D49E2B7E373F8504339A6B61A6DBE928726FDD642A5EA748F46D0765F92
AE887FB920A93C163569A003B01C102AAD781D6415939E828DFD4C30D972B74D
E694E575D7249445E9D36D66BD00FB852E0ADB8940CF169841AA1A3AF3A1B1EC
4A80C9DDA17A38EE85C7374B6514DB5C21442950B2987B93E75800E33F43393E
076791133F217939BFC110C2B0EDCE27D786A55FA6699D793D594F222F18A388
1FC831769F086DAE5C1194F78123C39E1E99FEA50E0F829EA4D72488E9184239
A4747A8E5462C1175BBC72F9DDAEC4E543D50DDA6CDC1BA4A80641F7FEC0283A
94343C7E9D88642BAEB258E6F10985F894D2C78DEDB9147ED14A90C7499F55F2
D3E9B3085280F9DCCC4893EDB948E1B497923F0DA351B568943A04A7B4634F1A
DDA2C78890C93EF2567B6367A0650C17A267A48135F0CCB24BCB67CAB03EEAD1
2C8546D2150B84A67BCE90D99E2E58CE1AE3572DEC3AD3B2EEE99AF72911F4BA
83045F0D822F9DE99E8BBC98CE41B87953B13D01C536B9CA8A3422D05B93496C
9B894D0227A22821368BC7A1C43494BF46516B490EDF7995BBB508FA6AB3C0FD
6039CBA65B6212C1FDE7024EC03EEE7DE9E0426F6DC97FE44A9DABC16635C130
ABD4F2F07B3E1B5AD713546F8434B30B525F273C4575E70B63840D304D64D494
A11D22C8C7300761480DCD7DADF92577E0B6A554AC0B82A2755BC3AAC1BDC50A
BF2B1ABAE65C2577E11EA91CE675D053A86E79AB01DD4806F4A5CF2AE3C1B793
D94A45815AEB5E1759873EF95A93E876507152F8F840C7E065E975F3E526DCA0
37CF7C8496B67287AC1D7B2B62067DD67612A9BC31EBC7BCD5B8FFBB6718B8CF
AF789273C51B303D07D577A28A76017A9CFD4C02AFA539A9DCE3743F9EC81334
5B9DA42464C0FD5D958F1575EE8FC22614633275E413B68221B2C09018DA6562
B7D2D8181A50BE662B4EF22FCF006CF1A4DB24D9E7FEB638A42E7352335120DF
4A2CBAD9FEEF1895D92EC99CF9D0E44C8E81B3D27B2C6580628B474FC7CCD7BC
D23158228CCF34990E46F71C047B27A6BAB988B6BB495F6188B0047F0A529325
F04DFA0066D6C7F4F96B47EAF1620BE85E988114FD569CF178EAD4371D82EBA6
1D54AD12B28B184FD014EDFDE164C476BECB31FA43FDC3FE5FFC712F3DF994E5
AF250723C4D4DEC5C5AB2A771FD1576604AC71A2D0C108498C9196ADD39E4B15
A26F1ABD6A54996B79C2AFCA1177491847ECB7BF6B6D1EA97159BA7B5F21B829
FB1B05F0BB0FA446BC1D32119C85DB7BAC4DC268BC088338EA602FA2D8F67373
26E3F3F5E9B487D40251EBE133AB280049E09F8241BA32EAEE832EE31EB3328A
F6189ADECCC45685F1723F39922D1FED6906D17D12DD63905D7FF249A6214266
928300EB3EDE561311ED9C0622721787DA77F518675EFA7E21E68D05F9103874
D89FD4835B93CC884F857FB2925E5BFD9607A5B28453DF3C2F44A29ABBDAA867
F6B43811C474AC70182C83DB544DD03A034FE78A1E4A83E7A38815FD0933DC2B
54336BC47EDAF862CC94CE9C4C7F7E844AA78E4D39C08B854AA068786EEA0FA8
E1C629A372C317DD7B02E52D7BED529E8A4CC113A6D63FA9E5BE8B109F16549E
95D3B749558D8972
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /YBYMTQ+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 86 110 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
-40 20 870 1080 re
f
-40 20 870 1080 re
f
215 125 615 930 re
f
7.5 w
2 J
1 j
/DeviceGray {} CS
[0.1489] SC
215 125 m
830 125 l
S
399.5 125 m
399.5 115.699 l
S
645.5 125 m
645.5 115.699 l
S
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 34.325 3.41992] Tm
0 0 Td
/F8_0 6.99975 Tf
(WT)
[6.607764
0
4.276847
0] Tj
-1637.97 TJm
(MRS)
[5.830792
0
5.05382
0
4.668833
0] Tj
Q
215 125 m
215 1055 l
S
215 125 m
205.699 125 l
S
215 590 m
205.699 590 l
S
215 1055 m
205.699 1055 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 14.6699 9.875] Tm
0 0 Td
/F8_0 6.99975 Tf
(0)
[3.891861
0] Tj
0 46.5 Td
(5)
[3.891861
0] Tj
-3.75 93 Td
(10)
[3.891861
0
3.891861
0] Tj
[0 1 -1 0 7.66992 29.375] Tm
0 0 Td
/F8_0 7.70025 Tf
(Burst duration \(s\))
[5.136067
0
4.281339
0
2.564183
0
3.850125
0
2.14067
0
2.14067
0
4.281339
0
4.281339
0
2.564183
0
4.281339
0
2.14067
0
1.709456
0
4.281339
0
4.281339
0
2.14067
0
2.564183
0
3.850125
0
2.564183
0] Tj
Q
/DeviceGray {} cs
[0.7012] sc
415.309 495.133 m
415.309 503.863 408.23 510.941 399.5 510.941 c
390.77 510.941 383.691 503.863 383.691 495.133 c
383.691 486.402 390.77 479.324 399.5 479.324 c
408.23 479.324 415.309 486.402 415.309 495.133 c
f
9.9975 w
0 J
/DeviceGray {} CS
[0] SC
399.5 495.133 m
399.5 495.133 l
S
399.5 495.133 m
399.5 495.133 l
S
/DeviceGray {} cs
[0] sc
424.496 495.133 m
424.496 481.324 413.309 470.137 399.5 470.137 c
385.691 470.137 374.504 481.324 374.504 495.133 c
374.504 508.941 385.691 520.129 399.5 520.129 c
413.309 520.129 424.496 508.941 424.496 495.133 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font YBYMTQ+Helvetica
%%EOF
