%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.46.0 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.4.0.813654 \\(R2018a\\). Operating System: Windows 7)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 85 110
%%HiResBoundingBox: 0 0 85 110
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font YKVGBY+Helvetica
%!FontType1-1.0: YKVGBY+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /YKVGBY+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 929 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 53 /five put
dup 66 /B put
dup 77 /M put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 101 /e put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB96692B2A1833185FD196832A71CBEF2B8C10E612669B63B8730A5707
DE98DA5E0411759B6A7711327ED5D91EC421CEF64B23E6588D3D66D775BED08A
91B39E3598D82CE63F959700DF4F38F7DCE5636DB32384796496F952AB09CAA7
463C95C190C674C1570ECC78257FD53BB72154898D8C2080DB61DCBEAA2DEF42
53D00546E59820B2E609C44FD01F220B189DB298EBE6D7611E213420B9322504
F0CD582F40BA32CA7D1629FB0FCE64E11E17F5BB5C3410DE79BC87A4AF180AA5
4295A31D18CB6AFE4F672BDF720F84CAA2252B9333EEEAE444D966B0B4A27C78
6FCB448A534B7F9FD6211431B486DD49999ABF7CB5F5A0CDFC62563CC89B0B5B
6C610743697E557FB2CCFD7045E30938A1C0DFA0A58152DCA8A264B707DF8DE9
6462DF80001E352EBD742F0CD2F6FADB9307F22AE48767B5498C7EACDB3AC3AC
D087B5384B2BF4F791D6FAF1848E7D79F67E4D07BD47761C85CABAC13E657C7A
651E8B46C2B3AAEAF99C607F56791852CE2B6D53667B2C66C66A0DAC30D8C7E0
A745CADE044221D17111B94145D90750EE559508756016336B3C20E6677E09E3
658C2401894AB12D691D17138247CAB64235798E952558DF614F408590F6BD56
91EDBC4DAA3466FF728D29A2FE3845E2E82E9DD541C9F8C3D601939807DCFBDF
DD80411A45E49384251BAF476955858FCAD949E05F8DBB6ED014F0813668E6FE
9495920C38469CB993F5C08D69A60C4B94DD774A4D1BB87FB32EB58F91A15CDE
7B9F5BB28756A1582674B5171A3169D59327C2CB08CA9275C279094FED77C077
D74EBD48C44ACC4AF70FC1BB713B021B11606CBD6AC56133971D0480A0F9F9BA
4EFDB649E16513F35C0F7AB3CED3DF020075D88C98BC303461C1508818DD75B5
615AD8CBABB28FCEB6D8A415053A6B4EC387A04B5AB699F3F7804EA85790B348
9627C4F5835A3986F41FB6FCF5CD1AC1051FC66D7FC4353A6FC971AE02C0D5C7
20A241120472ACCBD73FF8B62D9C19C05FFA3272191EA0BA9D479428E11443B2
C55AD73F35C84B92B99A74337B128C376B7D729F2406D4413753EA788D416808
3DA1052588201D49695C6B700714B72F2087702893104088A5058E6012610646
07A0B26D01D7DCD0210A8FF2FCB80CB51C94B5085307A249F853161D6520D01A
50A6D5127D1EC9981FE134279F4091FC59F9E736E180DA5EAD558D6B8A654820
1F1523F5DF55EC1E76EFE8CA510F2F6890070E9D530E3017A8C25B772D2EFF3B
0FFED7DF870762557B3CEED4AB856BD55F2AEB0CB8A3C5C66955A0EEEF8BD8D5
D89637A75BF330C6BA51A3C6198791260E51C293A23DB940DB2930FA031A293B
7FD63BE9FBD7A4ED8B18D49211AEB15D8B87FC4606C83F30683972C0F66C33C2
2CEF4F057793256D3F0ABAC3C94EE41DDAD31F061C5884F6A68361004B51C2AC
44F686817928633FFBC8266D006C1884288737A10D16A6299A195740890B9AA9
627FEBAD1E7ABD3D382C6F75A632A5F19CBF3863DA719DFC515BFA0633F973E6
5564BD91A9CFE822ABD0C5F963EA5673E28EAD57530923611A3A048188A67FC6
096DB5B9B76B3DB5F3AEF9C9013526F04F2294FA414F8B0F8251877F8F55B9BA
A2D9AD83D3F4F1351E3E87C077BEF43938892EFF77E563EB2AED1BD48734B44E
7788AD16DADB71AD352BF41444154ACDA585E8F3444FA9344CBE02424E374272
04ABC16D1B880E0554C1752C71EFAE4F6C10E1572F143E9B5C0F3DE8085CE2EA
CE956A1D1AF38CAFD8056B037244F0582D2FCF22A0EA4B2FA01CDC09119218EF
D8BF7C6ABA9F475B46336C3D19C0E51D7825143FA11F05C8034458E83F0C56AD
C290F088C8A961F5717DBE6ACC5FBE9407C0B0FD3ED4BA6F086E5593C78AB5C0
465A74F7484F1E7577AF5FB9138AFD7658011F02CCA4FFE62ABB451383E6998B
4E546AAE6CA5EDBE20B96FB414D491EA76415FABF9D9BD33CDE02DD079374D31
217F26B1C609FD86F1FE17EAD8F4CD32429EE87BA94C4CB86AC67B3CC4298D2D
B2BA63A953D77556712C5AC7ABA844DF1F7A3490B42BF5FC2E02BCB15CE20256
B2627775F60E55D2ED5F431EED7D7EDA8546B281F11FB2D019591EA878A8B109
E3EBB9F5F2B68BEC6D816801E82B7C2F9829D00105937220619645D5FDBBAF78
8CD524C21B46F6A70F3F9509E330B208231D5B7CF1D8918A9CD0ED19468DD0FA
BA19A23252F22BCF161C73121C5E3EC940D542562B72829AB2A2B816B87332C7
98CF30DE3026519B7D3F4759F78F33EE2E7010C3C5E823B4B93CF26AF3FEDACE
3DA9DB3401451DE50137E4F4D1323D61BFEA3C28C03CC467EED9B8B6AE9A2313
FA4F996699E97D0EC7B8AD99238455C9972021B7CBDE87834271794734CA33F6
EB037F1E754EA040FFC012852864F115B8955D915A05C2059070DDC52F99FA5C
62CCEE2CAF426926429285824EF0678F034E3FA643342F7EBE9047DAC79BEECF
4BD6AE5619D9D85F457CD5C15287DFCEF5C565A3353485AB27062C932612BE4C
BF7DCDDD57A811B54DDBE27359418DE7D82B504EE7E748FF9B97B1E95ECF7621
2607C2EC7F22D37205A5F835E87880083354AD4761EDD080828A6A5F87BF78D5
9986DA1E47745F71F766E729019AD12B406783672BAE683424FA12682DC7CA7F
435E7BA72A5576B2C7D408B81E2A90FC05544099E73BF875441C8FA31A1C001B
AC2C4994816E9EF4D1B4F8A5EFB0A13C87634D0D3522D4E422E4205ACE46198E
2FE73E090FABD724B8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /YKVGBY+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 85 110 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
-50 20 870 1080 re
f
-50 20 870 1080 re
f
227.5 125 592.5 930 re
f
7.5 w
2 J
1 j
/DeviceGray {} CS
[0.1489] SC
227.5 125 m
820 125 l
S
405.25 125 m
405.25 115.699 l
S
642.25 125 m
642.25 115.699 l
S
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 34.9 3.41992] Tm
0 0 Td
/F8_0 6.99975 Tf
(WT)
[6.607764
0
4.276847
0] Tj
-1509.4 TJm
(MRS)
[5.830792
0
5.05382
0
4.668833
0] Tj
Q
227.5 125 m
227.5 1055 l
S
227.5 125 m
218.199 125 l
S
227.5 590 m
218.199 590 l
S
227.5 1055 m
218.199 1055 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 15.9199 9.875] Tm
0 0 Td
/F8_0 6.99975 Tf
(0)
[3.891861
0] Tj
-5.25 46.5 Td
(0.5)
[3.891861
0
1.945931
0
3.891861
0] Tj
0 93 Td
(1)
[3.891861
0] Tj
[0 1 -1 0 7.41992 28.625] Tm
0 0 Td
/F8_0 7.70025 Tf
(Bursts per minute)
[5.136067
0
4.281339
0
2.564183
0
3.850125
0
2.14067
0
3.850125
0
2.14067
0
4.281339
0
4.281339
0
2.564183
0
2.14067
0
6.414308
0
1.709456
0
4.281339
0
4.281339
0
2.14067
0
4.281339
0] Tj
Q
/DeviceGray {} cs
[0.7012] sc
421.059 590 m
421.059 598.73 413.98 605.809 405.25 605.809 c
396.52 605.809 389.441 598.73 389.441 590 c
389.441 581.27 396.52 574.191 405.25 574.191 c
413.98 574.191 421.059 581.27 421.059 590 c
f
658.059 125 m
658.059 133.73 650.98 140.809 642.25 140.809 c
633.52 140.809 626.441 133.73 626.441 125 c
626.441 116.27 633.52 109.191 642.25 109.191 c
650.98 109.191 658.059 116.27 658.059 125 c
f
5.0025 w
0 J
/DeviceGray {} CS
[0.7012] SC
405.25 590 m
642.25 125 l
S
9.9975 w
/DeviceGray {} CS
[0] SC
405.25 590 m
405.25 590 l
S
405.25 590 m
405.25 590 l
S
/DeviceGray {} cs
[0] sc
430.246 590 m
430.246 576.191 419.059 565.004 405.25 565.004 c
391.441 565.004 380.254 576.191 380.254 590 c
380.254 603.809 391.441 614.996 405.25 614.996 c
419.059 614.996 430.246 603.809 430.246 590 c
f
/DeviceRGB {} CS
[1 0 0] SC
642.25 125 m
642.25 125 l
S
642.25 125 m
642.25 125 l
S
/DeviceRGB {} cs
[1 0 0] sc
667.246 125 m
667.246 111.191 656.059 100.004 642.25 100.004 c
628.441 100.004 617.254 111.191 617.254 125 c
617.254 138.809 628.441 149.996 642.25 149.996 c
656.059 149.996 667.246 138.809 667.246 125 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font YKVGBY+Helvetica
%%EOF
