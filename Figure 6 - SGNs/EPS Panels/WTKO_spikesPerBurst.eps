%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.60.1 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.4.0.813654 \\(R2018a\\). Operating System: Windows 7)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 83 87
%%HiResBoundingBox: 0 0 83 87
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font ALQXIO+Helvetica
%!FontType1-1.0: ALQXIO+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /ALQXIO+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 929 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 53 /five put
dup 65 /A put
dup 75 /K put
dup 79 /O put
dup 80 /P put
dup 84 /T put
dup 87 /W put
dup 98 /b put
dup 101 /e put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB96681CFF80FBC1971D5909A668262B0DF18FBA6DAA4D8CB27A01E626
6FE868DD0D68B24C25D9A4B91732AA65B12254C4FF636DA73FCC06A16C6F557A
3150519FFF1B463B8D13D32148C1000EA9521BFADFA61781C9DEC21131FEEDE5
9C83CD7427B6FDD6B06467E6A3A1A0189416BCEBE1478843B1A79AE04560F11D
2AB3BA3EBCAA2B26F684EF7F0B2F6C581271DD99C784B391864512740AF45939
92B1050644FFC345282497772B46EC094BBD819EDB8DE54808DAC1C670BD37F9
413713E85A2AA4F08AB77F4558BDBA7804A85E52DEC12E207E7359ABD2080FC3
4A9FF7C422AE71FDEC107B6CAEF3A7DFFFA4A509103EA7EC29E2C2A2D1B0EAD5
C298CA2676A227F61EB0046DA8F574C0E743BE0E792A6F7199411C86B59A457D
4AACA9AA9642F2AFC3A088598A7E6BB6F3AC79176770A0E5BE808B98DAB50672
FDE4E5EE3CD2A148E44AD1569EE78075770E19D3EB2CAF2BF5A8A3629F88B222
0F26C464E1A74424963365B8E11894350D13CFAC2A56FE13E2D466CF4735A68F
863AB56FACED4523425FAFDA9F7BA88763A39F6554B3D7BF1EED80FD6362CB11
2EFB4A6F25EA437817E019D524949A2569C05541591BADC137252221CF157CD5
FB198F5133E3AB4594F33650224A98F54BC3EFFD1B57E9F48309B9B091652A0F
0349A8BDA947E53DC075E25337298075C248375E99E706BA537A28B0643D7C0B
E45DA3642C39534F5B1D30E26BD37C4E9E1063924499D33D84DF3C32473F6969
03E6986659A5EF814E0D11E0BFF0B39EF2F6F1406606D8F7E6F209E0809D122A
F16995F763393C6D20B445F111787655B0FFF1B8BB35F57764110A323D95A68B
07D3C5D5094B03408ED5689EF0F8038552BC9D43A7BA7A077833DCBE91E89ACE
B70F3A4F1D3CA4378378F974529D37B5BF8E4B095AEC91763185EE8254474DA8
24E7F42BFF04249F3B6B12723761F19BD88357BA08983AABBAF370B01C8440C0
EB4D6B4AE0EECE440BBEC5E2D1146F1DC233E536DFAE32CEFCF146818C51192A
260C65B5ABA920558EDFBA5ACA6F8CB726B2AEC2FCD55BBDBEA5FA6CA37BB674
D5A56BFA1BE7BC208526837EC34F290D8609C349E21C5744AA8D223E6413C8A5
F9DB6979648CE61AA01E836EAE33A297F59CB241445FDC65A8E810FABB7A69CF
473EFD6B6C6FD9301C4710593074A1CDB1929A21ED48D2AA231126A18560BD58
E9B34ABFCF119C4CC69253ECA23FBE41F85DBD1F4E5E32DBC3C4AB0ECD23348C
9D0E855393C6A129953D7B1B19444BF31DD445451B721D1D43E370854FB3C012
124DDB1C4BAE3297C6C0224E95E329E50603082CCE469A8933253F261E9B605F
D5B425D24016DBFC3101766A36ADBE2BB8DD945669DD7176C8B35A4FCF3F1A67
FCA1360C7B06D14F0E331182DD89CCCF1D013ABA303D1367DC4252785FFE206F
8F3689F1C0E29132434C6737F09E59491EFAE87D90D8225C8D2EC3DF840B5093
906223E386D0127B7B02DC51EA82DBC24F9D7721AD2778D86CDFFB26B3A8B3FB
11687B90C7F45F091909769503028DA972627FE8605ECBFAAD01D7683389D77F
0E729D68C00AFBD981925B8BBA61BE2716D63DF2C59A4DD3B8C233D977A43A95
60F7D266BB41633B5DCD9273FE3698B950B66468AA45023202965ACDD0FE81DB
DCFA9EEA4D3C134D7433EEFD777592E5CED583324D9393754DC08AB6B60C6FD9
B25C3B798A7E743BDE7585B9E365D780017331A8C372538E6D4D1A8F502979F8
0F4FD19196A0D2A9CC2D6AC4DE91ACDCDE7B33DC5EF36D685F466715E12CB6FB
AC69818E30DA97DD63B16A99C9F370BDFE823FC4E21AC0CE0E28954F35CF6537
2CAEF89756156D0E36ECD89FA8C39B5BC1EDEEA0BB368DF48C42C122A412A27A
E9245EB50EB5E6802F05514F1DA232348BCAE78753B39539419CE1123807956E
CB12B3AF89BF07E05FE969A98875CC013ED5AA70B57CBD61CF72ED8AAEF311E8
C8276ABC812743BF0DEC2A7F8F965BC616296EE325C1BF6ACB177F6E0103C4FF
89E2BFB2353D89B63F069C89CD30C820FA9AC5C7514EB2E5946D3BE79C9F8A43
74977EFE21E85EFB6F1099B4EC9B0C5824A46D98F59375FB558AC10ADFEFE39D
FA02279E4010CE0EF2558213849994A2482767C658893841D4F773DC5E00F218
CAD2B9145FB95EDEDA212EE42EFAE983D5D208D5D42DBD7D183C197E55EFC335
4C938397FB851E73E3D3AE7682D58D44123FA22F6731F1A2BEA3CE71B50D0824
D82ED7D4AECF5E3A320651F34856672F5265B207ABAF4CA719C8599E0AA6128A
659E5732D234D13D161B760CC0EBF897DF81856F0E273D57B12E06BA06C64F0E
7F84EC648DBFC8858D9A9D7354EFAF77BB663F377EF0DEBC6E529D1F78E4CEFC
1E4C987D5DD0ABC13E1A6439ED0BB74EDDAD0552EE67735E793A2C2C486CC655
B37AF4700707D2D0F8140E5AC7904ACFD26ED4DC34DF37DEC13ADFC09F071277
799A9AF44C877AED9ACDAF2590B9E6191D70519D3062754AE9BFDEE6CEE1616A
E086912E8CF80BD6CD36DBA8CE37B06F826B4CEB353142770C16EA31D635BA01
C517F732DBAEFA27C6411297B98E48F1F206F9E0EBDA85CDA185790C6913CA9F
681CC45B6819D6580CF93E61C98BD38986BD6C0930077F0360
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /ALQXIO+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 83 87 re
W
q
q
[0.1 0 0 0.1 0 0] cm
q
0 0 830 870 re
W
10 30 870 862.5 re
W
/DeviceGray {} cs
[1] sc
10 30 870 862.5 re
f
Q
/DeviceGray {} cs
[1] sc
10 30 870 862.5 re
f
452.5 127.5 345 697.5 re
f
7.5 w
2 J
1 j
/DeviceGray {} CS
[0.1489] SC
452.5 127.5 m
797.5 127.5 l
S
556 127.5 m
556 120.586 l
S
694 127.5 m
694 120.586 l
S
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 49.975 3.90859] Tm
0 0 Td
/F8_0 6.99975 Tf
(WT)
[6.607764
0
4.276847
0] Tj
547.821 TJm
(P2y KO)
[4.668833
0
3.891861
0
3.499875
0
1.945931
0
4.668833
0
5.445806
0] Tj
Q
452.5 127.5 m
452.5 825 l
S
452.5 127.5 m
445.586 127.5 l
S
452.5 360 m
445.586 360 l
S
452.5 592.5 m
445.586 592.5 l
S
452.5 825 m
445.586 825 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 38.6586 10.125] Tm
0 0 Td
/F8_0 6.99975 Tf
(0)
[3.891861
0] Tj
-3.75 23.25 Td
(25)
[3.891861
0
3.891861
0] Tj
-3.75 46.5 Td
(50)
[3.891861
0
3.891861
0] Tj
-27 69.75 Td
(10000000)
[3.891861
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0] Tj
[0 1 -1 0 8.50586 24] Tm
0 0 Td
/F8_0 7.70025 Tf
(APs per burst)
[5.136067
0
5.136067
0
3.850125
0
2.14067
0
4.281339
0
4.281339
0
2.564183
0
2.14067
0
4.281339
0
4.281339
0
2.564183
0
3.850125
0
2.14067
0] Tj
Q
/DeviceGray {} cs
[0.7012] sc
571.809 288.699 m
571.809 297.43 564.73 304.512 556 304.512 c
547.27 304.512 540.191 297.43 540.191 288.699 c
540.191 279.969 547.27 272.891 556 272.891 c
564.73 272.891 571.809 279.969 571.809 288.699 c
f
571.809 519.43 m
571.809 528.16 564.73 535.238 556 535.238 c
547.27 535.238 540.191 528.16 540.191 519.43 c
540.191 510.699 547.27 503.617 556 503.617 c
564.73 503.617 571.809 510.699 571.809 519.43 c
f
571.809 732 m
571.809 740.73 564.73 747.809 556 747.809 c
547.27 747.809 540.191 740.73 540.191 732 c
540.191 723.27 547.27 716.191 556 716.191 c
564.73 716.191 571.809 723.27 571.809 732 c
f
571.809 417.66 m
571.809 426.391 564.73 433.469 556 433.469 c
547.27 433.469 540.191 426.391 540.191 417.66 c
540.191 408.93 547.27 401.852 556 401.852 c
564.73 401.852 571.809 408.93 571.809 417.66 c
f
571.809 787.801 m
571.809 796.531 564.73 803.609 556 803.609 c
547.27 803.609 540.191 796.531 540.191 787.801 c
540.191 779.07 547.27 771.988 556 771.988 c
564.73 771.988 571.809 779.07 571.809 787.801 c
f
571.809 334.426 m
571.809 343.156 564.73 350.234 556 350.234 c
547.27 350.234 540.191 343.156 540.191 334.426 c
540.191 325.695 547.27 318.613 556 318.613 c
564.73 318.613 571.809 325.695 571.809 334.426 c
f
571.809 523.68 m
571.809 532.41 564.73 539.488 556 539.488 c
547.27 539.488 540.191 532.41 540.191 523.68 c
540.191 514.949 547.27 507.871 556 507.871 c
564.73 507.871 571.809 514.949 571.809 523.68 c
f
571.809 341.398 m
571.809 350.129 564.73 357.211 556 357.211 c
547.27 357.211 540.191 350.129 540.191 341.398 c
540.191 332.672 547.27 325.59 556 325.59 c
564.73 325.59 571.809 332.672 571.809 341.398 c
f
571.809 329.773 m
571.809 338.504 564.73 345.586 556 345.586 c
547.27 345.586 540.191 338.504 540.191 329.773 c
540.191 321.047 547.27 313.965 556 313.965 c
564.73 313.965 571.809 321.047 571.809 329.773 c
f
571.809 301.102 m
571.809 309.828 564.73 316.91 556 316.91 c
547.27 316.91 540.191 309.828 540.191 301.102 c
540.191 292.371 547.27 285.289 556 285.289 c
564.73 285.289 571.809 292.371 571.809 301.102 c
f
709.809 350.699 m
709.809 359.43 702.73 366.512 694 366.512 c
685.27 366.512 678.191 359.43 678.191 350.699 c
678.191 341.969 685.27 334.891 694 334.891 c
702.73 334.891 709.809 341.969 709.809 350.699 c
f
709.809 248.398 m
709.809 257.129 702.73 264.211 694 264.211 c
685.27 264.211 678.191 257.129 678.191 248.398 c
678.191 239.672 685.27 232.59 694 232.59 c
702.73 232.59 709.809 239.672 709.809 248.398 c
f
709.809 306.523 m
709.809 315.254 702.73 322.336 694 322.336 c
685.27 322.336 678.191 315.254 678.191 306.523 c
678.191 297.797 685.27 290.715 694 290.715 c
702.73 290.715 709.809 297.797 709.809 306.523 c
f
709.809 276.301 m
709.809 285.031 702.73 292.109 694 292.109 c
685.27 292.109 678.191 285.031 678.191 276.301 c
678.191 267.57 685.27 260.488 694 260.488 c
702.73 260.488 709.809 267.57 709.809 276.301 c
f
709.809 248.398 m
709.809 257.129 702.73 264.211 694 264.211 c
685.27 264.211 678.191 257.129 678.191 248.398 c
678.191 239.672 685.27 232.59 694 232.59 c
702.73 232.59 709.809 239.672 709.809 248.398 c
f
709.809 375.5 m
709.809 384.23 702.73 391.309 694 391.309 c
685.27 391.309 678.191 384.23 678.191 375.5 c
678.191 366.77 685.27 359.691 694 359.691 c
702.73 359.691 709.809 366.77 709.809 375.5 c
f
9.9975 w
0 J
/DeviceGray {} CS
[0] SC
556 457.598 m
556 400.621 l
S
556 457.598 m
556 514.566 l
S
/DeviceGray {} cs
[0] sc
580.996 457.598 m
580.996 443.789 569.809 432.598 556 432.598 c
542.191 432.598 531.004 443.789 531.004 457.598 c
531.004 471.406 542.191 482.594 556 482.594 c
569.809 482.594 580.996 471.406 580.996 457.598 c
f
/DeviceRGB {} CS
[1 0 0] SC
694 300.969 m
694 284.902 l
S
694 300.969 m
694 317.031 l
S
/DeviceRGB {} cs
[1 0 0] sc
718.996 300.973 m
718.996 287.164 707.809 275.973 694 275.973 c
680.191 275.973 669.004 287.164 669.004 300.973 c
669.004 314.777 680.191 325.969 694 325.969 c
707.809 325.969 718.996 314.777 718.996 300.973 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font ALQXIO+Helvetica
%%EOF
