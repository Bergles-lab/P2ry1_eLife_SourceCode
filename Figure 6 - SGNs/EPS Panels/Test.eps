%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.60.1 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.4.0.813654 \\(R2018a\\). Operating System: Windows 7)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 83 117
%%HiResBoundingBox: 0 0 83 117
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font UDPLME+Helvetica
%!FontType1-1.0: UDPLME+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /UDPLME+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 929 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 48 /zero put
dup 50 /two put
dup 52 /four put
dup 54 /six put
dup 56 /eight put
dup 79 /O put
dup 84 /T put
dup 87 /W put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 110 /n put
dup 114 /r put
dup 115 /s put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB95B26E44CBCF2F088B622E3040F0070952DE4616F349A8EFB28D989B
F94F59B8E4550FA11F74D2F3125D2D74BD689D01F7DDDAC45F9298932B13101D
3E4CF7865A2F4FAC3BB55AF90B2002C4B7637F46C3A57000A9A2AB6AF54BAEB5
E7B6D7278145BE06EE9D79CA51E09000880CDC724B8D599C6E569853B2972516
C3824AD9D364270405459CB22B56749E3BB89A4E3AE8826F0236C41ECFA00888
CE33854454DCC25F79557B38D922396A436E953AE1739C37F31C23B007B0F7EC
214DBE45BDF6E17D6047904536050051C9E71ACE4FA2B1D0BBF8A380E86D9FA5
75A7C257EB3CBE34A5E762FA98C425AF3111B720C73F91BF8CC66227DFDA64C3
5494C1A00DE7D914709CA996AAB0937FA67054E905C332F2FFF51A6ECB51DF8E
7E78FAF52F23A8E9020B0AFB57736258ACE1CACFA602ADF09A67492D61211130
4B90351BEFEAE22458F5A2E0ADDC92338E9735FE2570C2B78B3DAB876270967B
8683AB409DF6DAC361FE2EB7693A526DA0279826AD7C389A82C6421E7534EB7F
224D822C6A4F802C9C2FA9531951950FFD9DCD50D68955BA29AFBD5616EBB255
669237E7F3EF55A9AF48C8CA0A2379EFFCDBF359654FB9BF0C302659DA064239
A987E83F13B73AFB085E9B2D8487D00890F2A4C1987EFFFD58E581202D436F3B
AA09FA4367AF30187AFE98236F5DFFC8F8D66174FA731693389E080056A9D883
72A868D6077B698935805A8B46B1395FBAC7B0E97A5E4C91BFEBC1740D73FDC2
BDE2899476C0778C788C30C72A56A5AD7FF8A88F5A7F6086AD4EAD7FF07CA3A5
3E000118306924B30B9B5F80C753B91B8A12C297A2D0250FD0866E5CF5CB7EC2
BB11D5FC6751B5CDE1A37A53312FA3362351D25ABFE4C6E426D7908A162DDBD8
DB4D063CD9776476F3F2ADB31C4362B9D138E87DB6E69710FF0CE0EE8F0B7CD2
2AC7CD7913B0F3C89B14076CFB42F408FD990331414F4DA6CC74A4D305D4FDF1
F44CD44FD57E1AE0BC6B5BDECC1B11AD7F03AD552C32972615582D804B4A90C9
9B538EF7068049CB8B148D1B4C5D5CCE6728F0E486778733FD06829C78BDBE9B
6193D01B9C4A52B5736B33CCEC7C911714D87D8631E6FCA557B701D07E520DE4
7EB6DC2A74FE5281950DEA846A49FD1B316E7FAA0E279ECB883E934AAF159FDD
8E8FE361EA06BD6CC753C910C53F1AB9AD8A5FEF96404520F08DE82B112BC461
043462F250FC102F08E46C6DAC47FDB561D6C9114006FFB4D49007C3B30D8DE1
10278BF0A85A9F3D974F72D524AA5B750E1E78071CDB11CB50D7E67067534284
705BFFBC0EC471D796F73681B26BCFF732128C6EF6BAE0E747948FD34015B178
7ED46A46ABE3C1EAB5DC200B84C42FFA495437228E8B80D677E08722DCAF679E
5441DAD853476753B7630C02E5B6692B9AF1ECD7A56B92EA450A8198015FBC4C
0A2E305742A83391B6ED885F336B808AE8D7C1904587162D9B726B0C8F3BFBE0
E811463E20B5E38066F78900C4D015551B4EF31B4A3ECD3C17C24E4B272A332C
9D611DB1077638A40171B9A8EC4CC7CD9CE8DEF29927A3191E320215850BE8BB
A48E6973331AF90B937ABCACEED193ED67607B82EC64760286CD17F7005AA6EE
EF8785FED74F71897D60F1327025FCAE3F4835006E4BB381B42D61C216CD360F
16D78987A7E355465EE1A73CDF92067695CF37E19AE7C7B212D7C35776D26502
495841B3E13076E9145AEF90CDA1F6E504D5F89B9DA242ED38FF49D00876E742
BA2EC0B39F724C6F03844589F463EBE70241EAB6846B25F4859A3A62CF735323
AA205A49782F5D6901F6F3085AF5B030008F2B7EC669122D0E0FF4C1121D29A2
D56038E5DCF1D09A042EC7E3FDAB2CE85C8ABF54C94793CBED5AAC1054AEDE1D
D73CB8374B9AB62697C7F9F4C336C25E1C4542097BC2E00D5CC69B009AE9F4B2
0911388322CCCA843B291A74D5A791F07A7009E9320B7CD33B7A5E30D6C9DF61
D85C09D26DD68B7FA60FBDBE45E7579EB77ED9019217BCA522A9DA9D81C3BC79
EFD6988B80892DF13264606C9FDB67DC1BA762ECF8F690F6405EC71E3967C189
9040FA24564049DDD2E77837B7D1A6BC6B68B1F893A5DC7C4C9FBD3514EC6A26
5987E02563288991BE341A3D0D709992B3CEB444C9A1C427D36D80AC20AB8A00
DE2015FD3F48226254737ABFCBBC2FE4AF0675138E33DC39BC37CE15AD5CAA96
59891CFF78C810C8F117C7E68B1C48E755981A559D068FE294DFE8B7C3C6C9DA
14F022882BD46D88F544DA8F9C313CEED6622174F41020803B718694381484BA
112265091D813D837D8ED2A3D96C1880E3CBE00F0DEA5E6F3A3425FF4AEBFEEA
7EAAFD91B3EA77F6C42C39A38BA59626FC9F6567BE7551D67072AAF35C9EEF99
A74F22664AF92DC62F3C120CF5A449560D71952AD190B7347ED06F3276FCFD95
1C709C1162814B396B28552219DB2A3B4A4920B08B73FB7B752FE5F90211F8E7
A864595338119899203C32BFBCDE90A5B99376477085BC7E763819422598380C
E1212B09D9C27181497511A5D2D9697F672E54BFCA9CB3514566948E8727CF20
35
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /UDPLME+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 83 117 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
10 0 870 1222.5 re
f
10 0 870 1222.5 re
f
242.5 135 555 997.5 re
f
7.5 w
2 J
1 j
/DeviceGray {} CS
[0.1489] SC
242.5 135 m
797.5 135 l
S
427.504 135 m
427.504 125.023 l
S
612.496 135 m
612.496 125.023 l
S
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 38.25 4.35234] Tm
0 0 Td
/F8_0 6.99975 Tf
(Wt)
[6.607764
0
1.945931
0] Tj
454.115 TJm
(OtherThing)
[5.445806
0
1.945931
0
3.891861
0
3.891861
0
2.330917
0
4.276847
0
3.891861
0
1.553945
0
3.891861
0
3.891861
0] Tj
Q
242.5 135 m
242.5 1132.5 l
S
242.5 135 m
232.523 135 l
S
242.5 384.375 m
232.523 384.375 l
S
242.5 633.75 m
232.523 633.75 l
S
242.5 883.125 m
232.523 883.125 l
S
242.5 1132.5 m
232.523 1132.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 17.3523 10.875] Tm
0 0 Td
/F8_0 6.99975 Tf
(0)
[3.891861
0] Tj
-5.25 24.9375 Td
(0.2)
[3.891861
0
1.945931
0
3.891861
0] Tj
-5.25 49.875 Td
(0.4)
[3.891861
0
1.945931
0
3.891861
0] Tj
-5.25 74.8125 Td
(0.6)
[3.891861
0
1.945931
0
3.891861
0] Tj
-5.25 99.75 Td
(0.8)
[3.891861
0
1.945931
0
3.891861
0] Tj
[0 1 -1 0 8.5 55.875] Tm
0 0 Td
/F8_0 7.70025 Tf
(Test)
[4.704853
0
4.281339
0
3.850125
0
2.14067
0] Tj
Q
5.0025 w
0 J
/DeviceGray {} CS
[0.7012] SC
427.504 509.063 m
612.496 135 l
S
427.504 1007.81 m
612.496 509.063 l
S
427.504 384.375 m
612.496 259.688 l
S
427.504 758.438 m
612.496 135 l
S
427.504 509.063 m
612.496 259.688 l
S
427.504 633.75 m
612.496 135 l
S
427.504 758.438 m
612.496 509.063 l
S
9.9975 w
/DeviceGray {} CS
[0] SC
427.504 651.563 m
427.504 572.574 l
S
427.504 651.563 m
427.504 730.551 l
S
/DeviceGray {} cs
[0] sc
452.496 651.563 m
452.496 637.754 441.309 626.566 427.5 626.566 c
413.691 626.566 402.504 637.754 402.504 651.563 c
402.504 665.371 413.691 676.559 427.5 676.559 c
441.309 676.559 452.496 665.371 452.496 651.563 c
f
/DeviceRGB {} CS
[1 0 0] SC
612.496 277.5 m
612.496 214.102 l
S
612.496 277.5 m
612.496 340.898 l
S
/DeviceRGB {} cs
[1 0 0] sc
637.496 277.5 m
637.496 263.691 626.309 252.504 612.5 252.504 c
598.691 252.504 587.504 263.691 587.504 277.5 c
587.504 291.309 598.691 302.496 612.5 302.496 c
626.309 302.496 637.496 291.309 637.496 277.5 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font UDPLME+Helvetica
%%EOF
