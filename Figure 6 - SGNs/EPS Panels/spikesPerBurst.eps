%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.60.1 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.4.0.813654 \\(R2018a\\). Operating System: Windows 7)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 77 110
%%HiResBoundingBox: 0 0 77 110
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font MPZYKU+Helvetica
%!FontType1-1.0: MPZYKU+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /MPZYKU+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 929 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 48 /zero put
dup 50 /two put
dup 51 /three put
dup 53 /five put
dup 55 /seven put
dup 71 /G put
dup 75 /K put
dup 79 /O put
dup 83 /S put
dup 84 /T put
dup 86 /V put
dup 87 /W put
dup 98 /b put
dup 101 /e put
dup 105 /i put
dup 107 /k put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB966B88E497970A454034C6B6051CF157EA337C91EA0F0CD0A9B251F7
17A3F10D63346B8736BC472D70266D880ED1E0633C708EE5EB5C26BCDBC5863C
7276934243446F924F740916078228A56C27389787C574EC43E69811E28BA66F
0B449D8A550CFFB240EC7114372D323E7A6EC2A0BED2E194755434B50F9E85AB
E0372FDF5A2A5154CC5EB51BA92DCAB4027A9893BBA95B3DE0612B5B2435AA37
E66DF4373A2283DA8AE0E60E3B8CC24F62D0C22AB30CDE9E838A08165F9063FF
AAF81F384E19AF4F0B4F6A31DF8DB900D8A9C3C4A22B23D21EA2FD8457AF4896
5A98A11F877CFFEC48A08124D39C6EEF64BACD36E737C45434533E1F4F3ED010
CB3D6075FFD8C56A7924D75E04C2EE7B129CE139F629EC6980B10B3A50C51D0E
C19F759B5875A64135A0864E4234A12760A88A1AF43CC26DC6845A6AE465C1EB
D130AA3DCBA1B00E40A31E23807987A70FF5232506D22977F611FCD09083EB1B
A5DA79D7E28B00EFA655C5A1017B6B8A3FD37E53B6C5DC889D679F611A1494D6
3129C6ADC3DB13D3042625D2177742301491F9A332D20D584E3DA0CC08A701BD
1EC23C10C15D2865BEF776472C1F2AF7B2AAC9D054E34AD034A6DBBD08515C70
D50B1AB36F835503D1A0FC190C69D594F45AC4320191B4713DFC9BBDEB20C2CE
10EE7ED100EC3A1D3CC890D6A7C58DF092002CB8B153A56E8265DFE9A4B8B985
29E60ECC2E5083B165BE4023138BAED0F8A39C2AF653D6F7FA007E1B4AA77BD0
0F36DA92FABFEF241AB5AE14D2840856844220193704C00D6988A3F5E2744E70
E96454C1E13AB20A1E3D292BB761E72F42D904448CF4D6193DC0D51DA6888C49
D36DBE212A69E3325CA8479E756DE9F4B3B98C6B7AEFCC33D050A15E1A67B554
86584AD92F6B4582415E46CEE149F5A8F6E3D140B34FB04578E7D62BF87C6574
69A84C67C204AED4A113CE61969FD0807D7245628741F65DB211DADF1E95685C
578104408CFB15473A6BFF25A6C8677C13734E43BC4E4A94C153FB9DD52BD6A6
67650F1ED6AE992B325E1F01C567B62487777CFC985ADBED9F6BE2BAA2FAD2D3
EA361E333EC020D8488E7DBA4944DBD6A923C4A45B147245957DE8B6C05684A5
86DC62F5A1CDC4AE8EE7968FB5B46057B6A0E76B4AC5F199A4478F25C835340B
C8343114127A3A9678C5CD7EB9D90C985EE44F4DE6080D62932C3A48A5D20625
E34BCCA9679280744215F7E6F88B64E181433095FB6BBE8274873970ECA10F5D
A6E717655A8FC04E059188CCDC78B2979E14660C170EF6279C719507222F62D3
DC019D2010A0F31018A267859A9DB9A54ABB92AD3C5B73477FBE0C5468502C23
97FBF4AE42385A1670AAEE68017151E0521F48F55A78242ACDD4F0E1C9DCAF59
C9C382827EF23B6297675AA4C62EF11458AFFAFCDCC09ED44B6AD001AA08738B
54DCED7BA5F80BF26F6B36BB72CDED72B225BA2A7A9068DC80C579A291950B2D
F54A30B1C3AF1F8B456D9FB6E1E3C8AB9752E9DB11A72315EB877B068E89D7BB
FACADE25B1E95A46AC06E4797B63E17E77A8B4A91645C905F9764EB68C165C91
96D6790C3DF0CBD2CAFA84FD5977EE33C8FDFF95E9AE6CD948A9C3671D3C28DB
DB07A3132547BF6E28CB2CF098D829E7C056F03249AC46AC6063E9C884AFEC24
A22F7FE7DE15102DF79C943ECBA5F3AC9AE927F012CC133B5E7786F0E6128A56
A9FB0B946E04BE2855FE3CF2E4AE55C98270395C470D8820939E3B03BAED1475
474124830990D2918B758B941FEA36FA344631849350A3505CCCAC7D02D55982
C64E81C0ADA0697B314FFBD02E284F2474AA06D758CC8A1EAAFD36A8EECADA8B
1DD02A45B6DCCE56358A8FBB861A2D077A7A1E69B916A3E1797C456F291B91DF
A71BE65E3817C3DE6A043BDDED16EC99ED285AB9FCD1363F0DDD071779F1CA72
278BE84595587111E6E2F153895DA7AA81056B5636971BED87873C0E53075AC8
A3FB23FAE6EE3AB10E2116FBF423E52AE20A6D3E0FCF164DA284F96CA22AB00D
3DCEAA721375C90724BBA29CDBE94D83B9AC7B72DE2F201113764A0251BC2300
8C79903128ADD84BDE18601C7B9B103777D7DE059EAE9BEB5954163B8975621F
DD67BF5A91FD4A9C4DA8855E4297A3EC006FE691824836829E633811C1BDB6D4
45CC9230295FD4E5E8FBD99516D88D70365E146DCD9D401AB4B629C4C0781627
6D22CB1307A604DD885D1C296AFFD89E467C29DF103F83761E6D73EDD460C33C
05AB208BB1B5DC3C557B30C42EA87DDD533B359E0FCDD1C54D35E93F79E7D912
E47D5CCF8B0F3E84412F9363A4030D666E07CF1CF5744D4A4E9693C6B6599DCB
D4D584A0096E75869392167930934F6B9C38EEDB67969043CC0ADECF1811FE71
2BA469E4F3433E8B35CD442324B6A7AC8C62BACCAAB446DF88503ADC801D23C5
F177B865E059415EC89D8E3F8465B8A511AE6CB204337D3F64DA95F0EA9A68D0
2872CC554E38D19ADD97FE268E0B6874EC5EEA1461DA3D23265077AA5B9E74EB
32BD6E0DAFF3B8F2C9C67949881CA4250261022BB385C6D037F4BA0826D02D80
9FA0D7E2DC2158F53BC101116171F0894AE0BC1EEF89C205807E0BCE93C3BA93
FDBFC60BA2140582810FEB0CE217A1498E047E1BC3F0EF050CC7B38A4877F357
3D26C4C81B2486BCC419C476DF5CD9758D7425DCF529FBBECEC409E315E52F04
63E0B25085F9FF816DA23CB2BA53C98E14D9D3476C748FA740270481A91267F2
ADB10B6F85A69F84B07ED9F4E7D5E753DFBB3B1D7EE1B12F84058A6B6EE79AE3
A041F5473844F015791FA2720C51EAA75D1E51A0F6B1409F0B13245019A2CB23
63693C45AC4B377807EDE8BC8AE086F96C77D0BB32AB28B23F09EEDBA5049E7A
5ABA221EC619A3B025D050005752D17EF6D4B6C2957C91CCE9DE1D4307880044
ECDE73CE7CAD3ACCD2F4759638BC95E04D9D64057040440595473BBEFF56BDE4
B1E09982C99F832B510B7A52B85C4C068436D990ED8AA50A180E9C86CA2EADBA
387E01C7E951F9A3C9C5BDC4F1FA98A758C66FF9FA13ABF5313CB374AC92288B
90DB3AD923E2EC1FC1B8819EE14C37CF9A24DD2AA98ECD5C8AFB84B7B75C3233
34E2E18AC241AE19E650D6D26CE1BB30BBB21FA6E119502574961935DCEC9E04
C6A3FC8B48FD3D07E389B61687945F40
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /MPZYKU+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 77 110 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
-130 20 870 1080 re
f
-130 20 870 1080 re
f
215 125 517.5 930 re
f
7.5 w
2 J
1 j
/DeviceGray {} CS
[0.1489] SC
215 125 m
732.5 125 l
S
370.25 125 m
370.25 115.699 l
S
577.25 125 m
577.25 115.699 l
S
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 31.4 3.41992] Tm
0 0 Td
/F8_0 6.99975 Tf
(WT)
[6.607764
0
4.276847
0] Tj
-330.782 TJm
(VG3 KO)
[4.668833
0
5.445806
0
3.891861
0
1.945931
0
4.668833
0
5.445806
0] Tj
Q
215 125 m
215 1055 l
S
215 125 m
205.699 125 l
S
215 434.996 m
205.699 434.996 l
S
215 745.004 m
205.699 745.004 l
S
215 1055 m
205.699 1055 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 14.6699 9.875] Tm
0 0 Td
/F8_0 6.99975 Tf
(0)
[3.891861
0] Tj
-3.75 31 Td
(25)
[3.891861
0
3.891861
0] Tj
-3.75 62 Td
(50)
[3.891861
0
3.891861
0] Tj
-3.75 93 Td
(75)
[3.891861
0
3.891861
0] Tj
[0 1 -1 0 7.66992 30.875] Tm
0 0 Td
/F8_0 7.70025 Tf
(Spikes per burst)
[5.136067
0
4.281339
0
1.709456
0
3.850125
0
4.281339
0
3.850125
0
2.14067
0
4.281339
0
4.281339
0
2.564183
0
2.14067
0
4.281339
0
4.281339
0
2.564183
0
3.850125
0
2.14067
0] Tj
Q
5.0025 w
0 J
/DeviceGray {} CS
[0.7012] SC
370.25 647.57 m
577.25 306.867 l
S
370.25 931.004 m
577.25 261.402 l
S
370.25 1005.4 m
577.25 311 l
S
370.25 653.238 m
577.25 385.398 l
S
9.9975 w
/DeviceGray {} CS
[0] SC
370.25 641.422 m
370.25 546.043 l
S
370.25 641.422 m
370.25 736.789 l
S
/DeviceGray {} cs
[0] sc
395.246 641.418 m
395.246 627.609 384.059 616.422 370.25 616.422 c
356.441 616.422 345.254 627.609 345.254 641.418 c
345.254 655.227 356.441 666.414 370.25 666.414 c
384.059 666.414 395.246 655.227 395.246 641.418 c
f
/DeviceRGB {} CS
[1 0 0] SC
577.25 316.168 m
577.25 296.766 l
S
577.25 316.168 m
577.25 335.57 l
S
/DeviceRGB {} cs
[1 0 0] sc
602.246 316.168 m
602.246 302.359 591.059 291.168 577.25 291.168 c
563.441 291.168 552.254 302.359 552.254 316.168 c
552.254 329.973 563.441 341.164 577.25 341.164 c
591.059 341.164 602.246 329.973 602.246 316.168 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font MPZYKU+Helvetica
%%EOF
