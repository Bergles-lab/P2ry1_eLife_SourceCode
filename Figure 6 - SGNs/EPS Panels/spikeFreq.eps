%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.60.1 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.4.0.813654 \\(R2018a\\). Operating System: Windows 7)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 78 110
%%HiResBoundingBox: 0 0 78 110
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font UHJBDH+Helvetica
%!FontType1-1.0: UHJBDH+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /UHJBDH+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 929 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 71 /G put
dup 72 /H put
dup 75 /K put
dup 79 /O put
dup 83 /S put
dup 84 /T put
dup 86 /V put
dup 87 /W put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 107 /k put
dup 110 /n put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 117 /u put
dup 121 /y put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB9717A6272A275289BD1FB35B12257CF79B9ECF62F279FD939BCE5E30
019F9BF0A089BEF64B74130F7B73C12A015488012DCB4074893F7F2BFDFF883F
FDD68F49F4BC430ECD9382D37940E329F76DC73A163897CA48A004E1D543F9A2
8CBADFD283760ED9D0034B90678E3A3FE7D19CDE66865CA3151CD979889E6FB6
3914E8847E12FD8604E3475292BEAA44AA4E1E3D20636AAF23C1A4356F20E693
CBF1EF3F1F9CD19EB04CE789874021060785E0528FED878674920D24A057CF80
8B2CF644FF4BE585BA2396AF9BE686ADD4F2D80D7727F42178F31BB1946A92DD
0498CFCF091743E5345001ED1B4809D51D53E5DE35BAA4CB5B1A499595BCDF50
534FF2999EE5CC35B406622B0A3FF9F7BD36DED43E4CE7E665F17D0D2ADB0AEE
F42C3EC50C5FDBA173A5A2D929C2D5CB51298AAC47285F6832D13919BA388B8D
0E1D23D5DF0755D302F0A1D72ED1BC9986AD44EC427F1797E7E0A01ED1A6F6F5
0A88ED4E7DA139CFC027C38802FC563F62FB7FFDA4EC2C19BF77E16D52B34F85
72FCA74356FEBD09DD7D5AD2915C470AF816A601E4CD8E41E82DCD430133957D
89DD28E7440A43CA9155833F75A53BF89B77BA6903EBDED209EDC134DA56BD59
0CE717848453F9E9766745DE84826C98C93872D9DEC38955AE3308BA0257202C
43344811414A244D6DD0CE41CB4C45DD9352C60D215B918ED3577AC4FC28EA13
C68AA2EF200E16BA5A3D3EB02AF10056E0088A8CECFAC04C68F1B2390990FA1D
61FC534BDAC00DBEFB58F9B63C0D8FEBB16244D409811B2CF94BD0FD9AB4BAAC
D59EF61E1FD1F039F8777E4B87349BC8D88F60304EF033F26B7AE94EB0A1AFF7
D75E9FBD7FC4DDF0F38142A5A11441B98EEDA4E670F2700FF7C0E44743F35BF4
CEA1D6714BF9E434B6044490185BBCC2B4B1149D25DD2111948915C9F8B9AE3F
D779AA101E8B182DB7C394D0FF304F9E57BC36C136CB6B678CC63DD9F07FE7B1
B2DBA53C6025B341D7DE4AB879B50B54225B6EA713A4503780A25E591E4C6912
6F698D069EE6D4188B54C6D805E0284C5B705AE057D13DF57EB40960FF09608D
42C2ABDDA0A5B57163FE90FBDF1797D9D5ADA8D567D37D9BCB8DCECF8827EC4D
2379F6275E9C0D763085D38792318BFDC2637C9E0AE1F1450DE1FEE5A5C74B4A
FB4AC3C366D6D7E53E541DB3AEEE287D54E6AA9A0A16E8C7A158DA2927F74976
6FF0DBEE1C1AA5E9D4AEF1F8A76A7F0780DBE729B34CE772618A6D917AF96991
3E14463CDFE81DA5F441AE86587D8F8DEEC5CD3231637F7301316F28337BBBF3
CDFCDBF1CDA70C2A8B82FD888D7CBE0F94C1FBA5723629E1FE2EA2B38FDE5617
47FBC339DAB1F91359FEEE221708AAF96C991872B54A04FA8CB6668F54306483
65C3C84FA27896E3F060CEA27AFE68BD511916C60DDD437BACD698174181C0D9
5C8373DCBF5EFE83B9DA78B579DBB133C4EB35D77BD4509517C7C694DA589564
351B1BA3434D3B6BD6C8F5F836F926EC79DE38C04813C07AFDF39ED733FEDE34
0C942F75FFC3E0B343BE18698BF13876F078C4F78FC1EC238A730246ACCAFB4F
3022CD60D2B9428D13068D1C73FD9E09A9CEA54DDA9AE6DBCE8C34A8C8E46216
F71415805331701B1E6738868C8B76EBB42A9B3837E8D02A7CED9A60E1443990
0EB008BDCEA718EC3DD5A53BC6EE7AB441A2FDB940DFF63A1FA96571FA04A53A
F66A27DF9CFB7369A61B01E6DED770D3FF08F339FAEDE949CEC65AE7F1C823ED
A1EAD85AAFE8B1A40CF6FE140A23BCDF57D79F3A8F76718249D5E03BA985F951
7D2A64D924A404AF9A42337926F33141B5F2A5DD85146A9A5EF89551AAAC1361
7FA5D8FF72B0EC4B9226E9DD1C64E9D7E7491028ECC813E3EF75562DB90931D6
78F6BAADF7C1194611F4D3471864C04A5AF4401E217427518CD86131CFBE8BCD
57223B29AA43D50D85CFB8645E4FB7E824A10087E6E55DAF74C9BF49F46A5328
8698FA6F99CBE3B9EA287A0F908F08412F8DC01616318078F32B5EDB8933A8CA
0719F7527D9BC1AC85C1FFF54E2BF66BC3A48BCCAA811FF95C4831F5D60D4A62
6B7AF74C2942E188D7332ADA56EDE7049BDCF5B6D81537873AD36771ECC90542
1E66ACCFF4F00B1F59919054DCD931EA144F7A82F38722344125A75EFCCF1878
2C086F5E8D2D2951F98B03694E76451EF7FF510C03ACB1E8A9FB636AD804BE28
641424D83F719F3D9FAD9C8FC4B7EDC4F2A7F2F154CB24AA28338B27A1E25597
0848E1B9CC6851CD2946BDB5337903257F3F18919AB9D35E6C4C21A8D0976591
F00F32996852314831C8720DCE7289C8A1B4F2B4DB3E2EC5A8FA2340D3218016
E89FEE97C19BEF03926901761B83166EFD66A5B220017973B3F9FEB158044F86
86A25DCD203F4010994B4689526CF02EADBF8B7F26A246465D374BB433A5E91B
33C90A868C8609BA7ADC3AA33331FDFEBB8AC95441198BBD5F5F9E1D9CC6F682
FBE4D1F8BBB5847AE8A60E17CF129184EA70031AE502F5A30808F42CA5D58996
99F351FB18A5F79CF6A38E26C993E903D1E17F89031AB9BB516CC803EC1987D6
4A0D3AE7B0B1DE5C5540BFAEC5ADAAE683FEF9F2A500F9A548981EAF443C15CB
9D74220C68CEC229FF258C5CC84D36AAD4016A4BCE1F9ECDB576ECE30AB06C62
3D81D5DC8150D9521827F1D327BEE048534D76EEB763BFAC429F691336FB28DB
7E18BF673F6533B841962BC7B3587A62CF2CB763003D4DE3CFB0BE4B2EDEB54A
162E4B556690F397C0EDE3E969A5438AFF1240A614EE05A2EF5886B928660BB3
48375522291AD75E3E35F9D33E544B7C938F750F7DA5AC65E5259F6C79E8C5D6
0F5E120D08B9BE2174C6111858704E256A55B7453F0BD25F921593CBA468140F
D803DC20E502CDBE84D6EA741B8A56D671741F72DB202F6E28B2E0E5C93E823D
55BB790C4567B59CD3BDC324E65A01EFF00DE9E8255F41DD0654C2FD143932D5
EE8EC05BCB017B8561E3D2DD7F0E72D153DD00DEA87BF2FF5027637FA2523CF4
6A6460C93A807AF69AE4AC2088ED140D5ECC3D995EE56C1E537F448D38F3D027
DFC8EC9EE78411E431833C8557A157AF80507A4890A06DEE9046805DF6A25087
55C0C6CCBAAEA350EE5F8EEEC6B125B3D9017E3D9A9481519B1CFE7DE7DC901B
B63F730176FB340B3E494219645D8AA31D6DBA59B02D82DA087F0D82E66D00C7
1971C04A802A25D9AD7724823353A85BA87FFB8FDBE19E8B67B5955BDC2D5451
9B2BB875EECA12F45C3561B5FBDD64BC4DB752ED6AF675CFDC96400A817565E7
CF311357B6A1B201BE52CAD604A7837A250C8AF8A37FA560FAD3E087D7CBED18
B47976E50293CDD133AC2869B1FC954C96543FB9442414B5F4C53A15C6376B02
EAD51C82431729DE4DFB8C96AEF6D634DDAF5FE90F6E254EECEE118F8F9907F9
7FFD13476D86C36467207B38D7591A07ED71F5F2C236BA8F1F2E28D5BDD79120
C895F0987228B8914247C182D5C9DA6B106023A289F0B3939C9890162167E34D
7E9DE4F4950139567E70F6DA6CE8FD8ED365071F5D3C991D6E0ACDA0D921A54D
84D215EF8D353B652F9CC0D25D22CD2F8599A4092AB1D57801794F8AF61C0245
A50C67FDA5EA700F8111787785871BCD9B0CB91BFD5C780E7EA3382F4EA61C71
7A50525682964B3E51908354BB5CCEADEA1BA2B0DCE9347E44C474034AA513FB
751BB270A404B8C602F5F1CDC521FBF9A057539A6665E3D0A41A63B54D019029
96F12DB01076BE8747A6860490A02E518CD20CAAC0EC66A0FAC884EE1BE66239
4E410DF132E3BB27456BAE120D47A787F89D591244D780C4646F0011023F22CD
374601A8BA85E6D4550EE7971B41686BB67AC1138182E91B2830D8D13469401B
9BEB9C2AF0B8B3AF378A9DECB35109849F2FCEE568480AC0100624FACB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /UHJBDH+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 78 110 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
-110 20 870 1080 re
f
-110 20 870 1080 re
f
175 125 570 930 re
f
7.5 w
2 J
1 j
/DeviceGray {} CS
[0.1489] SC
175 125 m
745 125 l
S
346 125 m
346 115.699 l
S
574 125 m
574 115.699 l
S
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 28.975 3.41992] Tm
0 0 Td
/F8_0 6.99975 Tf
(WT)
[6.607764
0
4.276847
0] Tj
-630.793 TJm
(VG3 KO)
[4.668833
0
5.445806
0
3.891861
0
1.945931
0
4.668833
0
5.445806
0] Tj
Q
175 125 m
175 1055 l
S
175 125 m
165.699 125 l
S
175 357.5 m
165.699 357.5 l
S
175 590 m
165.699 590 l
S
175 822.5 m
165.699 822.5 l
S
175 1055 m
165.699 1055 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 10.6699 9.875] Tm
0 0 Td
/F8_0 6.99975 Tf
(0)
[3.891861
0] Tj
0 23.25 Td
(1)
[3.891861
0] Tj
0 46.5 Td
(2)
[3.891861
0] Tj
0 69.75 Td
(3)
[3.891861
0] Tj
0 93 Td
(4)
[3.891861
0] Tj
[0 1 -1 0 7.41992 21.125] Tm
0 0 Td
/F8_0 7.70025 Tf
(Spikes frequency \(Hz\))
[5.136067
0
4.281339
0
1.709456
0
3.850125
0
4.281339
0
3.850125
0
2.14067
0
2.14067
0
2.564183
0
4.281339
0
4.281339
0
4.281339
0
4.281339
0
4.281339
0
3.850125
0
3.850125
0
2.14067
0
2.564183
0
5.559581
0
3.850125
0
2.564183
0] Tj
Q
5.0025 w
0 J
/DeviceGray {} CS
[0.7012] SC
346 171.891 m
574 171.109 l
S
346 316.039 m
574 290.074 l
S
346 211.797 m
574 224.977 l
S
346 214.902 m
574 228.852 l
S
346 253.266 m
574 219.934 l
S
346 243.184 m
574 181.191 l
S
346 266.051 m
574 286.586 l
S
9.9975 w
/DeviceGray {} CS
[0] SC
346 239.594 m
346 222.191 l
S
346 239.594 m
346 256.984 l
S
/DeviceGray {} cs
[0] sc
370.996 239.59 m
370.996 225.781 359.809 214.594 346 214.594 c
332.191 214.594 321.004 225.781 321.004 239.59 c
321.004 253.398 332.191 264.586 346 264.586 c
359.809 264.586 370.996 253.398 370.996 239.59 c
f
/DeviceRGB {} CS
[1 0 0] SC
574 228.957 m
574 211.512 l
S
574 228.957 m
574 246.402 l
S
/DeviceRGB {} cs
[1 0 0] sc
598.996 228.961 m
598.996 215.152 587.809 203.965 574 203.965 c
560.191 203.965 549.004 215.152 549.004 228.961 c
549.004 242.77 560.191 253.957 574 253.957 c
587.809 253.957 598.996 242.77 598.996 228.961 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font UHJBDH+Helvetica
%%EOF
