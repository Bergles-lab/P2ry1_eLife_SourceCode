%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.60.1 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.4.0.813654 \\(R2018a\\). Operating System: Windows 7)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 83 87
%%HiResBoundingBox: 0 0 83 87
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font BCFSKH+Helvetica
%!FontType1-1.0: BCFSKH+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /BCFSKH+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 929 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 67 /C put
dup 73 /I put
dup 75 /K put
dup 79 /O put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 86 /V put
dup 87 /W put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB95BFE9411488486800535F51ED8857E5B4657E1A22A993D6E39E0C05
8F847FDDE9EE6EF999A2BBC3786D00BA61D4A60BF6A790DC3302D054819F1394
D4A90ACF31D3FF13C9A1EB4B56CD9DF83ED459C413A449ACC1B4B4733A28662E
53A253EC70F2043E28633CE787010BD31EB9B2FA57DA136987A9F3A5BCB4886E
6728AE34DB7C242CB38DC7C4352876CD3AE1BB5AF7446F07D5D212EDE555C987
E8BE9D4BD16F7EA41E09488C496D35B50AF864F3D0780E512639B6AA7198D384
A8A6C7B1A6509BE138CD36A689CAAADA8D81BE2F2B96C4E80C67221A7B1CDEDA
E9BD2452AFD770E500F1D9DD470D4B0E39FA0A84B057528521FABBAD12AEAEAF
8A9604EB6A06B8F2CF8A33FBC20E3F37D0D2B80A214CC67EA932B00AA9F4BF50
104F6EE738D3EB032B30A03E2EE790BE1C06E9B0CC10A3B2A7A02B8B77D59D51
5367FD513635928A20C2E9C1916F0B596F229F69DDF655414169291EAEAF0111
A7D2E2433111F3B0E14182433021FE8BF06020E372B72BD8A5C390E97F54414D
3A4FEE6E4B82452B515B1BFB94485FCAADDF007686AB3F4C553B0DE2477329C1
2F9D1C135DC85ADBDE47E37C6234CBAF59A442AB0B73DA7135D776272304A326
A1C09C34EA0274F229F8C293EAA9D682BE52E8659E52C42D8FE85E7166FAC5A7
4E3618A26028AA6018CDF5C93FD02409096921BAA32797772A6CDDD0868E3088
6F367D9AF9AAA31051DCE9BC18BFE29EEE254E6A4D3B7146846DE2E6EE9A89BF
37FF529560C881674081C841153E85B37A5E057777221E7ED07137BCF971F064
A26FF7EB790C67B585386F6AF9BEF73CBF48DA58DEB2C0BAF68E3BACD1DD74CC
6B9997EF352FF5B7842B005F4D225650111D9C82E51C20F24F86C921D7BB4A12
3CCBCAFAEA7ED81B9B33DFF15863393E78FE1D2EC34C5E98E3500C7EEB638C42
655CC0D64DF93B5C8321B4B4276BE0F13B8F701850AC40D4738BB3BF185C74B1
B1157D5D695462BB35A91288BBB1F405E0C6F20513A38AB641D5499145F2140D
7C338DCB5B97F6B19D5652A79EFCBE8C5871B122C698DCC6132612C15D805024
F8ADE0499D428D55D0D7D29B94F7042323403CEA7F4927BDE05C1CCBCFF96295
0FCCA08F6B60378A083CA2700EE5B30BA7212DD69EBD27529A285AC597B81160
B0A04DBF8B30338F49B81549A694D466CC6C522FA5DCE81B657E333B83B698DA
A4FD1F3F9757EE4EF4A0B92AD4730C737964791E9CE638DA4B59EFE29055EC0F
B05B8C554D1A106A70444976425EE321A968A70AC26288298ACD992A8A51C785
F874B786F9A627EFAB4E22A66307729699D828E7834DC4C1BFE152D452D62955
A393988158246A360375DB8E6E966859109A0D379163F4752F04DEBF4EF2AF1F
25F47FC36974595D93E4410B9A12BDD16F015C177367AED67AAF610BB082A5F9
00BEDA40DBF49A465AC385815254FAD5F5FA3E695A88BF57F1FD60A49CF75146
E8F54C4625CE83D5D7A3D17607F75EE5944496BEBE7A7E9078C85DD65C9AF193
582935FA8A4BFB80D9EC33755CA771928F086F88E38277EF52F4361FDF3719E3
2881261FB6B6E3A36CBFE991D0D4C356DA8236B0897A12487F434E064D538FA6
BEFD3BD79744051A9B0661B3ECF609CA2F58E3E94A9836F1906AC53D92A3010F
82701E285ADFCACD3A6B53873A9CEE6E2BB72000ACA533F737348A8F5123BF5D
B5F2BD2FD580F7308D460CB41ECCC0FB0A565B70A86A3AC0FC9EC143999B340E
4BF9AB3471186DEE7A7A939B6827117B32DB718FD3CD53453BC402B354C11B8E
FD244FD0415262DE7578151F34BE2FC83ED26DBAC8D246FB889CD98243662D98
ACB407BE4FFDEF3C97AB8FCA25AF5510B208D81FBBD4C6A7A482043AF9F918F6
884A1BFBD6BE756D404F2885816031B7DFC926B622CA411C7ADE89DB4412632B
C52FE98913E64EACB52A17BF25704A9C93BC1A3980E42B97B065C2F74E70FFB0
153853D0078C8A6FCF369B17D3C94176
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /BCFSKH+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 83 87 re
W
q
q
[0.1 0 0 0.1 0 0] cm
q
0 0 830 870 re
W
10 30 870 862.5 re
W
/DeviceGray {} cs
[1] sc
10 30 870 862.5 re
f
Q
/DeviceGray {} cs
[1] sc
10 30 870 862.5 re
f
452.5 127.5 345 697.5 re
f
7.5 w
2 J
1 j
/DeviceGray {} CS
[0.1489] SC
452.5 127.5 m
797.5 127.5 l
S
556 127.5 m
556 120.586 l
S
694 127.5 m
694 120.586 l
S
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 49.975 3.90859] Tm
0 0 Td
/F8_0 6.99975 Tf
(WT)
[6.607764
0
4.276847
0] Tj
547.821 TJm
(P2y KO)
[4.668833
0
3.891861
0
3.499875
0
1.945931
0
4.668833
0
5.445806
0] Tj
Q
452.5 127.5 m
452.5 825 l
S
452.5 127.5 m
445.586 127.5 l
S
452.5 476.25 m
445.586 476.25 l
S
452.5 825 m
445.586 825 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 38.6586 10.125] Tm
0 0 Td
/F8_0 6.99975 Tf
(0)
[3.891861
0] Tj
0 34.875 Td
(2)
[3.891861
0] Tj
-27 69.75 Td
(10000000)
[3.891861
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0] Tj
[0 1 -1 0 8.50586 37.5] Tm
0 0 Td
/F8_0 7.70025 Tf
(CVISI)
[5.559581
0
5.136067
0
2.14067
0
5.136067
0
2.14067
0] Tj
Q
/DeviceGray {} cs
[0.7012] sc
571.809 464.43 m
571.809 473.16 564.73 480.238 556 480.238 c
547.27 480.238 540.191 473.16 540.191 464.43 c
540.191 455.699 547.27 448.621 556 448.621 c
564.73 448.621 571.809 455.699 571.809 464.43 c
f
571.809 637.07 m
571.809 645.801 564.73 652.879 556 652.879 c
547.27 652.879 540.191 645.801 540.191 637.07 c
540.191 628.34 547.27 621.262 556 621.262 c
564.73 621.262 571.809 628.34 571.809 637.07 c
f
571.809 558.996 m
571.809 567.727 564.73 574.805 556 574.805 c
547.27 574.805 540.191 567.727 540.191 558.996 c
540.191 550.266 547.27 543.188 556 543.188 c
564.73 543.188 571.809 550.266 571.809 558.996 c
f
571.809 584.066 m
571.809 592.793 564.73 599.875 556 599.875 c
547.27 599.875 540.191 592.793 540.191 584.066 c
540.191 575.336 547.27 568.254 556 568.254 c
564.73 568.254 571.809 575.336 571.809 584.066 c
f
571.809 734.219 m
571.809 742.949 564.73 750.031 556 750.031 c
547.27 750.031 540.191 742.949 540.191 734.219 c
540.191 725.492 547.27 718.41 556 718.41 c
564.73 718.41 571.809 725.492 571.809 734.219 c
f
571.809 519.246 m
571.809 527.977 564.73 535.055 556 535.055 c
547.27 535.055 540.191 527.977 540.191 519.246 c
540.191 510.516 547.27 503.438 556 503.438 c
564.73 503.438 571.809 510.516 571.809 519.246 c
f
571.809 725.848 m
571.809 734.578 564.73 741.656 556 741.656 c
547.27 741.656 540.191 734.578 540.191 725.848 c
540.191 717.117 547.27 710.039 556 710.039 c
564.73 710.039 571.809 717.117 571.809 725.848 c
f
571.809 501.457 m
571.809 510.188 564.73 517.27 556 517.27 c
547.27 517.27 540.191 510.188 540.191 501.457 c
540.191 492.727 547.27 485.648 556 485.648 c
564.73 485.648 571.809 492.727 571.809 501.457 c
f
571.809 502.434 m
571.809 511.164 564.73 518.242 556 518.242 c
547.27 518.242 540.191 511.164 540.191 502.434 c
540.191 493.703 547.27 486.625 556 486.625 c
564.73 486.625 571.809 493.703 571.809 502.434 c
f
571.809 367.82 m
571.809 376.551 564.73 383.629 556 383.629 c
547.27 383.629 540.191 376.551 540.191 367.82 c
540.191 359.09 547.27 352.008 556 352.008 c
564.73 352.008 571.809 359.09 571.809 367.82 c
f
709.809 485.75 m
709.809 494.48 702.73 501.559 694 501.559 c
685.27 501.559 678.191 494.48 678.191 485.75 c
678.191 477.02 685.27 469.941 694 469.941 c
702.73 469.941 709.809 477.02 709.809 485.75 c
f
709.809 377.418 m
709.809 386.148 702.73 393.227 694 393.227 c
685.27 393.227 678.191 386.148 678.191 377.418 c
678.191 368.688 685.27 361.609 694 361.609 c
702.73 361.609 709.809 368.688 709.809 377.418 c
f
709.809 421.09 m
709.809 429.82 702.73 436.898 694 436.898 c
685.27 436.898 678.191 429.82 678.191 421.09 c
678.191 412.359 685.27 405.277 694 405.277 c
702.73 405.277 709.809 412.359 709.809 421.09 c
f
709.809 405.078 m
709.809 413.809 702.73 420.887 694 420.887 c
685.27 420.887 678.191 413.809 678.191 405.078 c
678.191 396.348 685.27 389.266 694 389.266 c
702.73 389.266 709.809 396.348 709.809 405.078 c
f
709.809 440.801 m
709.809 449.531 702.73 456.609 694 456.609 c
685.27 456.609 678.191 449.531 678.191 440.801 c
678.191 432.07 685.27 424.992 694 424.992 c
702.73 424.992 709.809 432.07 709.809 440.801 c
f
709.809 375.734 m
709.809 384.465 702.73 391.543 694 391.543 c
685.27 391.543 678.191 384.465 678.191 375.734 c
678.191 367.004 685.27 359.926 694 359.926 c
702.73 359.926 709.809 367.004 709.809 375.734 c
f
709.809 455.898 m
709.809 464.629 702.73 471.711 694 471.711 c
685.27 471.711 678.191 464.629 678.191 455.898 c
678.191 447.168 685.27 440.09 694 440.09 c
702.73 440.09 709.809 447.168 709.809 455.898 c
f
709.809 421.086 m
709.809 429.816 702.73 436.895 694 436.895 c
685.27 436.895 678.191 429.816 678.191 421.086 c
678.191 412.355 685.27 405.273 694 405.273 c
702.73 405.273 709.809 412.355 709.809 421.086 c
f
709.809 429.238 m
709.809 437.969 702.73 445.051 694 445.051 c
685.27 445.051 678.191 437.969 678.191 429.238 c
678.191 420.512 685.27 413.43 694 413.43 c
702.73 413.43 709.809 420.512 709.809 429.238 c
f
709.809 389.313 m
709.809 398.043 702.73 405.121 694 405.121 c
685.27 405.121 678.191 398.043 678.191 389.313 c
678.191 380.582 685.27 373.504 694 373.504 c
702.73 373.504 709.809 380.582 709.809 389.313 c
f
709.809 514.746 m
709.809 523.477 702.73 530.555 694 530.555 c
685.27 530.555 678.191 523.477 678.191 514.746 c
678.191 506.016 685.27 498.938 694 498.938 c
702.73 498.938 709.809 506.016 709.809 514.746 c
f
9.9975 w
0 J
/DeviceGray {} CS
[0] SC
556 559.559 m
556 523.223 l
S
556 559.559 m
556 595.898 l
S
/DeviceGray {} cs
[0] sc
580.996 559.559 m
580.996 545.75 569.809 534.563 556 534.563 c
542.191 534.563 531.004 545.75 531.004 559.559 c
531.004 573.367 542.191 584.555 556 584.555 c
569.809 584.555 580.996 573.367 580.996 559.559 c
f
/DeviceRGB {} CS
[1 0 0] SC
694 428.738 m
694 415.531 l
S
694 428.738 m
694 441.953 l
S
/DeviceRGB {} cs
[1 0 0] sc
718.996 428.742 m
718.996 414.934 707.809 403.742 694 403.742 c
680.191 403.742 669.004 414.934 669.004 428.742 c
669.004 442.547 680.191 453.738 694 453.738 c
707.809 453.738 718.996 442.547 718.996 428.742 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font BCFSKH+Helvetica
%%EOF
