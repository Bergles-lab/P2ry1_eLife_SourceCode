%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.60.1 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.4.0.813654 \\(R2018a\\). Operating System: Windows 7)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 83 87
%%HiResBoundingBox: 0 0 83 87
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font JCMYSJ+Helvetica
%!FontType1-1.0: JCMYSJ+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /JCMYSJ+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 929 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 53 /five put
dup 65 /A put
dup 72 /H put
dup 75 /K put
dup 79 /O put
dup 80 /P put
dup 84 /T put
dup 87 /W put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 110 /n put
dup 113 /q put
dup 114 /r put
dup 117 /u put
dup 121 /y put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB966D6518B5A8694B2654089FE00D86C0A7AE42411274EE55A1E0BAFD
F224E724525A32C38BF7C3DE517DC5968302BB227F4BC07B89EFDA21F5252B3F
8302263EC83E6E32BD97BB53EA65C5783D58852CA268E05C7A652176DA9123D0
4F6292CD268C7081566E51959CDA63F82F1096B3F29FA283EF67748AEAB4CC17
490457D7731B9847E4BD3157E5A4CD668003D4400708642DED49B89238FEDB8A
20E0AA9A0B6960A439EE79BFE79E433BE0EBD009BB63C63532C96C459AA3EC2C
EE432CCB07F2488C0E67FDEFDE0B9782AAACD8F776C9E8B57125FE0C63DF0998
2922031928301C8E4647E9D17F304788FAF0A8D2CDB0D4706BD7480AF7C66AEF
92D90F95D36338000E7ED89BD9C4736001610ACE3913756AB93023B9ED8CB5F6
B3D4A1AAE42316182F4ECDA456119EEA82DBAFE97DC3764E9138D0527250FB45
496C0E86321FCAD3F52136CAA47A31E88F17173FF50DE59FD2B72C7802803E14
9A528181823F3C54A4ECFEBF220BF7697BC1FDC3B7062CB45C5FD0A2F32BA66C
FBD882AF8A1330169CE156981E0F8C57EF219395F107DE911BA06D026CBE7E32
0CA4BD4B5F98655CF54C2ED132F0228D62AE6FE1646148264B98E9ADEA209C0C
1BB70AE0948EB727C087852ADB9D06B3E5B47A2F52A600C40D584AC0800F08E6
C4281EEB4247367A7038D3E69325DDBF75073B8BD24283711A970E501533449C
7AB19D49D8EB8C16A24D6779E7D04892731B8D39A98C21F919A128C12716B20F
2C4440CEF45621BD4FF8A60658BB8BD011FD2E382930E89140C2F6EBCA522747
0E4927B5D45AFB3A290B469BC2DEC3492EEE054B3F9C7BE6CE081FFD48CB0D09
E40825D5151AA2594D67642DEFCF0C33CCE55D0FE49E4FAAFF5F7A30727B3C70
E27375E8F54631D84F38D1C031F588869E57E8EAD8751A65A00C439D53356FD5
8F77254A7EB731370AF12D595D06DAACDE243133F30A9A8DC5D02A9761988D22
9F4C13DCF0E8F1B8439205D3B1B01444FCEB5B008271FA8139E5941CCA64C910
D2DF1A24E9D4A4C5E4E8D51BB53CC19EC74E071E97C5666FB887845B4EFD6B19
31301E8271E0538172932668E361D44A97AA9A650C97C437AFF1293AA8DD2584
F0F739013B950D70AB9DF0EB81A328DF31122AF551D686494A4CDE2FB0A766B0
DEFC883B282947AD9361D139DE9ADB5EDF329B15F9ED1289A8599BD6558A66B0
932EB8E222C98CC27695444D5BDE628C720A2130AD88D9FCAC4FEB5349B2F2FC
1ED589E172E945258CE3264BBA103E8CE36A2E609F00071575E7D839EE72913F
9D435B96DB8951B09D77423C1A25036D7201B054E3F10E72000C089248D930A8
A8F44A6BFD5F335E9B3A848B9AB65B5C89FB409C8E4947E45824E67D29BD19C4
C373D9BC8EFD28E9D3F9BFFD56EC159D5FC8E3A56E36F730BB2E779AE8F726EE
3233954C24D97B010124F9D2982C217D3EC6E225D4CE7B1CC683360B35DFD9ED
74825959DFA9480BA414A34C6D1F0BE494EAC2E3943B2904C5B8623C11206E88
823CA2A2B0CFA5F494A2BE9A5AF2FA39977258B34C1D87A282327120362D1EF4
D301E15CA2A379A667C4253F7DB58F7A6B2CAD9024CDFDD8C86640D6F978752A
DC3CF853B5C37382D1D282598E7A85DB619D4F640E9DB29FB99993DE53C8A7CC
FE102A7E3BCA36490420E55E7487E9D71960820846390696F9E9D28621B2A6B6
895F3EEDE5C76B2916430A7723230EDB16A482E698669C1116E5CA8641339388
09BFCE7939C4A18EB115D8C7A12DC08196153B37FE45E57B9CDCA4F28137E7DC
6E0535743D43CEB3AAD2636DB10F925FA391B5EE1E490EEC0ABA0EBA73B82964
68982F45D8031C3B4DCE11D9CF1133115695E043A6BB5B8C7D1690088D6FF08B
442D2C891495D24D252B8CAD9BA64319376A5A9D71EDAA1B6777225C99BAAE49
6E0DC645DA05EE3A2644879D704C90175A4CA8B1FB42B22C52EC78D49A98CEEB
DB05D50621318A1462C109A45F546072B3A6B7A40E0EB3FB79F09464A8CD99D0
2F1EACE1DBEF8CD2D36EF40721D2D11CDB3C2395F9BA1DEC8C3C88ADD0355417
4910B3EF0D7264B53E5675728A35AF89CA799B0F82B14C9B2D31A968577B4AA9
CFC4AC7B9175B1BFD37B7557E73E6BEFB42DE4F537772EE0DC498A652BAA59D4
96F67BC9707B4C10996BB1397F971E415ADF7A8726406ECA6C09982FE0E15597
7C285B792D569BC91E8F94EBC59A50D73D19F30ACC525697373256B5F2E50F07
3E2BD02833E5F0107E2D655196801F5951D220D663A47771C45F1EB6D68DA50B
97468F9400751986DF01AF392D9AB012576E0B45B44C9433E452957D60BFDC4D
68A12B234D7107D48B5247834CB03A38C68F78A3405987318E39F465F68D25F6
3818B024FFEF4254024A1E188BE041397B810982714398BEE732861A67E3FF54
6A48712DECDF0F975693BBB1772E1D9E22E1B236EAE25FFC5300879325DB6E7E
367D36F5E71C12FC55D41BBF0FDE21BE430C4B3BBA28EC739261CBDE265078D0
8D172BB79C8651DB523F727E82909CA6DD9CEA65304114F83912BCF3F992722C
CFD7E026243E1359B563FE4B041B37C30189124296384710B35480A215FE6D9F
CF0A2DF595054080DBB4597018D8B9742F4AE7C53BD145ACAFDBC83DEC95A3F4
7760D167510EFD4101AA0CFDD4675D091911CAA3083FB9DE01373392246E8B38
759312C50E1E6444DE837585A8DC4C4A131AC70FCF9A4A6D1C5C10140D69A416
59733030A62544051E1CE98E9A95A5EB7921D4C983DE2A11D0BF2653DE9D3E15
F9A547A40EAEFAA4D5719AA2FFAD5167066FB717C2F54F08D88284C778E30660
2C41F4667A314918FE7362206458B6BBFDB165973777B964DB5D70688E49F7A8
34834C1DCA4A57AEC7805DAD78140425A6547E085C13A928FF05285935924D6E
3CED0AFB35FA70F9E783DE2F04FE8C03F1F99CC3FFCFC5D184F43D67B6246167
C98E8520DF7E80A898FFE497182E9F129E2B8AC9A894739763E54A3B90B4325E
E0588DC84FA4F516C908F48B555CC171C5F4CC0A8C8B62F034E1BF8250
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /JCMYSJ+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 83 87 re
W
q
q
[0.1 0 0 0.1 0 0] cm
q
0 0 830 870 re
W
10 30 870 862.5 re
W
/DeviceGray {} cs
[1] sc
10 30 870 862.5 re
f
Q
/DeviceGray {} cs
[1] sc
10 30 870 862.5 re
f
452.5 127.5 345 697.5 re
f
7.5 w
2 J
1 j
/DeviceGray {} CS
[0.1489] SC
452.5 127.5 m
797.5 127.5 l
S
556 127.5 m
556 120.586 l
S
694 127.5 m
694 120.586 l
S
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 49.975 3.90859] Tm
0 0 Td
/F8_0 6.99975 Tf
(WT)
[6.607764
0
4.276847
0] Tj
547.821 TJm
(P2y KO)
[4.668833
0
3.891861
0
3.499875
0
1.945931
0
4.668833
0
5.445806
0] Tj
Q
452.5 127.5 m
452.5 825 l
S
452.5 127.5 m
445.586 127.5 l
S
452.5 360 m
445.586 360 l
S
452.5 592.5 m
445.586 592.5 l
S
452.5 825 m
445.586 825 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 38.6586 10.125] Tm
0 0 Td
/F8_0 6.99975 Tf
(0)
[3.891861
0] Tj
-5.25 23.25 Td
(0.5)
[3.891861
0
1.945931
0
3.891861
0] Tj
0 46.5 Td
(1)
[3.891861
0] Tj
-27 69.75 Td
(10000000)
[3.891861
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0] Tj
[0 1 -1 0 8.50586 16.125] Tm
0 0 Td
/F8_0 7.70025 Tf
(AP frequency \(Hz\))
[5.136067
0
5.136067
0
2.14067
0
2.14067
0
2.564183
0
4.281339
0
4.281339
0
4.281339
0
4.281339
0
4.281339
0
3.850125
0
3.850125
0
2.14067
0
2.564183
0
5.559581
0
3.850125
0
2.564183
0] Tj
Q
/DeviceGray {} cs
[0.7012] sc
571.809 221.273 m
571.809 230.004 564.73 237.086 556 237.086 c
547.27 237.086 540.191 230.004 540.191 221.273 c
540.191 212.547 547.27 205.465 556 205.465 c
564.73 205.465 571.809 212.547 571.809 221.273 c
f
571.809 509.574 m
571.809 518.305 564.73 525.387 556 525.387 c
547.27 525.387 540.191 518.305 540.191 509.574 c
540.191 500.844 547.27 493.766 556 493.766 c
564.73 493.766 571.809 500.844 571.809 509.574 c
f
571.809 301.102 m
571.809 309.828 564.73 316.91 556 316.91 c
547.27 316.91 540.191 309.828 540.191 301.102 c
540.191 292.371 547.27 285.289 556 285.289 c
564.73 285.289 571.809 292.371 571.809 301.102 c
f
571.809 307.301 m
571.809 316.031 564.73 323.109 556 323.109 c
547.27 323.109 540.191 316.031 540.191 307.301 c
540.191 298.57 547.27 291.488 556 291.488 c
564.73 291.488 571.809 298.57 571.809 307.301 c
f
571.809 384.023 m
571.809 392.754 564.73 399.836 556 399.836 c
547.27 399.836 540.191 392.754 540.191 384.023 c
540.191 375.297 547.27 368.215 556 368.215 c
564.73 368.215 571.809 375.297 571.809 384.023 c
f
571.809 363.875 m
571.809 372.605 564.73 379.684 556 379.684 c
547.27 379.684 540.191 372.605 540.191 363.875 c
540.191 355.145 547.27 348.066 556 348.066 c
564.73 348.066 571.809 355.145 571.809 363.875 c
f
571.809 409.602 m
571.809 418.328 564.73 425.41 556 425.41 c
547.27 425.41 540.191 418.328 540.191 409.602 c
540.191 400.871 547.27 393.789 556 393.789 c
564.73 393.789 571.809 400.871 571.809 409.602 c
f
571.809 309.625 m
571.809 318.355 564.73 325.434 556 325.434 c
547.27 325.434 540.191 318.355 540.191 309.625 c
540.191 300.895 547.27 293.816 556 293.816 c
564.73 293.816 571.809 300.895 571.809 309.625 c
f
571.809 310.398 m
571.809 319.129 564.73 326.211 556 326.211 c
547.27 326.211 540.191 319.129 540.191 310.398 c
540.191 301.672 547.27 294.59 556 294.59 c
564.73 294.59 571.809 301.672 571.809 310.398 c
f
571.809 270.102 m
571.809 278.828 564.73 285.91 556 285.91 c
547.27 285.91 540.191 278.828 540.191 270.102 c
540.191 261.371 547.27 254.289 556 254.289 c
564.73 254.289 571.809 261.371 571.809 270.102 c
f
709.809 284.824 m
709.809 293.555 702.73 300.637 694 300.637 c
685.27 300.637 678.191 293.555 678.191 284.824 c
678.191 276.094 685.27 269.016 694 269.016 c
702.73 269.016 709.809 276.094 709.809 284.824 c
f
709.809 439.824 m
709.809 448.555 702.73 455.637 694 455.637 c
685.27 455.637 678.191 448.555 678.191 439.824 c
678.191 431.094 685.27 424.016 694 424.016 c
702.73 424.016 709.809 431.094 709.809 439.824 c
f
709.809 237.551 m
709.809 246.281 702.73 253.359 694 253.359 c
685.27 253.359 678.191 246.281 678.191 237.551 c
678.191 228.82 685.27 221.738 694 221.738 c
702.73 221.738 709.809 228.82 709.809 237.551 c
f
709.809 535.148 m
709.809 543.879 702.73 550.961 694 550.961 c
685.27 550.961 678.191 543.879 678.191 535.148 c
678.191 526.422 685.27 519.34 694 519.34 c
702.73 519.34 709.809 526.422 709.809 535.148 c
f
709.809 444.477 m
709.809 453.203 702.73 460.285 694 460.285 c
685.27 460.285 678.191 453.203 678.191 444.477 c
678.191 435.746 685.27 428.664 694 428.664 c
702.73 428.664 709.809 435.746 709.809 444.477 c
f
709.809 343.727 m
709.809 352.453 702.73 359.535 694 359.535 c
685.27 359.535 678.191 352.453 678.191 343.727 c
678.191 334.996 685.27 327.914 694 327.914 c
702.73 327.914 709.809 334.996 709.809 343.727 c
f
709.809 310.398 m
709.809 319.129 702.73 326.211 694 326.211 c
685.27 326.211 678.191 319.129 678.191 310.398 c
678.191 301.672 685.27 294.59 694 294.59 c
702.73 294.59 709.809 301.672 709.809 310.398 c
f
709.809 580.102 m
709.809 588.828 702.73 595.91 694 595.91 c
685.27 595.91 678.191 588.828 678.191 580.102 c
678.191 571.371 685.27 564.289 694 564.289 c
702.73 564.289 709.809 571.371 709.809 580.102 c
f
709.809 236 m
709.809 244.73 702.73 251.809 694 251.809 c
685.27 251.809 678.191 244.73 678.191 236 c
678.191 227.27 685.27 220.191 694 220.191 c
702.73 220.191 709.809 227.27 709.809 236 c
f
709.809 275.523 m
709.809 284.254 702.73 291.336 694 291.336 c
685.27 291.336 678.191 284.254 678.191 275.523 c
678.191 266.797 685.27 259.715 694 259.715 c
702.73 259.715 709.809 266.797 709.809 275.523 c
f
709.809 355.352 m
709.809 364.078 702.73 371.16 694 371.16 c
685.27 371.16 678.191 364.078 678.191 355.352 c
678.191 346.621 685.27 339.539 694 339.539 c
702.73 339.539 709.809 346.621 709.809 355.352 c
f
9.9975 w
0 J
/DeviceGray {} CS
[0] SC
556 338.684 m
556 312.984 l
S
556 338.684 m
556 364.387 l
S
/DeviceGray {} cs
[0] sc
580.996 338.688 m
580.996 324.879 569.809 313.691 556 313.691 c
542.191 313.691 531.004 324.879 531.004 338.688 c
531.004 352.496 542.191 363.684 556 363.684 c
569.809 363.684 580.996 352.496 580.996 338.688 c
f
/DeviceRGB {} CS
[1 0 0] SC
694 367.539 m
694 332.129 l
S
694 367.539 m
694 402.945 l
S
/DeviceRGB {} cs
[1 0 0] sc
718.996 367.539 m
718.996 353.73 707.809 342.543 694 342.543 c
680.191 342.543 669.004 353.73 669.004 367.539 c
669.004 381.348 680.191 392.535 694 392.535 c
707.809 392.535 718.996 381.348 718.996 367.539 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font JCMYSJ+Helvetica
%%EOF
