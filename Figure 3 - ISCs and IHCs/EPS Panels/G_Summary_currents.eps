%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.60.1 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.5.0.944444 \\(R2018b\\). Operating System: Windows 10)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 86 110
%%HiResBoundingBox: 0 0 86 110
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font EYCENU+Helvetica
%!FontType1-1.0: EYCENU+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /EYCENU+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 761 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 53 /five put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 77 /M put
dup 82 /R put
dup 83 /S put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 115 /s put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB9716983BDC688427A6E47D33CF11642E28874AA6F7CA499F7345C693
5DCDC22242B8009624BFFB155BEA9B778C8551A847C742AD0C599B89FE8091AA
72F7C799BF883152518CA99B00F4109377E3FA7CB212F325E3CC0D096B85E9C7
931BFF30A6D5094E4160C5F9DC0AFA0729510F2B75E493C09F3C3530FB6AB8E3
88BB3B579EC35F360CF76C0ECC7C843DF5F3A17B22D2200C2EFEC6215E8E95D0
3BF324A4B976D0DB90F4BCF7DB18D452691698720679683E479D821CB39C268C
2CF347BC41E9F0AD2D5D520A378DEECEBA70D079D70D7C2F7561D2BFE1B60A2E
E9F1309622E506AE3432A0B9DFC393DB8EFFB1F70715E2F81EAAD89FC9073351
EB03897C75ACAFB92444EA0E00DF73A26DAA17BE8551E4E5BD425B89B7991D40
C3C66C94307E1251787F2A43E66EBCB7C783820F44BBB9616973A49B686B1948
5EAC5A3AF2540751595CBDA649F32A57A43F312C52C77C875526CD1B6D3CE596
6BCAC179B3C62478EB4BF5F6B016946F65113F872C5B36890BAE589A43F96E1F
8E523BD915AA5987D14151CE5762706234954619B3DC63EE74501970546320E7
A4668F1D1D5935D47A67096C1A821A25994EBA7BB33FEBF236CE9E6BF0C774F5
F50E588FAB5D89AAE87DDDAD7D042956022E253E9065975D9C2D1C1FC01A64AE
77C96A4037160D93C3FDB90A1A4518AA68998B1AE7B75E903C37876EFD74E305
62AC44374F286B3313C423FD36ECF351776F864A7654D037B7644AA26B66DC0B
46187A7F3464A1F7EC0C2643E51B37728EDF417F5BA79FCB3E41A1CC1251D048
8716CDB22A9216F500D80683561A7D018437C39AB831EDC9AF1B06AB6FA8F0F8
0F0CFE1D94346369B761177BAA3CB8FB3BA2B2FABAB98C2CD0FA1FFF31614232
E2C2F5D7B96DCE4A125FA1E6F468A96DF69714FACF94C2470F84503DEA7CC316
17162249356D6FD02D93ADB3B0F6457C6F4A303204DE74107999DB691E96606E
8298C825147A7BC7F97457392D53830EC102B4562C4F711C09AEF4AEA86DFF07
A564C28762F52BCFE0CF3E47B21DA639C53AC3CF25195937D408DC4FE0678CC7
178D9001388C4602EFA6F2F617742AEDCAF7DCFD6610A4CA91B0A2D273CA81CE
07ADE6AF155F0506699EC943D6268C9E3755464234365285C639ECB686910176
0E49D1C4DF650D87A6911BB39C40A68F1EC0397C7EF58A37177A77512872AE24
F4EFE59B691CF65FA89938945FCBE51ACF3F02548B5DA0A75C29401B3767145E
24F3C39A449AA88C56D97BE4BFBC3AFC9628F672B4B7811F10E76D13CEC4469F
B7D4D0CE0B8706B03FA3C38C4A006FC516BA34D77BE9ACF8E954F26275F77946
F54D8F6281DBA9796786646930C1791482DFA204647503C53A80654A919B00D0
EA8424B3D3AA5774A90B7880A3DF89047C7893829D321B090489BF84FD933CFB
E0F420D6251EC6FAED5B11105DE0596899D19C926343C01C11C4991DBDC19E27
BEC68B168F61C426B5BA523BB870A6F95C61DAC95451D9EC9D092A9FA71FF176
D92B2D9FC74A7646206216E6B174E9A27709DDBFB10BCEE00FE199AA2368AFD1
92204AC1DADA10BF1E3F598C79E388E8036DAAA2F64EA61316774BEB10D9C0F3
6A89895E41820E0C88B32BECA91F2A683205442E707995023B3658B2562BBCE9
C3E7F2D10D5946191475CC8B8CA492E117D92CDCA1E058636171F3EDBCC2400A
05433A520B5C8061F208E5350B890B3E2E8054FC281FFB7D4594A05B8FA6FDF0
EAE43A36E146D52148EAEB8195DD2EB9C785BA93A873A2CC6FA62E68B22FAFB5
F7EFDEFEFE9278F6F2C06DD8862F81786439720D75AA0CA84EF1FA8297D3245D
479D69D359EBB1B3E2CD65F7EF689686C7C7D71EB873A00EAB4CDF61C880FF26
EBE79CBF641A32197132ACB5F54A4482838824BD95D2CD0C56495E417D42239F
897D68368878AD8D7C14B76970F9F3D7D10511CD3D6B0A697F4E1441B5858A0A
C5524D602C55B43B5984C1BF238DBCC0BE67F34F3FC01C15F602381298D44E7E
74E59604B6C9A6C8200369E1808516A7BAFC0948A9AC69B6EC4B9D53A3367BEA
1B64A8276288C96CC22E7209D63E5EDDF3788EF759C287D47BCC6170AB17C1F4
50DF42C771985F2A62D97881D30BD99963F4D16BBC2E9E1B353F657212AF2658
DB5B303B34F8A928AA031C9835906831FED412BBC95E313C8207B6B363D845D3
B7C3B2573B56F5C3C11BE0FF4E3C5B600A7C88176599E97BA5EA75BBCC674E22
FE9FE50FE2526B66BC71A36136754E8745EAA1FB2AAE9422E621B132F1B08F86
7B1531F698ABA8E0932716DE5A0008E66013A51DB8200C4E71C7A2B8496F4CAB
7173E57E24F6FC5BC7BFE003C697E90C4600706786C5214D33AC84A574F8A942
22EA0B4954F933D6CEB46893BB7824FB6F098B3F9B3556785378831594B41451
6B131BD7043A23BB32A3E82ECF4769E7A7FB9E23C3B3BF7E0C0F33E79632F501
3725162C92149E6423E209C56E210B183810A9CA87192BE29EB1D961E470613B
4E0B30DF45CDD430E78A156E36AEF9C19AB5B97C1A110A37013D03DCE9E0CA51
76768912F6930A8E4224ECD2F0AAB6C7ED5C6CC2D953FCD76BEE2AEA89F51889
D0B34048C2B128F7C246CBF68D22672364638C63DF89C43D96087A8CAA907036
C1648E4200B5A45CC226F77E5AC174965A77FEC6F738765CAEC6EA36A92918BF
55DFD4625F0BBA87529C6645F5F77F12A4A2D0956247DA6D8EC25ADBA5334C23
6A23115A01E7D0A9578EF9B27EAB2ADBF0A8AAE2EF17B3C22F254EAB2499B073
8A22F9CF0C24F788FFDD9EAD4B346691DE3AE5EE158ACC0C6D344ADE64467399
F3D63CA5DAD1E4B5B9F337A8C6A50340780441059286B01BA8C5B0A8012A945C
7668E8DCCDF7C989C7B3EE9E920F7291C4EDF0983420301DE93A9B629A8AA6A0
6682BC0682DD634E9112F8B84EE4D8A91EBE5113264585AB9AB3AF57012393B9
C36DB3869201831DBB9B9A6C126DA4296B292FCD30B10826AA36F3DEB48257E5
DF4EE5EE2F91BAA10119720496E00EB70A05B49EBC384B428698CFF3EC50A818
2FE62DEB93230AE203CCEB525046FBD117BFF663822EE998EB3C48AB6A039646
27FC625EBB037EF30C31EA4D9EDF2B065F9DFCF72BE684965A395166EF585E57
1280B37A6D706E7370ECDC6E064E5E9B2872F6EBE48F6467DE48CDED6E635CDC
6EB0556FB26162160C1EE5C39CE5744D69D8F730B4A6E4262D684E56100827CA
02A583154B2E1C33A92821025CEF61591A3E03D212DD900D0C0C13312F499A4B
91210A54191027651184B257A28807A096642D4DDAF85C7896A757EBE779286C
AABD4F7787B2FF0BBA5D07CF6E5DE05FFB9559D735D095F5CB1B588B0A658416
0B452C63C750DD191923DCB8796A70FD79BC730B40766946CFD5FA37BEE1446B
4DFA1BF677B263A54F66B253D00BF358D24D831686A54EBD2F190267AB514069
9551C3D3B3006676DBC579ECA4695152487766AC322F8065265A202D0DB7237F
D4DC33C1D7C389D37B12869086F2F34F62A0F7BFE005316244D8148745905F14
C5B66315FD505FEEB1432EAC688DBA65282D03DC4ABF47C5A00CEAF997DE672A
35BB024FA6B5C204C1A3BD1DD050AA75474C78C2900F8326F7F43AA2577FE7CC
4FD034B7827E3723DCDFFBA56B48D12A15124759121FF931E5443FF82CFD1EB2
B8722AF44C4C036EFABFF79448037384B32A71F8BDCF7B75F7CEF3D5AA4F120F
B5B70E2181B4E8CF9EB563C46683A853F251090F37040A62BEBD7A087D4E4858
6D5C7ADC8988053AC91A3BCC3E28E82EEE0F80D3E80B6BB74AE3B6219890D440
CBBED752A68F07760A6DAE82DEBDCBCA092C7B048421CADDEDF0FB1EFCF7FE08
A90AC3CB19E2EA112D12EE7E46782124346EE915FA86F29C28E6BBC47ACAD841
B9A79578D6A0611B1C5902E6D94E75A583440C835C556D941AD2EB5DE26F42F5
D531B4C1DB625A3841BC4AE4408E6DFB8A0283897AE798D38157AD679D1BB540
184C03975DC00CEB3AB35E29DC398A160DFA7BCE25D252573A81B94ED1D4B1E2
79562D7E0BCACC0851A8105FB429F5C8F67DEC56D01DC5DC62AE1EA19E70A190
1229F4117B24D8C3A2E2222773A8EC31B7E99E2EE669EA1B0A6A47AC37146F1D
6B7598FD89C4ED168FA521908E23E6880978A95389D317AF2F7F16525D4E2659
D233A747CABE0FCEBE92F7B354E4FCC31333308770CA2CE4130C21D71A08185B
A493B0CDAB98074E4FADCF553CC3B467E3280C4B1919D1C801216EF9594F0C93
4551F5A0231E20D90D2447A313D3154960C360B3E7455285B894A8C220995D25
F39A033700BF22CA0A4332A19DB36D9E8A6496CFF43E00BE0F4C89624F7D7053
8B104A7F062C42A42B793F867529594F9B5D625B5AFB30B2EA70E59075808899
D3F95B4F68E1BA724082AAFB0C1278E4E0B0759E2BEAA53D17DE4F86
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /EYCENU+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 86 110 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
10 0 900 1080 re
f
10 0 900 1080 re
f
280 330 547.5 667.5 re
f
7.5 w
2 J
1 j
/DeviceGray {} CS
[0] SC
280 330 m
827.5 330 l
S
444.25 330 m
444.25 323.324 l
S
663.25 330 m
663.25 323.324 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0.707107 0.707107 -0.707107 0.707107 24.2723 1.23398] Tm
0 0 Td
/F8_0 6.99975 Tf
(+MRS2500)
[4.087854
0
5.830792
0
5.05382
0
4.668833
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0] Tj
24.4858 -15.4856 Td
(Blocktail)
[4.668833
0
1.553945
0
3.891861
0
3.499875
0
3.499875
0
1.945931
0
3.891861
0
1.553945
0
1.553945
0] Tj
Q
280 330 m
280 997.5 l
S
280 330 m
273.324 330 l
S
280 552.504 m
273.324 552.504 l
S
280 774.996 m
273.324 774.996 l
S
280 997.5 m
273.324 997.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 11.6824 30.375] Tm
0 0 Td
/F8_0 6.99975 Tf
(-150)
[2.330917
0
3.891861
0
3.891861
0
3.891861
0] Tj
9.75 22.25 Td
(0)
[3.891861
0] Tj
2.25 44.5 Td
(150)
[3.891861
0
3.891861
0
3.891861
0] Tj
2.25 66.75 Td
(300)
[3.891861
0
3.891861
0
3.891861
0] Tj
[0 1 -1 0 8.43242 23.25] Tm
0 0 Td
/F8_0 8.00025 Tf
(Change in baseline \(pA\))
[5.776181
0
4.448139
0
4.448139
0
4.448139
0
4.448139
0
4.448139
0
2.22407
0
1.776055
0
4.448139
0
2.22407
0
4.448139
0
4.448139
0
4.000125
0
4.448139
0
1.776055
0
1.776055
0
4.448139
0
4.448139
0
2.22407
0
2.664083
0
4.448139
0
5.336167
0
2.664083
0] Tj
Q
/DeviceGray {} cs
[0.7012] sc
455.434 378.219 m
455.434 384.391 450.422 389.402 444.25 389.402 c
438.078 389.402 433.066 384.391 433.066 378.219 c
433.066 372.047 438.078 367.035 444.25 367.035 c
450.422 367.035 455.434 372.047 455.434 378.219 c
f
455.434 370.07 m
455.434 376.242 450.422 381.254 444.25 381.254 c
438.078 381.254 433.066 376.242 433.066 370.07 c
433.066 363.898 438.078 358.887 444.25 358.887 c
450.422 358.887 455.434 363.898 455.434 370.07 c
f
455.434 401.305 m
455.434 407.477 450.422 412.488 444.25 412.488 c
438.078 412.488 433.066 407.477 433.066 401.305 c
433.066 395.133 438.078 390.125 444.25 390.125 c
450.422 390.125 455.434 395.133 455.434 401.305 c
f
455.434 466.492 m
455.434 472.664 450.422 477.676 444.25 477.676 c
438.078 477.676 433.066 472.664 433.066 466.492 c
433.066 460.32 438.078 455.309 444.25 455.309 c
450.422 455.309 455.434 460.32 455.434 466.492 c
f
455.434 377.313 m
455.434 383.488 450.422 388.496 444.25 388.496 c
438.078 388.496 433.066 383.488 433.066 377.313 c
433.066 371.141 438.078 366.133 444.25 366.133 c
450.422 366.133 455.434 371.141 455.434 377.313 c
f
455.434 498.633 m
455.434 504.805 450.422 509.813 444.25 509.813 c
438.078 509.813 433.066 504.805 433.066 498.633 c
433.066 492.457 438.078 487.449 444.25 487.449 c
450.422 487.449 455.434 492.457 455.434 498.633 c
f
674.434 708.672 m
674.434 714.848 669.422 719.855 663.25 719.855 c
657.078 719.855 652.066 714.848 652.066 708.672 c
652.066 702.5 657.078 697.492 663.25 697.492 c
669.422 697.492 674.434 702.5 674.434 708.672 c
f
674.434 659.332 m
674.434 665.504 669.422 670.516 663.25 670.516 c
657.078 670.516 652.066 665.504 652.066 659.332 c
652.066 653.16 657.078 648.148 663.25 648.148 c
669.422 648.148 674.434 653.16 674.434 659.332 c
f
674.434 538.016 m
674.434 544.188 669.422 549.195 663.25 549.195 c
657.078 549.195 652.066 544.188 652.066 538.016 c
652.066 531.844 657.078 526.832 663.25 526.832 c
669.422 526.832 674.434 531.844 674.434 538.016 c
f
674.434 646.203 m
674.434 652.375 669.422 657.387 663.25 657.387 c
657.078 657.387 652.066 652.375 652.066 646.203 c
652.066 640.031 657.078 635.023 663.25 635.023 c
669.422 635.023 674.434 640.031 674.434 646.203 c
f
674.434 737.645 m
674.434 743.816 669.422 748.828 663.25 748.828 c
657.078 748.828 652.066 743.816 652.066 737.645 c
652.066 731.473 657.078 726.461 663.25 726.461 c
669.422 726.461 674.434 731.473 674.434 737.645 c
f
674.434 876.164 m
674.434 882.336 669.422 887.348 663.25 887.348 c
657.078 887.348 652.066 882.336 652.066 876.164 c
652.066 869.992 657.078 864.98 663.25 864.98 c
669.422 864.98 674.434 869.992 674.434 876.164 c
f
9.9975 w
0 J
444.25 415.344 m
444.25 393.262 l
S
444.25 415.344 m
444.25 437.414 l
S
/DeviceGray {} cs
[0] sc
464.254 415.34 m
464.254 404.293 455.297 395.336 444.25 395.336 c
433.203 395.336 424.246 404.293 424.246 415.34 c
424.246 426.387 433.203 435.34 444.25 435.34 c
455.297 435.34 464.254 426.387 464.254 415.34 c
f
/DeviceRGB {} CS
[1 0 0] SC
663.25 694.344 m
663.25 648.473 l
S
663.25 694.344 m
663.25 740.203 l
S
/DeviceRGB {} cs
[1 0 0] sc
683.254 694.34 m
683.254 683.293 674.297 674.336 663.25 674.336 c
652.203 674.336 643.246 683.293 643.246 694.34 c
643.246 705.387 652.203 714.34 663.25 714.34 c
674.297 714.34 683.254 705.387 683.254 694.34 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font EYCENU+Helvetica
%%EOF
