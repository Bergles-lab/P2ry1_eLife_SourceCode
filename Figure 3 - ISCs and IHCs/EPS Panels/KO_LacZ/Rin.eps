%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.46.0 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.4.0.813654 \\(R2018a\\). Operating System: Windows 7)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 111 146
%%HiResBoundingBox: 0 0 111 146
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font ALCBYZ+Helvetica
%!FontType1-1.0: ALCBYZ+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /ALCBYZ+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 762 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 48 /zero put
dup 50 /two put
dup 53 /five put
dup 55 /seven put
dup 73 /I put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 79 /O put
dup 82 /R put
dup 90 /Z put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 112 /p put
dup 115 /s put
dup 116 /t put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB966E33A1007DCC801D574E5901DDD88D9620EDABB066686F036DC338
90D061C2B4859CE1145A7F356FA1ACE6BC874A4F6AB6470B94620C11CBD55558
92E318051548E1B4D865DF3C1EA1FA604F7087A074BA07735AF1201D552631C9
F720E16311DB72F9E86745A5E0529BDD095835F99CCAEF122780BE3F1FFA3083
697CA498889EC9B5A06D0851A9D4978DA8001B1D9F18176D0F1C58E4C9A05230
FDFF7A5A6C11127ED3590EC1DD58A70EAE7952DDE372CCC75B0CB7024B171368
5E0143148D3911A4C6C0B8DC5E1D196A4051CF1E96D86CB8515608511158EBD2
21138CD5C9FF9632CA5A8AA005BC9D19A0EB5B3BA74C6859EBA7CAD43D07900E
1FFAFA57C307AECA514C4A564A95336617FE2C363F9132149FEC22D211707E8C
9CD8D15E6CC95DA342BF31A9DC970BF8E926AAD00CFF2156ADAB09884D524867
942FC0CD16EFA6FD67EF9E7B1D56C3A641EEA999E3EACCEB5C03537ECC0894DF
575F60B64E540F957141C07A4FC2BA6F4E14E03C199CDE4AAEECF62C4975348B
777156CB93FF8C8C953252D26CC844E926969F295B161FA72B34AFD86480099C
45C3FE5EEF5CE4DD327DDE4589FD004B8664E8143E69C542D3EAE746678C89C0
BCDDB779B35D0D8EB62EE1453AADE636F93140E6C81746301EDE15527DC7A107
0C0CFC531AF1BAEDECFFACC59B3AC934F3AA58B19D19886D02712FF2BECF44EA
BB0322B15A58BCBCB889E0F33B76E22AF8DB3E338CC35BDBE8B5D840B81E7188
AE7D7A950280426BF5A76D83E8050AD78FA649F7D5F858544BB1E9C181D5E31A
3D2901E317FFFEC86AE0D1D6AAD3629BC8B21814BB1CE8BECE11A5F6A025ECCB
C8724EDBAD5E57ED2D8D3FD527317F791FEEA5D7F4706BDFB574961BA0F6A584
DE6377D49B7C9BA310F429A9D8E73B9ACFE450A4BE7BE0840B489582D18543AC
33FB6E8433E4D7B3006B8EAFF12CCFEC93F017FE84FA26ED4BA0E80D373960E0
73665488626CEE91E04D81A912674CEF4CBE3184A1F5B3E943CDD6E64B2A3829
19B5829C69F9410E39DDE7F06A16E14134788595CF23288F9C251922AB9E7F2A
C9BBF74C1DEE3C3DFD99F998B371DA1772FDC70B5772CBA44E58E3C55212FDE0
AE74DAB61647A36E534ADCB964E182862B33659CC25335FCAB2BC2F52B80FC44
C7F27879A757DD169C1279674F96C9360F15C6D6C87AEDDD483089277B4EDB7B
EE979EAD2A76D1B2FA38FAEAFC5121A52613152081A27A6F25233E1524F1173C
41949EC6F2DFC5CD873EA11D5FF64885A3BB5D558F0D7947F7F7579D68D2ED59
1D40A984AF593C922331D0BBF83A35B30C7B80F49782F670940C6FFDE66C1845
FC6C1D594A4D456BAA6B6468B83C49515FD3A3C5EA66EE9EE50E4652F2CBFAA8
C80FA1E40D9B8A412134849799BC31783668C2904B65DEFB0914F2A71F576826
9AC327FEEA445AFA9A27FC38E6391851C9A239DD5BF36D71390068837793BBB3
BEB4AE2208166B195B70B5725D1C62979B81F457B6E5FB76FDFAA0ACDF3ECE8D
73D3A55C2836743E12EFCF802F63A3485C5B23845410E057C8CC71EFACBDD107
9E1EB15552057474F8B1F48A99E7DA1985BCDC897C1909BDB46EC69BD65B3E0F
2025C0D102F1CA0420ECA7A0DFCC9A5C3733E0FFE527706212F4E2408F85BD59
2E17F5362A370698FEFBF26817F2C12E69AAE28FE45C1450CAD55AB221D178F7
799109900DBE93C43E0BB8250E0F682981E74C0885F4F44F1BBDCE15BE7E5E59
A6B1630B20A218AFC6A24F83FFFF2183262C1C028813C5D0E8CABB0AF52580A0
B598C93973FE3EDE926C9B40A14F29F298CDE1C4B779F94F0DF047919A53BFE1
DEA77B922279D20C125D7B52E6AC2B76A7C0E50A32AF56AA84FB4C87F428FE86
59F199FF2F24DD039DB0DC27A696315542848422D0B34CE84FD7E84B2FE56F62
01268D4823436C5ED35EC40B9746A2DA4D33F14AD2420FB5C6D6B758DE7C19F8
5266DD39E551289955CA09651BAA04244A6B4DB8569B3A1C45610506E3E1506D
DF191675A48E18A2865A52C5BDB4806419A98EE90C5160D73ECF57F5EFC53DFF
A5B8D02E4780AC27A4D195D0604D55305AFF943F1470BAA3CA4CFA5BEBFA0734
4B114AAF307D60CF0E301180750405C4E2B46D7D2AEFD39B7B00AD3920034D99
7DCF30D75284DFDA1FA8BCC7BFC73CCD6158DE3325FA6167A89949596EA1588F
F89646FFAC2328A884822A1D53039410637B99DA9608C4B0F30FD4F811BECCA5
6D407854D39BC0242A4A380EAD68F77E56B4E47A6793C1B9B0376F2643725685
9C32E9ACB5E9A8F6CCAE201C50A58ABAD4B93EF683ACF5B5EB2AB9DF9E473893
067FAEFD022321F53601C9FA70C9E6E523CDF00B470B9E94D95A5AA6602A2B3E
C52B323E3178839B1F127997A9B3677E03DFC9A0FB1149BC7F0908AB5C06340D
287DA6F88FC4E9E6F783FE8C9E1911087E08A17BD355E1CBBB609665D4128AA7
8467A6567B4BCD77A1315187DCD3A66F5D4814AC07C2A92FEAE1FCD333CD4945
D30F06A08D58EB9BCE1C8AB884D6FC2C278710558790C063609996F5E6E280E5
AA69A9BA0DA46437709EF12096FA1FD8D24A3360616DDE2B04019CD8C4DCFE85
2DAC8761A57F2BD6B9D8DC5DD301B14DEB626A0607999D4CF65641E42953D738
4B70057E43748BC3954365153E62000A297D6C99C5324570B65A54F3DF48F6C4
0D5E0708D86D85E6B4384E121847EA4DB48B71F60EC885798B981185D1562181
265A932532F126BE9F24FDC0CAED7FE0981A4FC41EB0568DC558ABB6A5272282
073344DF1BA5BE03121C1AC3D847C9921A757C261036151185F786C3E8851AA3
3AFD5C910739EEC285A2075BAAB8135C50DAA39FB7E2F253C4D74156C13BBC87
607A4DC4C9F4B6B23821B9BB25A75EC8F8CC9577DEA59BFFACDAC7EAFBF4C13A
CE43D3CA6FA1C04F1F22081771967451C351BEC958DB26D6F3AAA66AEA3D5454
29538281D6C17D9100E73FBF6CE5ED4D363577760F816E0058D85DE6470D0A5B
EBFEC425A86E5600BEC3E198932ED342412205D97C042BEFAAD7140A506B4999
42AC7D03E57976B0DF086E9EA5B06737825DA393AD868A22EA85A99DF2446E46
EAB6B4B8A5D7ED8B5ED143112D79F95BDAC3C0EE08C9C2B8D43D4C3744C7D49D
C6BE4C46F43720212B58C0F373C9836530F644E7DCBB0FC2EB8BA949D95F44FB
69DC5531686BF63F30821BAA36E22511FF5C3F2A108D47CEBF3091A5F1F916C0
5263F69566406F805E09FFBC0AAADADA5BFE717C81077ED5821A054A448C98DD
27D0403C4BF64C55F081A690DFC0F69A0CEAF344FF5DD35285177C88F8290894
8DABAD8B4E359A7EEBCC21BCBF26180FBBC89921D59E69076572DD5E81656E64
E8E600F554F2CF26A9E5E3B58B9830DF87DF833588197D92594B3B50A0CE1CDF
389C227CD2C367DFE32BCEA61A15F197DE0F9D5BC44F5B57DAE1A00C249624
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /ALCBYZ+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 111 146 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
0 10 1080 1440 re
f
0 10 1080 1440 re
f
225 130 855 1282.5 re
f
7.5 w
2 J
1 j
/DeviceGray {} CS
[0.1489] SC
225 130 m
1080 130 l
S
481.5 130 m
481.5 117.211 l
S
823.5 130 m
823.5 117.211 l
S
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 42.9 3.57109] Tm
0 0 Td
/F8_0 6.99975 Tf
(KO)
[4.668833
0
5.445806
0] Tj
-2208.7 TJm
(LacZ KO)
[3.891861
0
3.891861
0
3.499875
0
4.276847
0
1.945931
0
4.668833
0
5.445806
0] Tj
Q
225 130 m
225 1412.5 l
S
225 130 m
212.211 130 l
S
225 557.5 m
212.211 557.5 l
S
225 985 m
212.211 985 l
S
225 1412.5 m
212.211 1412.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 15.3211 10.375] Tm
0 0 Td
/F8_0 6.99975 Tf
(0)
[3.891861
0] Tj
-3.75 42.75 Td
(25)
[3.891861
0
3.891861
0] Tj
-3.75 85.5 Td
(50)
[3.891861
0
3.891861
0] Tj
-3.75 128.25 Td
(75)
[3.891861
0
3.891861
0] Tj
[0 1 -1 0 8.32109 33.25] Tm
0 0 Td
/F8_0 7.70025 Tf
(Input Resistance \(MOhm\))
[2.14067
0
4.281339
0
4.281339
0
4.281339
0
2.14067
0
2.14067
0
5.559581
0
4.281339
0
3.850125
0
1.709456
0
3.850125
0
2.14067
0
4.281339
0
4.281339
0
3.850125
0
4.281339
0
2.14067
0
2.564183
0
6.414308
0
5.990795
0
4.281339
0
6.414308
0
2.564183
0] Tj
Q
/DeviceGray {} cs
[0.7012] sc
497.309 584.039 m
497.309 592.77 490.23 599.848 481.5 599.848 c
472.77 599.848 465.691 592.77 465.691 584.039 c
465.691 575.309 472.77 568.227 481.5 568.227 c
490.23 568.227 497.309 575.309 497.309 584.039 c
f
497.309 306.406 m
497.309 315.137 490.23 322.215 481.5 322.215 c
472.77 322.215 465.691 315.137 465.691 306.406 c
465.691 297.676 472.77 290.594 481.5 290.594 c
490.23 290.594 497.309 297.676 497.309 306.406 c
f
497.309 141.957 m
497.309 150.684 490.23 157.766 481.5 157.766 c
472.77 157.766 465.691 150.684 465.691 141.957 c
465.691 133.227 472.77 126.145 481.5 126.145 c
490.23 126.145 497.309 133.227 497.309 141.957 c
f
497.309 153.387 m
497.309 162.117 490.23 169.195 481.5 169.195 c
472.77 169.195 465.691 162.117 465.691 153.387 c
465.691 144.656 472.77 137.574 481.5 137.574 c
490.23 137.574 497.309 144.656 497.309 153.387 c
f
497.309 286.824 m
497.309 295.555 490.23 302.633 481.5 302.633 c
472.77 302.633 465.691 295.555 465.691 286.824 c
465.691 278.094 472.77 271.016 481.5 271.016 c
490.23 271.016 497.309 278.094 497.309 286.824 c
f
497.309 223.809 m
497.309 232.539 490.23 239.617 481.5 239.617 c
472.77 239.617 465.691 232.539 465.691 223.809 c
465.691 215.078 472.77 208 481.5 208 c
490.23 208 497.309 215.078 497.309 223.809 c
f
497.309 554.543 m
497.309 563.273 490.23 570.352 481.5 570.352 c
472.77 570.352 465.691 563.273 465.691 554.543 c
465.691 545.813 472.77 538.73 481.5 538.73 c
490.23 538.73 497.309 545.813 497.309 554.543 c
f
497.309 281.629 m
497.309 290.359 490.23 297.441 481.5 297.441 c
472.77 297.441 465.691 290.359 465.691 281.629 c
465.691 272.898 472.77 265.82 481.5 265.82 c
490.23 265.82 497.309 272.898 497.309 281.629 c
f
497.309 582.863 m
497.309 591.594 490.23 598.672 481.5 598.672 c
472.77 598.672 465.691 591.594 465.691 582.863 c
465.691 574.133 472.77 567.051 481.5 567.051 c
490.23 567.051 497.309 574.133 497.309 582.863 c
f
497.309 648.375 m
497.309 657.102 490.23 664.184 481.5 664.184 c
472.77 664.184 465.691 657.102 465.691 648.375 c
465.691 639.645 472.77 632.563 481.5 632.563 c
490.23 632.563 497.309 639.645 497.309 648.375 c
f
497.309 409.441 m
497.309 418.172 490.23 425.254 481.5 425.254 c
472.77 425.254 465.691 418.172 465.691 409.441 c
465.691 400.715 472.77 393.633 481.5 393.633 c
490.23 393.633 497.309 400.715 497.309 409.441 c
f
497.309 874.613 m
497.309 883.344 490.23 890.422 481.5 890.422 c
472.77 890.422 465.691 883.344 465.691 874.613 c
465.691 865.883 472.77 858.801 481.5 858.801 c
490.23 858.801 497.309 865.883 497.309 874.613 c
f
497.309 597.852 m
497.309 606.582 490.23 613.66 481.5 613.66 c
472.77 613.66 465.691 606.582 465.691 597.852 c
465.691 589.121 472.77 582.043 481.5 582.043 c
490.23 582.043 497.309 589.121 497.309 597.852 c
f
497.309 982.605 m
497.309 991.336 490.23 998.414 481.5 998.414 c
472.77 998.414 465.691 991.336 465.691 982.605 c
465.691 973.875 472.77 966.793 481.5 966.793 c
490.23 966.793 497.309 973.875 497.309 982.605 c
f
839.309 196.199 m
839.309 204.93 832.23 212.012 823.5 212.012 c
814.77 212.012 807.691 204.93 807.691 196.199 c
807.691 187.469 814.77 180.391 823.5 180.391 c
832.23 180.391 839.309 187.469 839.309 196.199 c
f
839.309 245.426 m
839.309 254.156 832.23 261.238 823.5 261.238 c
814.77 261.238 807.691 254.156 807.691 245.426 c
807.691 236.695 814.77 229.617 823.5 229.617 c
832.23 229.617 839.309 236.695 839.309 245.426 c
f
839.309 301.871 m
839.309 310.602 832.23 317.68 823.5 317.68 c
814.77 317.68 807.691 310.602 807.691 301.871 c
807.691 293.141 814.77 286.063 823.5 286.063 c
832.23 286.063 839.309 293.141 839.309 301.871 c
f
839.309 238.234 m
839.309 246.965 832.23 254.043 823.5 254.043 c
814.77 254.043 807.691 246.965 807.691 238.234 c
807.691 229.504 814.77 222.422 823.5 222.422 c
832.23 222.422 839.309 229.504 839.309 238.234 c
f
839.309 285.57 m
839.309 294.301 832.23 301.383 823.5 301.383 c
814.77 301.383 807.691 294.301 807.691 285.57 c
807.691 276.844 814.77 269.762 823.5 269.762 c
832.23 269.762 839.309 276.844 839.309 285.57 c
f
839.309 258.988 m
839.309 267.719 832.23 274.797 823.5 274.797 c
814.77 274.797 807.691 267.719 807.691 258.988 c
807.691 250.258 814.77 243.18 823.5 243.18 c
832.23 243.18 839.309 250.258 839.309 258.988 c
f
839.309 130 m
839.309 138.73 832.23 145.809 823.5 145.809 c
814.77 145.809 807.691 138.73 807.691 130 c
807.691 121.27 814.77 114.191 823.5 114.191 c
832.23 114.191 839.309 121.27 839.309 130 c
f
839.309 218.336 m
839.309 227.066 832.23 234.145 823.5 234.145 c
814.77 234.145 807.691 227.066 807.691 218.336 c
807.691 209.605 814.77 202.527 823.5 202.527 c
832.23 202.527 839.309 209.605 839.309 218.336 c
f
839.309 295.117 m
839.309 303.844 832.23 310.926 823.5 310.926 c
814.77 310.926 807.691 303.844 807.691 295.117 c
807.691 286.387 814.77 279.305 823.5 279.305 c
832.23 279.305 839.309 286.387 839.309 295.117 c
f
839.309 217.977 m
839.309 226.707 832.23 233.785 823.5 233.785 c
814.77 233.785 807.691 226.707 807.691 217.977 c
807.691 209.246 814.77 202.164 823.5 202.164 c
832.23 202.164 839.309 209.246 839.309 217.977 c
f
839.309 146.945 m
839.309 155.676 832.23 162.758 823.5 162.758 c
814.77 162.758 807.691 155.676 807.691 146.945 c
807.691 138.215 814.77 131.137 823.5 131.137 c
832.23 131.137 839.309 138.215 839.309 146.945 c
f
9.9975 w
0 J
/DeviceGray {} CS
[0] SC
481.5 473.457 m
481.5 404.102 l
S
481.5 473.457 m
481.5 542.801 l
S
/DeviceGray {} cs
[0] sc
506.496 473.453 m
506.496 459.645 495.309 448.453 481.5 448.453 c
467.691 448.453 456.504 459.645 456.504 473.453 c
456.504 487.262 467.691 498.449 481.5 498.449 c
495.309 498.449 506.496 487.262 506.496 473.453 c
f
/DeviceRGB {} CS
[1 0 0] SC
823.5 230.426 m
823.5 213.379 l
S
823.5 230.426 m
823.5 247.473 l
S
/DeviceRGB {} cs
[1 0 0] sc
848.496 230.426 m
848.496 216.617 837.309 205.426 823.5 205.426 c
809.691 205.426 798.504 216.617 798.504 230.426 c
798.504 244.23 809.691 255.422 823.5 255.422 c
837.309 255.422 848.496 244.23 848.496 230.426 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font ALCBYZ+Helvetica
%%EOF
