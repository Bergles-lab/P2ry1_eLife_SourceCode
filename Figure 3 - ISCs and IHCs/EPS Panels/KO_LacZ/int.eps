%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.46.0 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.4.0.813654 \\(R2018a\\). Operating System: Windows 7)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 110 145
%%HiResBoundingBox: 0 0 110 145
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font WNNWSN+Helvetica
%!FontType1-1.0: WNNWSN+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /WNNWSN+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 742 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 53 /five put
dup 65 /A put
dup 67 /C put
dup 75 /K put
dup 76 /L put
dup 79 /O put
dup 84 /T put
dup 90 /Z put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 110 /n put
dup 112 /p put
dup 114 /r put
dup 115 /s put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB966FC1848061C8C2792EA837CA2980815FE1B4759D42110B21023348
675B4A4C5BACC0A5FCF9882D40B72C58931AF517DF541CAE397EEB49302082D4
84EA76FE6865FD0D5D635C2B1D6115C9C3A491DB57199900FDBCCCF0994EAB43
BAD4BFB4DAC85771D629060A7DA4A7AD6A52BA4335A368FF9168D634363A2F57
17F588FB0EA874DB37A38E56FD02B6DA3D725AB34BCE6AB6534A01AF5AAE66BF
D1714EF7AE5895D84B0FB667E9341429FF03071951DC5BEAEA1386F71A099B13
7C404E5807C8A9CDD414580D5F1F00B778ADAE310747EE987B787FB771B0403A
44782923008B3117323F976BF20091422F6AC92D228CA09DBFF5BF2C3A52AAF6
E694C9B9F66C4A392A156A920639C79EBAF52C2313E309A5CE0AE8B3474DB7A4
76E6B953517C9B1EB650AEF54F718FAEAFE191ED14DDC01B43999B91FF5B262A
D2CD4665C4B03A04782A049C24DD758E82743F10EE1F9063E94F8E8F1B7713AF
7F1E77749F9021A380124C939FB03116C5A89FA6B0FD73651E85B3BF47536AC5
F6DD2434DF6E07F1A33370E572EE501AB22FEAE638E6F453D09D0A97342D525A
262F9C73DAD194C6D08190E80AFCF2A3385219DC717D4EB4F997FD1B2216D6A0
61D8CF6D79F40720365912489D288B6FD84E187BA8D69E0F7A90C8D2FCEC4FE1
5A2D76E4154D6E61A711CD2BA1DF0B66567BFF2A1FC2905A383BC80C7845FFE2
FE8AA1E1E40E7C80EE2EA1CE496601C54F964CF8F4E90F75A04F3E7A1D4994AC
F58358B60B204B8E353FC68A3E6E7747D4BB7777F067D2AFE07C3363B6C3492F
E83F822DE3EC1996268113ABD63ACA42B320CAE50A39D5AC6408299E2DB944BD
1D4859781ED0883BEA1ACED822EAA935801F29949B63F5977D15465ADB2BB698
8824A9599DB881E4EE5FA7748D1D7B519A9A9E4FD4BC57ECDF2A88D8962B4DF7
137B80FE090EF76385C151F71BED093B46EB52F36FAA5E985B721404BA3CA288
20C96660CA63F46CE061D7B542D20CF2C762E679B02548A28DD86C459900FFCB
88440C580E3CF608A4A1B70C623E8CC48034DF959D018D39EE7CAF61C3CCD868
D33D0F57B7230F423541A33087BD3F615CEC115E0D8B8EBA75F13BFD4BE4B5B4
AC0FE8C031CA7933E3D84247192BBEC8E3CDF6A8A3EB7537BEDCE0D25B476C7C
D05569C76D3A4317217CCF5F8C0177AAD612E1EA84FB0805C40C3AC468ADB7F3
1E397156B9EE72F1662AB730199BA70A4368F8CC9077764F82884F71F1A87790
288B8BB490494BB787FF2ADDE9D72D336FECC2CA26F30138138436C79F39BFE3
C3CA19A2A8888C4C2224BC2A8727C07ECDCD1577DCFF3BEECB6E44CB9193C40E
4072C3BBE0B5F2FDD645E06B232153953345DA90F5BB47450C9081C16A0ABF52
DFE8C8FB40555F9E92AA891BBCBD5E801E9C2DCEC1AA537E49CF5E9DF5A5807A
4C519EFDBAC57AC2269F9741A60E473FE2C0B4245F517F04A11CE440B3973872
399F5266B47AB286C0A52209DC06093104275FC5CBE895ADE28BA8627FDA9D77
4357D55A0E6A71DF3E46657A87DEFECD6649F1107145534A8C96A098B2C755F1
CF50FDCD88FF5F45399F267CC9B78B5106511CF02F284012CF2564E74604E8DE
70F0D6CD42A97F90F303B16F005D2587845B33B430E9403931C8840248F2F530
4DC69BDCCEF04170CAD034EF6FF6E411D3FA1ED52A06C9DB385AFD3B08F4D258
5C0E5D6A08ACAEF32F73792844E9E521FF8B9B5826583BCA4AA2FBD10E21AB27
FD780E3E57E813F3C62A38475F3E6BEDCF0ADEABFDEF6C00616A28A124FC4788
3212FD34F29DBB8FD9B0C804124C49800AAE6D41DFDEF45CC7B61D7E9D70F543
189B3EB3037A2FF76FD6EB495742F69EE1A53CD380A7A8BB1CB1E27558D2B682
A3C0658728C5F43287868EDD1B4BE08777EB0575002A3CE04BF65C3AF68D4056
9D8C02D4A2CDC34070C4BEB684D7E2F2FA768584F560B57B3A81DC9052AC6155
ACCA128C11B6C1AEF1F25F3D8FAA63655C2A5772F3AC8470C31A2C06C1EF30D8
7E497438F1F9FE28B8280C26CCF3985CEAF3D29CBCE0C4999E17B7DB59E7194E
FD058B0DA66DF4CA3F58632FE49C22077ED0F1CC376514F817E9ED8FC563951C
6F162E4C16DB9CC7ABD1DBBC2586D3EC21FCBD43C101472BBB88F59B0F431546
A6A9B332E97772BF87835139E559F948042790AE53ADF07794DDDADF4FB0AFC4
DCD5894D6E90AAD89838B25FD811EA5D0ED52A0F45BAC7E8B50B23EAA32E8D9D
7D4C2E23A1E11C7D67289127DCA01CDCD6BDCEFCF72C4AE7D700F564803068E4
A90CE2581B84922470AD50D939092A94B3B083D0537F80C68B4A5820B54CE0B7
C48C73F160B9DB52E824ED1453E38B9F25392B6404619B2A26F17188A9AC327B
1498AEE41D1149D835AB9755C1366D630364BFB486277871E53C35725F10CE73
F6324710EF33A3824866E3C720B5E544901F122EE4532566E1C9CA22DD747BC3
6C886710808B95E94038390DCC8AB67E9C6849A0F0123677B02B33E7D94BC777
64C7CB7B6AE84C399F0F3247BF9116C04452914A3D9D4AFFBD363FF47A0276B3
0E4871F944CA3B72A2AB7F822435D18DAFC5A772EC4713B575F4DB7D011E8C5A
DC1FA0EA0DFD2C27F4528F53074340AD0AD82D25C7F2B44F3F944B7B9C337742
19585FF8A7887C3E6908D5FFD987F2550F442E863289981C355697909EF6712D
1AE114EBAD72519D68F3D574C4E3729932FBB75009EBBB04137ED7976D031DAB
65785DD5B6CA6CE52701DD96136C6439E5867992A735DE9C6F593D6575ECF81D
4DE05C7EC54C14838D9529D468D089744BBC06BE0834EEE8742D00F187FA1878
0647C4156060E3BF1BC9F7B214C0AA55C7EAAEFCFE07EB790D5EDF22C164DB3A
2CEB836DD8BB17C529FB97BFA5EF14B0931F56FBEB6FA7886CC4341C2543E3E3
F48588E269343FD0DDE06BAAC368EC5B31B6641EBEA08A280FD232D9195A584D
7B0BA5A5B85E1FAA4AE8E59074B59EAABA62719D387E9050DA6F4D3F0F740B51
7291A442FEA5761D2158B90238907C48BB5A3C228C6F8643C0C2709AB3DADB41
77A5B3A19E8180D80463BA8E008D0D3E93F7BA8E23277CD50B052C9ECD00B5BC
BAA97E39297745EAA433B6732143852346F8169B5FAC9955898F52A51A7A5934
C0AB581D0FA632AB1018842872CFF96A87D3077F541E30F667080B143160F922
28BED6A80C155A67FEEF56D0ED381D88342243DC8B37C90ED8F680C54EB58B53
4C942D37B97CBF995F612E4F58DB8BD05BF683951DD383BE60F1CEA51D7155B1
DE0C88F7EABCE7A549477F60C60F48A09053230E5FFB4D57EB6071606F7186BC
6AFA386C931512AA488C62E35CFBDC465EB350D2285183299AA26E214888D14D
044311F4926A71EC9664D637BE9E58C5D0795341B8F3909B4ABA159C0E216043
4C853781A37DBE83C332BDEED18E7DDDDA2E0620DB51267D0D98422532842DC0
DD29FF5E55B294FA45BDB83E5F8645B77E42A47D254920A098F8BD8044C55829
212855C3703DFD659FAC2906F3A3BBFC5223ADB700D4CE1179C8AB660E3B0D6B
1613A54140B02AEC5A49CC8F3A908A91BFAC37705BAA2F99A8F2C2ED5517291D
B7B2489AFC057C0B3B5E1A711E6BF4A4E63FFDD3D3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /WNNWSN+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 110 145 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
-10 10 1080 1440 re
f
-10 10 1080 1440 re
f
260 130 810 1275 re
f
7.5 w
2 J
1 j
/DeviceGray {} CS
[0.1489] SC
260 130 m
1070 130 l
S
503 130 m
503 117.25 l
S
827 130 m
827 117.25 l
S
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 45.05 3.575] Tm
0 0 Td
/F8_0 6.99975 Tf
(KO)
[4.668833
0
5.445806
0] Tj
-1951.55 TJm
(LacZ KO)
[3.891861
0
3.891861
0
3.499875
0
4.276847
0
1.945931
0
4.668833
0
5.445806
0] Tj
Q
260 130 m
260 1405 l
S
260 130 m
247.25 130 l
S
260 448.75 m
247.25 448.75 l
S
260 767.5 m
247.25 767.5 l
S
260 1086.25 m
247.25 1086.25 l
S
260 1405 m
247.25 1405 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 18.825 10.375] Tm
0 0 Td
/F8_0 6.99975 Tf
(0)
[3.891861
0] Tj
-3.75 31.875 Td
(50)
[3.891861
0
3.891861
0] Tj
-7.5 63.75 Td
(100)
[3.891861
0
3.891861
0
3.891861
0] Tj
-7.5 95.625 Td
(150)
[3.891861
0
3.891861
0
3.891861
0] Tj
-7.5 127.5 Td
(200)
[3.891861
0
3.891861
0
3.891861
0] Tj
[0 1 -1 0 8.075 35.5] Tm
0 0 Td
/F8_0 7.70025 Tf
(Charge Transfer \(-pA*s\))
[5.559581
0
4.281339
0
4.281339
0
2.564183
0
4.281339
0
4.281339
0
2.14067
0
4.704853
0
2.564183
0
4.281339
0
4.281339
0
3.850125
0
2.14067
0
4.281339
0
2.564183
0
2.14067
0
2.564183
0
2.564183
0
4.281339
0
5.136067
0
2.995397
0
3.850125
0
2.564183
0] Tj
Q
/DeviceGray {} cs
[0.7012] sc
518.809 246.609 m
518.809 255.34 511.73 262.422 503 262.422 c
494.27 262.422 487.191 255.34 487.191 246.609 c
487.191 237.879 494.27 230.801 503 230.801 c
511.73 230.801 518.809 237.879 518.809 246.609 c
f
518.809 259.875 m
518.809 268.605 511.73 275.684 503 275.684 c
494.27 275.684 487.191 268.605 487.191 259.875 c
487.191 251.145 494.27 244.063 503 244.063 c
511.73 244.063 518.809 251.145 518.809 259.875 c
f
518.809 423.922 m
518.809 432.652 511.73 439.734 503 439.734 c
494.27 439.734 487.191 432.652 487.191 423.922 c
487.191 415.191 494.27 408.113 503 408.113 c
511.73 408.113 518.809 415.191 518.809 423.922 c
f
518.809 208.523 m
518.809 217.254 511.73 224.336 503 224.336 c
494.27 224.336 487.191 217.254 487.191 208.523 c
487.191 199.797 494.27 192.715 503 192.715 c
511.73 192.715 518.809 199.797 518.809 208.523 c
f
518.809 370.367 m
518.809 379.098 511.73 386.176 503 386.176 c
494.27 386.176 487.191 379.098 487.191 370.367 c
487.191 361.637 494.27 354.555 503 354.555 c
511.73 354.555 518.809 361.637 518.809 370.367 c
f
518.809 213.105 m
518.809 221.836 511.73 228.914 503 228.914 c
494.27 228.914 487.191 221.836 487.191 213.105 c
487.191 204.375 494.27 197.297 503 197.297 c
511.73 197.297 518.809 204.375 518.809 213.105 c
f
518.809 421.594 m
518.809 430.324 511.73 437.402 503 437.402 c
494.27 437.402 487.191 430.324 487.191 421.594 c
487.191 412.863 494.27 405.785 503 405.785 c
511.73 405.785 518.809 412.863 518.809 421.594 c
f
518.809 404.32 m
518.809 413.051 511.73 420.133 503 420.133 c
494.27 420.133 487.191 413.051 487.191 404.32 c
487.191 395.59 494.27 388.512 503 388.512 c
511.73 388.512 518.809 395.59 518.809 404.32 c
f
518.809 908.973 m
518.809 917.703 511.73 924.781 503 924.781 c
494.27 924.781 487.191 917.703 487.191 908.973 c
487.191 900.242 494.27 893.164 503 893.164 c
511.73 893.164 518.809 900.242 518.809 908.973 c
f
518.809 479.098 m
518.809 487.828 511.73 494.91 503 494.91 c
494.27 494.91 487.191 487.828 487.191 479.098 c
487.191 470.367 494.27 463.289 503 463.289 c
511.73 463.289 518.809 470.367 518.809 479.098 c
f
518.809 261.949 m
518.809 270.68 511.73 277.758 503 277.758 c
494.27 277.758 487.191 270.68 487.191 261.949 c
487.191 253.219 494.27 246.141 503 246.141 c
511.73 246.141 518.809 253.219 518.809 261.949 c
f
518.809 289.887 m
518.809 298.617 511.73 305.695 503 305.695 c
494.27 305.695 487.191 298.617 487.191 289.887 c
487.191 281.156 494.27 274.078 503 274.078 c
511.73 274.078 518.809 281.156 518.809 289.887 c
f
518.809 612.676 m
518.809 621.406 511.73 628.484 503 628.484 c
494.27 628.484 487.191 621.406 487.191 612.676 c
487.191 603.945 494.27 596.867 503 596.867 c
511.73 596.867 518.809 603.945 518.809 612.676 c
f
518.809 415.215 m
518.809 423.945 511.73 431.023 503 431.023 c
494.27 431.023 487.191 423.945 487.191 415.215 c
487.191 406.484 494.27 399.406 503 399.406 c
511.73 399.406 518.809 406.484 518.809 415.215 c
f
842.809 292.84 m
842.809 301.57 835.73 308.648 827 308.648 c
818.27 308.648 811.191 301.57 811.191 292.84 c
811.191 284.109 818.27 277.027 827 277.027 c
835.73 277.027 842.809 284.109 842.809 292.84 c
f
842.809 246.68 m
842.809 255.41 835.73 262.492 827 262.492 c
818.27 262.492 811.191 255.41 811.191 246.68 c
811.191 237.949 818.27 230.871 827 230.871 c
835.73 230.871 842.809 237.949 842.809 246.68 c
f
842.809 300.445 m
842.809 309.176 835.73 316.254 827 316.254 c
818.27 316.254 811.191 309.176 811.191 300.445 c
811.191 291.715 818.27 284.633 827 284.633 c
835.73 284.633 842.809 291.715 842.809 300.445 c
f
842.809 230.105 m
842.809 238.836 835.73 245.914 827 245.914 c
818.27 245.914 811.191 238.836 811.191 230.105 c
811.191 221.375 818.27 214.297 827 214.297 c
835.73 214.297 842.809 221.375 842.809 230.105 c
f
842.809 298.129 m
842.809 306.859 835.73 313.941 827 313.941 c
818.27 313.941 811.191 306.859 811.191 298.129 c
811.191 289.398 818.27 282.32 827 282.32 c
835.73 282.32 842.809 289.398 842.809 298.129 c
f
842.809 393.93 m
842.809 402.66 835.73 409.738 827 409.738 c
818.27 409.738 811.191 402.66 811.191 393.93 c
811.191 385.199 818.27 378.121 827 378.121 c
835.73 378.121 842.809 385.199 842.809 393.93 c
f
842.809 280.836 m
842.809 289.566 835.73 296.645 827 296.645 c
818.27 296.645 811.191 289.566 811.191 280.836 c
811.191 272.105 818.27 265.023 827 265.023 c
835.73 265.023 842.809 272.105 842.809 280.836 c
f
842.809 251.926 m
842.809 260.656 835.73 267.734 827 267.734 c
818.27 267.734 811.191 260.656 811.191 251.926 c
811.191 243.195 818.27 236.113 827 236.113 c
835.73 236.113 842.809 243.195 842.809 251.926 c
f
842.809 228.516 m
842.809 237.246 835.73 244.324 827 244.324 c
818.27 244.324 811.191 237.246 811.191 228.516 c
811.191 219.785 818.27 212.703 827 212.703 c
835.73 212.703 842.809 219.785 842.809 228.516 c
f
842.809 491.254 m
842.809 499.984 835.73 507.063 827 507.063 c
818.27 507.063 811.191 499.984 811.191 491.254 c
811.191 482.523 818.27 475.445 827 475.445 c
835.73 475.445 842.809 482.523 842.809 491.254 c
f
842.809 608.5 m
842.809 617.23 835.73 624.309 827 624.309 c
818.27 624.309 811.191 617.23 811.191 608.5 c
811.191 599.77 818.27 592.688 827 592.688 c
835.73 592.688 842.809 599.77 842.809 608.5 c
f
9.9975 w
0 J
/DeviceGray {} CS
[0] SC
503 394.008 m
503 343.832 l
S
503 394.008 m
503 444.184 l
S
/DeviceGray {} cs
[0] sc
527.996 394.008 m
527.996 380.199 516.809 369.012 503 369.012 c
489.191 369.012 478.004 380.199 478.004 394.008 c
478.004 407.816 489.191 419.008 503 419.008 c
516.809 419.008 527.996 407.816 527.996 394.008 c
f
/DeviceRGB {} CS
[1 0 0] SC
827 329.379 m
827 292.863 l
S
827 329.379 m
827 365.891 l
S
/DeviceRGB {} cs
[1 0 0] sc
851.996 329.379 m
851.996 315.57 840.809 304.379 827 304.379 c
813.191 304.379 802.004 315.57 802.004 329.379 c
802.004 343.184 813.191 354.375 827 354.375 c
840.809 354.375 851.996 343.184 851.996 329.379 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font WNNWSN+Helvetica
%%EOF
