%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.46.0 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.4.0.813654 \\(R2018a\\). Operating System: Windows 7)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 110 146
%%HiResBoundingBox: 0 0 110 146
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font YPEHEM+Helvetica
%!FontType1-1.0: YPEHEM+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /YPEHEM+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 762 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 48 /zero put
dup 49 /one put
dup 53 /five put
dup 65 /A put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 79 /O put
dup 90 /Z put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 109 /m put
dup 110 /n put
dup 112 /p put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB95B33C0D340292570CC0A750D3305A801A0BC785104DA99313C7BB0D
BCD1AC9D91544DEFBFF5A12FE29BBC46A9F827225371F486122EA97D53872F49
61E69C8CC96D8431CA6E65923B1BAF5757C5EED885944D17552FBCFB71445136
07166F8F97886C813FBA63E3FCDF57F46187147FA9BAB6A5708B0EAED5F0BE46
8E57E688F9D862CD36904CDAF208AC95D924CD7C5BE9DF8F52C4E7C6F86817DF
CB6434D81F4711409FF1950E9AAC610CDB8502B2459F9EE25E9E1372BE83DF0A
72B6916B7B71173E5FBDCC69350194BBA2EF352B3AFEADD57DC057ACE32BBF59
51AAC722937F9848DCD4070B6992565154C199AB93C2D9F68764E1D3C899A06C
6F596E750142B9124856FA78C7AE53378D493A6371FC1B2607FF1A885D115EDD
3428555CB6682F214B058A743A78DD00991B1CA02AF2C2D45B50721794667545
D60360A43137BCECA765E3DD379A5FDC795D21A4511712706820CAD3DEBE87B6
5995284064A7217C1CC1101A4D1BBFE1E6035D167ECDF5FE39341D652CA99B6F
4251C5D2457B5B06AA971212D8AFB53C89FEB0D15DF4E6B91464409E8A55452F
40A898FC9DD05EC403F037AFCB6DCFCEA7E8EBC2C58485DF75296D163E4E0703
2B45B2F755A0960BABCDB2BE0CC78076089DE4F84B75A9680625D8D2C57FE170
EEA79425D7798AB3D533CFEE5EEF8E8D34831C05FA7C0F95B784BFD30B83F8D6
9467247065D634F83647B8B5CE4471C841867B8F6218B62D7766078F8BB6289F
D67A1B3E1D30981DDD0CF20C89F7ED7E5648D39820DC7C9A9535F38BDC7DC0C4
B5F6E4D8F1B64A604E6F0182E6C6A08BAB59931003A91CC390CB4E8725392728
A7EA07E59A88E79E653F77FD028B9D8ADB5BE91378CCCCAA655728225E5475E9
730FC462836B9A7FDCD6F67337B133C43A018DF94FF0E588D984CE06895EE5CB
73BAAAA0895961C27C4C40B7728B2E1F8F1AE2F0959656CD47386DE978B1AC67
CA978FB981E6D9424A4B01EE4062CF50B745F05F2B9D6EF029F65B4353DD62FE
A9ABAD29D626E44F42B834F97D00F8ED534871C9BE3BD5994CE942B6F85F825A
84A239711B96BE10E281EB0187CDB8FCFA134373CA595C82881D3C9742224D0A
13F6351D435C479B4E1140D77005D9D5BF732FC8710E17C1153A310394CCEFA3
82C31D8834F2F9ADFA19912E66E0E897432C9656B9A5A90471FE0D1EEE4A2F92
CAD99F57B972175E94573ADB01CBF44C0987B7D804CCAA5A72F6C86E21F85694
54CC3549DE17F6C3632726DE5991AAE120D972881F90E24D74389C7AE99FBE3C
290BFE7C8C3586CA4CAFB43D9AB80687430893D9DC8D944C364D8E785C89B81F
11A8912303444340AB0B234C27C9EE0971022EE05D8ED6A38708CB0BB38EC648
52488466527263B72FFCFB656B8C1A692082A515D6294538C3EB7521C5F3D2EB
563357143A37C4C78F4EBE6DB6B10DB778DEE9C49B7A9F8A9BA07768C955E85B
D7B3AFD81FA6C87CB2CCD3FBCC0BE3093EEB77002E9DD875B8F68895D768C8FA
D1958EDE4B8D67D2A6A64889BDA498E8411B36C85A2197455D8B661E8CD8CB46
E884E3AFA44ABFF1F99FD484CA48E556AF94997A48E59626163F29764DD6DB16
EA3611D9CFCDA27861EDE1FE5DDD03BCB6D6116C9985BF315B98C784BD028D31
940A23960B45D62D5B14BCD1A268D20B82C3264602914590D05495D94345F01B
F998C33BB9BF2FD4D257A50AB10536761BCEFF2609E7DA02A968DB1285071CD5
C5D9E6C275497636E1E9C5DC0AB17B8479A77D5FB1DF632AE992D67CC86E2887
89272341C3253FF55B93C772048A836E9628EE21D7D9406C7C5C6C8CE2D9BDA9
A5958F7AAEDE74A71A81DAF082229369F638F8AD30241D959587F3F00B6338DF
14BDCB93C98FDB7E48A0163022490CAA514F65D729916849D239348C09799C71
DB7CBBA14751242A69E6ADDF459421556DBF20E72EDA60746898854599C14B7B
1C3885B2FD71CA5DB568B9F5E853565695985C24B2652DCEA5828C606368503C
DC32E6D9D8AA24E61CF289871C95D62DE5442C8281E593C65FE06E624D4A29CF
3DABDF52FDF77DA6EE358E0F6835CF8DF07E613614302128AA298DDA2EE37BA6
12A1F04F4F63A17105D92DBA05C80B3893647E35EE6BDB8BC522F08E549FF905
E362DD12B2984BECB792BF9F866B306533206F7529FF39EAD3B784E6E993E509
2D1E69E5059463282D185AD07624A27593640D97EA7CB5FC4F9B8DAD2D67D4F0
C8554711AB46865FA5ACD9A0F4A9F3A3252E79440EB2F17749425194F6C0B44C
8A59CDB50D4B7978E452F00796211AD194C2EA3270CC0AB6676A8857C59508D6
10CEF0346884FEA6202C19DD14C70F6051DA611EB79698EC34D3EF1E67314D18
5AD9494B11C3720E462C02EF606CF989258306C7C16504E5217360F719592781
F092D50E9257CFAAD15D23BA9F63D63DFD3C96DE7106F58C8927CE3FF4C78D8E
398BDDCC284258D925A4A4808E80FA2FB26F93D6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /YPEHEM+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 110 146 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
-10 10 1080 1440 re
f
-10 10 1080 1440 re
f
260 130 810 1282.5 re
f
7.5 w
2 J
1 j
/DeviceGray {} CS
[0.1489] SC
260 130 m
1070 130 l
S
503 130 m
503 117.211 l
S
827 130 m
827 117.211 l
S
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 45.05 3.57109] Tm
0 0 Td
/F8_0 6.99975 Tf
(KO)
[4.668833
0
5.445806
0] Tj
-1951.55 TJm
(LacZ KO)
[3.891861
0
3.891861
0
3.499875
0
4.276847
0
1.945931
0
4.668833
0
5.445806
0] Tj
Q
260 130 m
260 1412.5 l
S
260 130 m
247.211 130 l
S
260 557.5 m
247.211 557.5 l
S
260 985 m
247.211 985 l
S
260 1412.5 m
247.211 1412.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 18.8211 10.375] Tm
0 0 Td
/F8_0 6.99975 Tf
(0)
[3.891861
0] Tj
-3.75 42.75 Td
(50)
[3.891861
0
3.891861
0] Tj
-7.5 85.5 Td
(100)
[3.891861
0
3.891861
0
3.891861
0] Tj
-7.5 128.25 Td
(150)
[3.891861
0
3.891861
0
3.891861
0] Tj
[0 1 -1 0 8.07109 50.125] Tm
0 0 Td
/F8_0 7.70025 Tf
(Mean Amp \(pA\))
[6.414308
0
4.281339
0
4.281339
0
4.281339
0
2.14067
0
5.136067
0
6.414308
0
4.281339
0
2.14067
0
2.564183
0
4.281339
0
5.136067
0
2.564183
0] Tj
Q
/DeviceGray {} cs
[0.7012] sc
518.809 570.145 m
518.809 578.875 511.73 585.957 503 585.957 c
494.27 585.957 487.191 578.875 487.191 570.145 c
487.191 561.418 494.27 554.336 503 554.336 c
511.73 554.336 518.809 561.418 518.809 570.145 c
f
518.809 615.668 m
518.809 624.395 511.73 631.477 503 631.477 c
494.27 631.477 487.191 624.395 487.191 615.668 c
487.191 606.938 494.27 599.855 503 599.855 c
511.73 599.855 518.809 606.938 518.809 615.668 c
f
518.809 976.465 m
518.809 985.195 511.73 992.273 503 992.273 c
494.27 992.273 487.191 985.195 487.191 976.465 c
487.191 967.734 494.27 960.656 503 960.656 c
511.73 960.656 518.809 967.734 518.809 976.465 c
f
518.809 508.75 m
518.809 517.48 511.73 524.563 503 524.563 c
494.27 524.563 487.191 517.48 487.191 508.75 c
487.191 500.023 494.27 492.941 503 492.941 c
511.73 492.941 518.809 500.023 518.809 508.75 c
f
518.809 888.672 m
518.809 897.402 511.73 904.48 503 904.48 c
494.27 904.48 487.191 897.402 487.191 888.672 c
487.191 879.941 494.27 872.863 503 872.863 c
511.73 872.863 518.809 879.941 518.809 888.672 c
f
518.809 529.855 m
518.809 538.586 511.73 545.664 503 545.664 c
494.27 545.664 487.191 538.586 487.191 529.855 c
487.191 521.125 494.27 514.047 503 514.047 c
511.73 514.047 518.809 521.125 518.809 529.855 c
f
518.809 1228.15 m
518.809 1236.88 511.73 1243.96 503 1243.96 c
494.27 1243.96 487.191 1236.88 487.191 1228.15 c
487.191 1219.42 494.27 1212.34 503 1212.34 c
511.73 1212.34 518.809 1219.42 518.809 1228.15 c
f
518.809 989.727 m
518.809 998.457 511.73 1005.54 503 1005.54 c
494.27 1005.54 487.191 998.457 487.191 989.727 c
487.191 981 494.27 973.918 503 973.918 c
511.73 973.918 518.809 981 518.809 989.727 c
f
518.809 973.266 m
518.809 981.996 511.73 989.078 503 989.078 c
494.27 989.078 487.191 981.996 487.191 973.266 c
487.191 964.539 494.27 957.457 503 957.457 c
511.73 957.457 518.809 964.539 518.809 973.266 c
f
518.809 619.344 m
518.809 628.074 511.73 635.152 503 635.152 c
494.27 635.152 487.191 628.074 487.191 619.344 c
487.191 610.613 494.27 603.535 503 603.535 c
511.73 603.535 518.809 610.613 518.809 619.344 c
f
518.809 616.543 m
518.809 625.27 511.73 632.352 503 632.352 c
494.27 632.352 487.191 625.27 487.191 616.543 c
487.191 607.813 494.27 600.73 503 600.73 c
511.73 600.73 518.809 607.813 518.809 616.543 c
f
518.809 1345.06 m
518.809 1353.79 511.73 1360.88 503 1360.88 c
494.27 1360.88 487.191 1353.79 487.191 1345.06 c
487.191 1336.33 494.27 1329.25 503 1329.25 c
511.73 1329.25 518.809 1336.33 518.809 1345.06 c
f
518.809 962.363 m
518.809 971.094 511.73 978.172 503 978.172 c
494.27 978.172 487.191 971.094 487.191 962.363 c
487.191 953.633 494.27 946.551 503 946.551 c
511.73 946.551 518.809 953.633 518.809 962.363 c
f
842.809 709.953 m
842.809 718.684 835.73 725.762 827 725.762 c
818.27 725.762 811.191 718.684 811.191 709.953 c
811.191 701.223 818.27 694.145 827 694.145 c
835.73 694.145 842.809 701.223 842.809 709.953 c
f
842.809 551.551 m
842.809 560.277 835.73 567.359 827 567.359 c
818.27 567.359 811.191 560.277 811.191 551.551 c
811.191 542.82 818.27 535.738 827 535.738 c
835.73 535.738 842.809 542.82 842.809 551.551 c
f
842.809 790.719 m
842.809 799.449 835.73 806.527 827 806.527 c
818.27 806.527 811.191 799.449 811.191 790.719 c
811.191 781.988 818.27 774.91 827 774.91 c
835.73 774.91 842.809 781.988 842.809 790.719 c
f
842.809 496.063 m
842.809 504.793 835.73 511.875 827 511.875 c
818.27 511.875 811.191 504.793 811.191 496.063 c
811.191 487.336 818.27 480.254 827 480.254 c
835.73 480.254 842.809 487.336 842.809 496.063 c
f
842.809 701.242 m
842.809 709.973 835.73 717.055 827 717.055 c
818.27 717.055 811.191 709.973 811.191 701.242 c
811.191 692.512 818.27 685.434 827 685.434 c
835.73 685.434 842.809 692.512 842.809 701.242 c
f
842.809 944.711 m
842.809 953.438 835.73 960.52 827 960.52 c
818.27 960.52 811.191 953.438 811.191 944.711 c
811.191 935.98 818.27 928.898 827 928.898 c
835.73 928.898 842.809 935.98 842.809 944.711 c
f
842.809 593.816 m
842.809 602.547 835.73 609.625 827 609.625 c
818.27 609.625 811.191 602.547 811.191 593.816 c
811.191 585.086 818.27 578.004 827 578.004 c
835.73 578.004 842.809 585.086 842.809 593.816 c
f
842.809 579.352 m
842.809 588.082 835.73 595.164 827 595.164 c
818.27 595.164 811.191 588.082 811.191 579.352 c
811.191 570.621 818.27 563.543 827 563.543 c
835.73 563.543 842.809 570.621 842.809 579.352 c
f
842.809 498.855 m
842.809 507.586 835.73 514.668 827 514.668 c
818.27 514.668 811.191 507.586 811.191 498.855 c
811.191 490.125 818.27 483.047 827 483.047 c
835.73 483.047 842.809 490.125 842.809 498.855 c
f
842.809 1075.19 m
842.809 1083.92 835.73 1091 827 1091 c
818.27 1091 811.191 1083.92 811.191 1075.19 c
811.191 1066.46 818.27 1059.38 827 1059.38 c
835.73 1059.38 842.809 1066.46 842.809 1075.19 c
f
842.809 1353.06 m
842.809 1361.79 835.73 1368.87 827 1368.87 c
818.27 1368.87 811.191 1361.79 811.191 1353.06 c
811.191 1344.33 818.27 1337.25 827 1337.25 c
835.73 1337.25 842.809 1344.33 842.809 1353.06 c
f
9.9975 w
0 J
/DeviceGray {} CS
[0] SC
503 890.371 m
503 799.105 l
S
503 890.371 m
503 981.641 l
S
/DeviceGray {} cs
[0] sc
527.996 890.371 m
527.996 876.566 516.809 865.375 503 865.375 c
489.191 865.375 478.004 876.566 478.004 890.371 c
478.004 904.18 489.191 915.371 503 915.371 c
516.809 915.371 527.996 904.18 527.996 890.371 c
f
/DeviceRGB {} CS
[1 0 0] SC
827 754.047 m
827 672.398 l
S
827 754.047 m
827 835.691 l
S
/DeviceRGB {} cs
[1 0 0] sc
851.996 754.047 m
851.996 740.238 840.809 729.051 827 729.051 c
813.191 729.051 802.004 740.238 802.004 754.047 c
802.004 767.855 813.191 779.043 827 779.043 c
840.809 779.043 851.996 767.855 851.996 754.047 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font YPEHEM+Helvetica
%%EOF
