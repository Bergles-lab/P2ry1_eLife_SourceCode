%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.60.1 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.5.0.944444 \\(R2018b\\). Operating System: Windows 10)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 85 122
%%HiResBoundingBox: 0 0 85 122
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font FMZHRR+Helvetica
%!FontType1-1.0: FMZHRR+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /FMZHRR+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 761 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 53 /five put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 77 /M put
dup 82 /R put
dup 83 /S put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 115 /s put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB9661B73A8DEAE1451FE944D5E888543FA6C98663C55504EEC56CA43F
20EFB4D29448D2B17D10817A3662559968B69694ED50081C696B02D617016C56
371ABA142ECD47FBF3DBC6C7A110CF01E1E58FD92ECAEEC9EC0D7031968450D5
0CDDF69FD7ABA84CB24E9D4AD6484A660D7251B8EAF4B210E9A2C476A6B88946
257C2674B5E40EA7B3F2C5DF359408B549FC5665E5FE5168E77C984A021C55C7
FB96D7238D8567E20885864BAE7F9BDE60BAE997BB3D1B4DC2E8B5B6A33B6CFF
AE3E96D912F325B97E41AEE1FC041EB5382A1770C354FA53EBFB55B6F7FE3814
E6B34D7AF505908A07F51DA3541B2789F149A0F821E05DB4D17567646B3D1CC5
2E85D472BA8890A299A87865329A9F47DB1B834679C89A7E1D1BBBE789A76CF9
9C2D1AD8AB92278A1DC8C025C15C9590DABF94D3E7583E49A9B04773AFB3B3AB
B41CB6869817D64BEE7FD60747078FEBC22B872888A0CACB4D97349071BEF7C8
E2A36510A4EF4ED25E569F4B756000FF708BC8CA837AB15B2594067E84DC157B
F43586041DF24D41704D90B174B92E068778D923F67EEF96D2D45BE5AE8F77BA
D7B53A2DB48E5FA30A95D07E0C97AC8A52D02E4540AECC6E5D2F28DD097C80C9
AD5C999F90D2A1583C16A44589C6DF9B0413C3638C5B83339F701318D4E0821A
5192F2A0D0E56F152FB92B81D9708B3C734E1B6D4245DC0C85BD01C8C542984C
B3809434CFD8F62FE29FCD8D16DE252DDAC15417EF59D6C8DDEDF20EBA562BDB
DC89168B9E408BC71AFAB65A3A47EEB55D9583E89D3EE785A13A7078E5C9B195
BE5077F0D8CC9FDCE73564BFAC12246D40BE7B4FA806B6AD67431C3F7FEB4EB0
A880CAFEC35CF34CC0B97587BF0FC6C2E92FEC72C7B4DD5C96EEF9966F88F734
426346FE3298C3E4EF03474B1FBD86D12825338F252F0C80A2040355730B6A81
52D6040F55765888737BEF1887D88F841415C4AC77694AEA5C20DD17842A977E
EEBF68DADB4E12CFBA9EB0D4DDC22E7A2D82331CA0CD42DC1928650D55C1B019
A0E3BAC318F24ED407331CC8C7A325C976E8D4E561C7EE44E4E0FFF6FB2FDDFA
68359419E9104F8983752468633395059868A9438EF47424065EA778306C19F9
F1C64AA0FBDBA659A8D7CA2CA47714F3662A4165FB1B297337303909D780C248
A115EA8218E8C0D430D04912AE22CA4238C5CB093939EAFAEC26D70A86E4533B
647BC79AB5B3D964CCF4639E2F8AA6F2D3CF785F1D81EF5CD346019D62346A9B
D679B305D87BBCA62F922F9FB31DDDBB805E495656633BD8EFC0F5D6C7A5DA3D
5C8386C0A9256277255F69E4FBDD824FBF81FA02D74D1A450438C846EB00FC7D
98EB634400A1B9A503C60611EB55AA935F9870E57804A3A3F432B5A110EEB16A
67583B59C1D033E80400D386D2D0FA4DED64B513182ADEA03BB81FC4A6EE4622
DA460884BBF1EFBCCA1960F5909E3AF252001140BCB43378BEBB9205169BDA56
392E0AB218B8FE1E1637FB1238EADD75427D1669C9369EBAF8115DB0EE429DDA
5E83937DFBC78BB26EAC92B9F2580B9B03788CC6418B35E0BAF1BC362CE38423
01B683FEFA3BEBCB2BC54A9648141ABEE4A4EE17454693D1386059E0BEA7CDB9
D35DCD3E73A5CBFF53ADE2EB913B04C343652805DA0519C2B7C4759C51D1E34D
CCE0592F307F5891B64D6F62030BBFEA7F2350A92C5654A4826782C2C45C0CD8
B52056FAF70792D6BF7F3A5A8B937B45B24543032F42AEDFAEF09EDCB2E9DB20
4CBD15C5EAADB511DB47842648ACF9D5249AF8CF492E670266513B33AC51A48F
B41CD0C16E1ADE3FDFB0D98CC424342AB15D9ED3983FBDF1B8FC8F2A0A95DA4E
E0ECB34072233143B7DDB659E63CBC116BB0DEFFBC704C031A2D5F60D3A82378
211FF988CB8A6D311CA8D2095DB769E7112AA5F23B8AD602B5BF8FC14893F5F1
807CB5CB02632DB0059873D5ED6825BD452F6B540F6058A21145F7039860F158
79FD712682301837AF5C4BE4A8BAC4767C20EEF7B6F007B5884B145D3FD91493
2B830F039E315EBA97CCDE312044D5EB20C376745E01DF6D559FB2E6D5109F97
425879F2BC113462000D427A06214576D6165F54C56A7182C0EC4FA936CB9A75
F4D27D297CFDD9EA453164C71A964B1B15F2CB2C23C9E963EAD35E12782CAFF8
4AD3231E8EC90E3FDEA58D595B6D9E97E7A5CBF1700361712AD3A8B38F53BA8A
1795E1C3C3721CEA0E8D83BD67F384F98294783CBF783FE55D2CB137C342BD44
21AF7058A6023F9B8D75BA13802854AAB55E17CCEC320B72B58755E29B2E749F
25E0476C0F2D4EBEBE507B9400F1D0E1BBF31C87AE9014F8960082BBD5B6BA79
60BC67AB07B7ACDC02C5B8B2BD809FC3BE93BCAC4391C75B066836F15F95FFBB
105A1EFFC0B5E92735F1A8974D304F3E13FDCF7DC7EF26C053E3C920C2794BB5
F4EA81AF9B0C7B42F08AECE3DB95537A31F0529561DFC034FAB9BEFB130CC75E
43B5BF1CD2A8816C053C0DCECF3878AFCDB0E88E0A2EF133FD7C3A7A46B50DF0
C735EFF1F3609738C5CC84915E94FBCC8A2390BDE7B9FA7D77EFB9CBF0910BA9
CB044B46C7706EE2F4058A823D65DB4707152F3789A6807EFAD094A3AA346358
4C15F1343C3BEA07B7D585DB3EC91D97EC52D68FC32E04D9D6A746169C4173D9
2819D64067465F92BD48C2FE727543B6508610F4C751F319910C70D9B73FE537
4A412CCC34B439A68CB37B8D5C6F963BF83850F7C1ED265643FE247975E61BEE
770AB5546C5ECF9D88D6B11EA88F463E376AD77F56E3CC780CCA4F6E56A150E0
C5F392C02C63782F684747B8B02E13DDDD3F61553F41252207C2A01DE86012AA
9C043204B50EE3BAEA6F503A11C723A1D405ED15F82D18D8639FF95365A609D1
19A5F5F6FBC3154C37F8FBE3FE7E9F38ECA45DAF0B5BA45053D5E721DFBE87A6
B9FB1FC744EE5F2AF2BA4CBE21AD9AF9A85C00B7E32F9EC2786E5BFCCC38B3EB
062B03523DCCB03C8281D2B499CAD2E19572CD3B4DE4F16EC3E174B04B448AEF
E37292044AD52DC57369B2914BBA218C49F8A3D48D5C08169145947AD0140A1A
4E70B591296235DB606F7CECAB43490D22430F0AB949FF07192B440D050591F6
96DDCD4B82575B802379DBCA48216BCC69BCE30F7AF78DC30FFC8CEE43138D98
C381552216CEDBFEB1E386C83C5273792FD8B68BA30CFC174BDFC2341264E965
B4D89B1688028C5B588E4F751C4D71EC7F313E14A51F60DAED5797288D47CC81
07FB00A26724375BE28ACBD2AE6CAEA1C95C4B7422D78D6705378F53E3335BAA
D953E5D7219CFC07B4C956E277C6D439F0FEC5253135EF3EDB8405D359293262
3A6B8C743BB7D309236B31775574A91F473312A135F75B7BF6DA398FC55F1F29
1460A3BB32D36C7F1275A3BA202B666B6CA906C33C78ED888036E10AF41BDE99
F7651DF2873010AF4D87BDEEBA53C0AD57A90AAEA06245ECC7C8325010B9316F
4300E89EAADEFCC62AC27F4BC442714B1C260989B0C5C96E2B9BBA6778AF1309
A8F68D4084953A32F1332890B34BF89E0EBD71789BDADE8F33121CCEFC8AD1D6
833E6BD8F09411D04A6101BA5C0287A75D281716290FA27F0D7C3173EEF84F8C
6299D2CE37BC5289982452D3DB671ED90BC1073D640128B46265B509592B8A3A
7FF18BB6DD988C5AA89E480D4758EAEB46C3500FF811AFB049F3B9EBCEA927A7
B6B07F0B2E9FE73D66B881030E2B3A8D4EB331D749ECF7947BA8E40936482E39
91387DBFF89F5925DBB1E95B6B57BCAB5822240AB54A6C03A5995A82A4671885
7690A217D842009DF984A14AB1F474BE0AD6B50837CD03F74B0DE24C64826C82
2250EA52217D06789ECAD7B4F2C99C4FF8E169F38E904AA7375FA764951B99B6
75BFB9C8EE3F24AB786483D0E8A05881F52ED42C302D29BCF7CF73CEAD8AAE94
B32870EA2359919C0CF5C42BE54B658F7272EF869388354008840D370648BC47
BBB76896BA7459CB54B278DB075E4BE6F38665F6AEAC2EE6828DC818487D558D
CEB43C4AB3D6D0D32EA176F367A0D9AA8855996E94A646BDFD1EEEDF92B34C2C
52CC92437E091DCE5202B746055ACB1BA1C151DA1AAD0108AC4AF7BEB1EA3329
F5EC7E7061E8B70BE325F2BA4C1DD0F6E609425251FBECB11300ED1A4B2CCABA
9C21055F3886
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /FMZHRR+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 85 122 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
0 10 900 1260 re
f
0 10 900 1260 re
f
270 317.5 547.5 855 re
f
7.5 w
2 J
1 j
/DeviceGray {} CS
[0] SC
270 317.5 m
817.5 317.5 l
S
434.25 317.5 m
434.25 308.949 l
S
653.25 317.5 m
653.25 308.949 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0.707107 0.707107 -0.707107 0.707107 25.9242 2.44805] Tm
0 0 Td
/F8_0 6.99975 Tf
(MRS2500)
[5.830792
0
5.05382
0
4.668833
0
3.891861
0
3.891861
0
3.891861
0
3.891861
0] Tj
20.7356 -15.4854 Td
(Blocktail)
[4.668833
0
1.553945
0
3.891861
0
3.499875
0
3.499875
0
1.945931
0
3.891861
0
1.553945
0
1.553945
0] Tj
Q
270 317.5 m
270 1172.5 l
S
270 317.5 m
261.449 317.5 l
S
270 460 m
261.449 460 l
S
270 602.5 m
261.449 602.5 l
S
270 745 m
261.449 745 l
S
270 887.5 m
261.449 887.5 l
S
270 1030 m
261.449 1030 l
S
270 1172.5 m
261.449 1172.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 10.4949 29.125] Tm
0 0 Td
/F8_0 6.99975 Tf
(-150)
[2.330917
0
3.891861
0
3.891861
0
3.891861
0] Tj
0 14.25 Td
(-100)
[2.330917
0
3.891861
0
3.891861
0
3.891861
0] Tj
3.75 28.5 Td
(-50)
[2.330917
0
3.891861
0
3.891861
0] Tj
9.75 42.75 Td
(0)
[3.891861
0] Tj
6 57 Td
(50)
[3.891861
0
3.891861
0] Tj
2.25 71.25 Td
(100)
[3.891861
0
3.891861
0
3.891861
0] Tj
2.25 85.5 Td
(150)
[3.891861
0
3.891861
0
3.891861
0] Tj
[0 1 -1 0 7.99492 31.375] Tm
0 0 Td
/F8_0 8.00025 Tf
(Change in baseline \(pA\))
[5.776181
0
4.448139
0
4.448139
0
4.448139
0
4.448139
0
4.448139
0
2.22407
0
1.776055
0
4.448139
0
2.22407
0
4.448139
0
4.448139
0
4.000125
0
4.448139
0
1.776055
0
1.776055
0
4.448139
0
4.448139
0
2.22407
0
2.664083
0
4.448139
0
5.336167
0
2.664083
0] Tj
Q
/DeviceGray {} cs
[0.7012] sc
450.059 410.145 m
450.059 418.875 442.98 425.957 434.25 425.957 c
425.52 425.957 418.441 418.875 418.441 410.145 c
418.441 401.414 425.52 394.336 434.25 394.336 c
442.98 394.336 450.059 401.414 450.059 410.145 c
f
450.059 394.492 m
450.059 403.219 442.98 410.301 434.25 410.301 c
425.52 410.301 418.441 403.219 418.441 394.492 c
418.441 385.762 425.52 378.68 434.25 378.68 c
442.98 378.68 450.059 385.762 450.059 394.492 c
f
450.059 454.504 m
450.059 463.234 442.98 470.313 434.25 470.313 c
425.52 470.313 418.441 463.234 418.441 454.504 c
418.441 445.773 425.52 438.691 434.25 438.691 c
442.98 438.691 450.059 445.773 450.059 454.504 c
f
450.059 579.746 m
450.059 588.477 442.98 595.559 434.25 595.559 c
425.52 595.559 418.441 588.477 418.441 579.746 c
418.441 571.016 425.52 563.938 434.25 563.938 c
442.98 563.938 450.059 571.016 450.059 579.746 c
f
450.059 408.406 m
450.059 417.137 442.98 424.215 434.25 424.215 c
425.52 424.215 418.441 417.137 418.441 408.406 c
418.441 399.676 425.52 392.598 434.25 392.598 c
442.98 392.598 450.059 399.676 450.059 408.406 c
f
450.059 641.5 m
450.059 650.23 442.98 657.309 434.25 657.309 c
425.52 657.309 418.441 650.23 418.441 641.5 c
418.441 632.77 425.52 625.691 434.25 625.691 c
442.98 625.691 450.059 632.77 450.059 641.5 c
f
669.059 1045.06 m
669.059 1053.79 661.98 1060.88 653.25 1060.88 c
644.52 1060.88 637.441 1053.79 637.441 1045.06 c
637.441 1036.34 644.52 1029.25 653.25 1029.25 c
661.98 1029.25 669.059 1036.34 669.059 1045.06 c
f
669.059 950.262 m
669.059 958.992 661.98 966.07 653.25 966.07 c
644.52 966.07 637.441 958.992 637.441 950.262 c
637.441 941.531 644.52 934.453 653.25 934.453 c
661.98 934.453 669.059 941.531 669.059 950.262 c
f
669.059 717.168 m
669.059 725.898 661.98 732.977 653.25 732.977 c
644.52 732.977 637.441 725.898 637.441 717.168 c
637.441 708.438 644.52 701.359 653.25 701.359 c
661.98 701.359 669.059 708.438 669.059 717.168 c
f
669.059 925.039 m
669.059 933.77 661.98 940.848 653.25 940.848 c
644.52 940.848 637.441 933.77 637.441 925.039 c
637.441 916.309 644.52 909.23 653.25 909.23 c
661.98 909.23 669.059 916.309 669.059 925.039 c
f
669.059 1100.73 m
669.059 1109.46 661.98 1116.54 653.25 1116.54 c
644.52 1116.54 637.441 1109.46 637.441 1100.73 c
637.441 1092 644.52 1084.92 653.25 1084.92 c
661.98 1084.92 669.059 1092 669.059 1100.73 c
f
9.9975 w
0 J
434.25 481.465 m
434.25 439.047 l
S
434.25 481.465 m
434.25 523.887 l
S
/DeviceGray {} cs
[0] sc
459.246 481.465 m
459.246 467.656 448.059 456.469 434.25 456.469 c
420.441 456.469 409.254 467.656 409.254 481.465 c
409.254 495.273 420.441 506.465 434.25 506.465 c
448.059 506.465 459.246 495.273 459.246 481.465 c
f
/DeviceRGB {} CS
[1 0 0] SC
653.25 1017.52 m
653.25 929.387 l
S
653.25 1017.52 m
653.25 1105.65 l
S
/DeviceRGB {} cs
[1 0 0] sc
678.246 1017.52 m
678.246 1003.71 667.059 992.523 653.25 992.523 c
639.441 992.523 628.254 1003.71 628.254 1017.52 c
628.254 1031.33 639.441 1042.52 653.25 1042.52 c
667.059 1042.52 678.246 1031.33 678.246 1017.52 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font FMZHRR+Helvetica
%%EOF
